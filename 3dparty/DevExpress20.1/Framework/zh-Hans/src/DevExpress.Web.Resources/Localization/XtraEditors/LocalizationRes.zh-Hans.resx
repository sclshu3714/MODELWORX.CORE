<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StringId.Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="StringId.CheckUnchecked" xml:space="preserve">
    <value>非校验</value>
  </data>
  <data name="StringId.CheckIndeterminate" xml:space="preserve">
    <value>不确定</value>
  </data>
  <data name="StringId.OK" xml:space="preserve">
    <value>确定(&amp;O)</value>
  </data>
  <data name="StringId.CheckChecked" xml:space="preserve">
    <value>校验</value>
  </data>
  <data name="StringId.DefaultBooleanDefault" xml:space="preserve">
    <value>默认值</value>
  </data>
  <data name="StringId.DefaultBooleanFalse" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="StringId.DefaultBooleanTrue" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="StringId.FilterClauseAnyOf" xml:space="preserve">
    <value>Is any of</value>
  </data>
  <data name="StringId.FilterEmptyEnter" xml:space="preserve">
    <value>&lt; 输入值 &gt;</value>
  </data>
  <data name="StringId.PreviewBusy" xml:space="preserve">
    <value>忙</value>
  </data>
  <data name="StringId.PreviewError" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="StringId.PreviewInitializing" xml:space="preserve">
    <value>初始化</value>
  </data>
  <data name="StringId.PreviewOffline" xml:space="preserve">
    <value>脱机</value>
  </data>
  <data name="StringId.PreviewOutOfMemory" xml:space="preserve">
    <value>内存不足</value>
  </data>
  <data name="StringId.PreviewPaperJam" xml:space="preserve">
    <value>卡纸</value>
  </data>
  <data name="StringId.PreviewPaperOut" xml:space="preserve">
    <value>出纸</value>
  </data>
  <data name="StringId.PreviewPaused" xml:space="preserve">
    <value>暂停</value>
  </data>
  <data name="StringId.PreviewReady" xml:space="preserve">
    <value>准备好了</value>
  </data>
  <data name="StringId.FilterGroupAnd" xml:space="preserve">
    <value>和</value>
  </data>
  <data name="StringId.PreviewTonerLow" xml:space="preserve">
    <value>碳粉不足</value>
  </data>
  <data name="StringId.FilterClauseLike" xml:space="preserve">
    <value>Is like</value>
  </data>
  <data name="StringId.FilterClauseNoneOf" xml:space="preserve">
    <value>Is none of</value>
  </data>
  <data name="StringId.FilterClauseNotLike" xml:space="preserve">
    <value>Is not like</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalEarlierThisYear" xml:space="preserve">
    <value>今年早些时候</value>
  </data>
  <data name="StringId.PreviewOutputBinFull" xml:space="preserve">
    <value>输出纸盒已满</value>
  </data>
  <data name="StringId.PreviewUserIntervention" xml:space="preserve">
    <value>用户干预</value>
  </data>
  <data name="StringId.PreviewWarmingUp" xml:space="preserve">
    <value>热身</value>
  </data>
  <data name="StringId.PreviewServerUnknown" xml:space="preserve">
    <value>服务器未知</value>
  </data>
  <data name="StringId.PreviewDoorOpen" xml:space="preserve">
    <value>把门打开</value>
  </data>
  <data name="StringId.PreviewPendingDeletion" xml:space="preserve">
    <value>挂起的删除</value>
  </data>
  <data name="StringId.PreviewPowerSave" xml:space="preserve">
    <value>电源保存</value>
  </data>
  <data name="StringId.PreviewProcessing" xml:space="preserve">
    <value>加工</value>
  </data>
  <data name="StringId.PreviewPaperProblem" xml:space="preserve">
    <value>PaperProblem</value>
  </data>
  <data name="StringId.PreviewPagePunt" xml:space="preserve">
    <value>页的平底船</value>
  </data>
  <data name="StringId.PreviewIOActive" xml:space="preserve">
    <value>IO 活动</value>
  </data>
  <data name="StringId.PreviewManualFeed" xml:space="preserve">
    <value>手动送纸</value>
  </data>
  <data name="StringId.PreviewNotAvaible" xml:space="preserve">
    <value>没有可用</value>
  </data>
  <data name="StringId.PreviewNoToner" xml:space="preserve">
    <value>预览没有碳粉</value>
  </data>
  <data name="StringId.FilterGroupOr" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="StringId.FilterMenuConditionAdd" xml:space="preserve">
    <value>添加条件</value>
  </data>
  <data name="StringId.FilterMenuGroupAdd" xml:space="preserve">
    <value>添加组</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalBeyondThisYear" xml:space="preserve">
    <value>超出了这一年</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalEarlierThisMonth" xml:space="preserve">
    <value>是这个月早些时候</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLastWeek" xml:space="preserve">
    <value>是最后一周</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLaterThisMonth" xml:space="preserve">
    <value>是本月晚些时候</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLaterThisYear" xml:space="preserve">
    <value>是今年晚些时候</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalPriorThisYear" xml:space="preserve">
    <value>今年是事先</value>
  </data>
  <data name="StringId.FilterAggregateCount" xml:space="preserve">
    <value>计数</value>
  </data>
  <data name="StringId.FilterAggregateExists" xml:space="preserve">
    <value>存在</value>
  </data>
  <data name="StringId.FilterAggregateMax" xml:space="preserve">
    <value>最大值</value>
  </data>
  <data name="StringId.FilterAggregateMin" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="StringId.FilterAggregateSum" xml:space="preserve">
    <value>总和</value>
  </data>
  <data name="StringId.FilterClauseContains" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="StringId.FilterClauseDoesNotContain" xml:space="preserve">
    <value>不包含</value>
  </data>
  <data name="StringId.FilterClauseDoesNotEqual" xml:space="preserve">
    <value>不等于</value>
  </data>
  <data name="StringId.FilterClauseEquals" xml:space="preserve">
    <value>等于</value>
  </data>
  <data name="StringId.FilterClauseGreater" xml:space="preserve">
    <value>大于</value>
  </data>
  <data name="StringId.FilterClauseGreaterOrEqual" xml:space="preserve">
    <value>大于或等于</value>
  </data>
  <data name="StringId.FilterClauseIsNotNull" xml:space="preserve">
    <value>是不能为空</value>
  </data>
  <data name="StringId.FilterClauseIsNotNullOrEmpty" xml:space="preserve">
    <value>不为空</value>
  </data>
  <data name="StringId.FilterClauseIsNull" xml:space="preserve">
    <value>为空</value>
  </data>
  <data name="StringId.FilterClauseIsNullOrEmpty" xml:space="preserve">
    <value>为空</value>
  </data>
  <data name="StringId.FilterClauseLessOrEqual" xml:space="preserve">
    <value>小于或等于</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalEarlierThisWeek" xml:space="preserve">
    <value>本周早些时候</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalLaterThisWeek" xml:space="preserve">
    <value>是本周晚些时候</value>
  </data>
  <data name="StringId.FilterClauseLess" xml:space="preserve">
    <value>小于</value>
  </data>
  <data name="StringId.FilterGroupNotAnd" xml:space="preserve">
    <value>Not And</value>
  </data>
  <data name="StringId.FilterGroupNotOr" xml:space="preserve">
    <value>Not Or</value>
  </data>
  <data name="StringId.FilterAggregateAvg" xml:space="preserve">
    <value>平均值</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalNextWeek" xml:space="preserve">
    <value>下个星期</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalToday" xml:space="preserve">
    <value>今天</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalTomorrow" xml:space="preserve">
    <value>明天</value>
  </data>
  <data name="StringId.FilterCriteriaToStringFunctionIsOutlookIntervalYesterday" xml:space="preserve">
    <value>昨天</value>
  </data>
  <data name="StringId.PreviewWaiting" xml:space="preserve">
    <value>等待</value>
  </data>
  <data name="StringId.PreviewDriverUpdateNeeded" xml:space="preserve">
    <value>所需的驱动程序更新</value>
  </data>
  <data name="StringId.ServerOffline" xml:space="preserve">
    <value>服务器处于脱机状态</value>
  </data>
  <data name="StringId.FilterClauseBetween" xml:space="preserve">
    <value>介于</value>
  </data>
  <data name="StringId.FilterClauseNotBetween" xml:space="preserve">
    <value>不介于</value>
  </data>
  <data name="StringId.PreviewPrinting" xml:space="preserve">
    <value>打印</value>
  </data>
</root>