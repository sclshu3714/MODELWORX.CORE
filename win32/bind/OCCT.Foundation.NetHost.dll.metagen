ImageRuntimeVersion: v4.0.30319
Assembly OCCT.Foundation.NetHost, Version=0.0.*, Culture=固定语言(固定国家/地区): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class TKernel.XStandard_UUID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32, UInt16, UInt16, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(_GUID*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    _GUID* Handle 'get ' : 
  Methods:
    GetUUID(_GUID*): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKernel.XStandard_GUID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Standard_GUID*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XStandard_UUID): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Char, Char, Char, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Standard_GUID* Handle 'get ' : 
  Methods:
    ToUUID(): PrivateScope, Public, HideBySig
    GetGUID(Standard_GUID*): PrivateScope, Public, HideBySig
    ToCString(SByte*): PrivateScope, Public, HideBySig
    ToExtString(Char*): PrivateScope, Public, HideBySig
    IsSame(XStandard_GUID): PrivateScope, Public, HideBySig
    op_Equality(XStandard_GUID): PrivateScope, Public, HideBySig, SpecialName
    IsNotSame(XStandard_GUID): PrivateScope, Public, HideBySig
    op_Inequality(XStandard_GUID): PrivateScope, Public, HideBySig, SpecialName
    Assign(XStandard_UUID): PrivateScope, Public, HideBySig
    Assign(XStandard_GUID): PrivateScope, Public, HideBySig
    op_Assign(XStandard_UUID): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(XStandard_GUID): PrivateScope, Public, HideBySig, SpecialName
    ShallowDump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    CheckGUIDFormat(SByte* IsConst IsConst): PrivateScope, Public, Static, HideBySig
    Hash(Int32 IsConst): PrivateScope, Public, HideBySig
    HashCode(XStandard_GUID, Int32): PrivateScope, Public, Static, HideBySig
    IsEqual(XStandard_GUID, XStandard_GUID): PrivateScope, Public, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKLCAF.XTDF_Label: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TDF_Label): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TDF_Label*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TDF_Label* Handle 'get ' : 
  Methods:
    SetNativeHandle(TDF_Label*): PrivateScope, Public, HideBySig
    GetLabel(TDF_Label*): PrivateScope, Public, HideBySig
    Nullify(): PrivateScope, Public, HideBySig
    Data(handle<TDF_Data>*): PrivateScope, Public, HideBySig
    Tag(): PrivateScope, Public, HideBySig
    Father(): PrivateScope, Public, HideBySig
    IsNull(): PrivateScope, Public, HideBySig
    Imported(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    IsImported(): PrivateScope, Public, HideBySig
    IsEqual(XTDF_Label): PrivateScope, Public, HideBySig
    op_Equality(XTDF_Label): PrivateScope, Public, HideBySig, SpecialName
    IsDifferent(XTDF_Label): PrivateScope, Public, HideBySig
    op_Inequality(XTDF_Label): PrivateScope, Public, HideBySig, SpecialName
    IsRoot(): PrivateScope, Public, HideBySig
    IsAttribute(Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    AddAttribute(handle<TDF_Attribute>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ForgetAttribute(Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ForgetAttribute(handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ForgetAllAttributes(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    ResumeAttribute(handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    FindAttribute(XStandard_GUID, Int32, XTDF_Attribute): PrivateScope, Public, HideBySig
    FindAttribute(Standard_GUID* IsImplicitlyDereferenced, Int32, handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    FindAttribute(XStandard_GUID, XTDF_Attribute&): PrivateScope, Public, HideBySig
    FindAttribute(Standard_GUID*, handle<TDF_Attribute>*): PrivateScope, Public, HideBySig
    MayBeModified(): PrivateScope, Public, HideBySig
    AttributesModified(): PrivateScope, Public, HideBySig
    HasAttribute(): PrivateScope, Public, HideBySig
    NbAttributes(): PrivateScope, Public, HideBySig
    Depth(): PrivateScope, Public, HideBySig
    IsDescendant(XTDF_Label): PrivateScope, Public, HideBySig
    Root(): PrivateScope, Public, HideBySig
    HasChild(): PrivateScope, Public, HideBySig
    NbChildren(): PrivateScope, Public, HideBySig
    FindChild(Int32 IsConst, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    NewChild(): PrivateScope, Public, HideBySig
    Transaction(): PrivateScope, Public, HideBySig
    HasLowerNode(XTDF_Label): PrivateScope, Public, HideBySig
    HasGreaterNode(XTDF_Label): PrivateScope, Public, HideBySig
    Dump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    op_LeftShift(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    ExtendedDump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, TDF_IDFilter* IsImplicitlyDereferenced, NCollection_IndexedMap<opencascade::handle<TDF_Attribute>\,NCollection_DefaultHasher<opencascade::handle<Standard_Transient> > >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    EntryDump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<TDF_Attribute> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKLCAF.XTDF_Attribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<TDF_Attribute>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    ID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetID(XStandard_GUID): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetID(Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNativeHandle(handle<TDF_Attribute>*): PrivateScope, Public, HideBySig
    Label(): PrivateScope, Public, HideBySig
    GetAttribute(handle<TDF_Attribute>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transaction(): PrivateScope, Public, HideBySig
    UntilTransaction(): PrivateScope, Public, HideBySig
    IsValid(): PrivateScope, Public, HideBySig
    IsNew(): PrivateScope, Public, HideBySig
    IsForgotten(): PrivateScope, Public, HideBySig
    IsAttribute(XStandard_GUID): PrivateScope, Public, HideBySig
    IsAttribute(Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    FindAttribute(XStandard_GUID, XTDF_Attribute): PrivateScope, Public, HideBySig
    FindAttribute(Standard_GUID* IsImplicitlyDereferenced, handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    AddAttribute(XTDF_Attribute): PrivateScope, Public, HideBySig
    AddAttribute(handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ForgetAttribute(XStandard_GUID): PrivateScope, Public, HideBySig
    ForgetAttribute(Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ForgetAllAttributes(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    AfterAddition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeforeRemoval(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeforeForget(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AfterResume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AfterRetrieval(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeforeUndo(handle<TDF_AttributeDelta>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AfterUndo(handle<TDF_AttributeDelta>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeforeCommitTransaction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Backup(): PrivateScope, Public, HideBySig
    IsBackuped(): PrivateScope, Public, HideBySig
    BackupCopy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Restore(XTDF_Attribute): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaOnAddition(handle<TDF_DeltaOnAddition>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaOnForget(handle<TDF_DeltaOnForget>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaOnResume(handle<TDF_DeltaOnResume>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaOnModification(handle<TDF_DeltaOnModification>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaOnModification(handle<TDF_DeltaOnModification>*, XTDF_Attribute): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaOnModification(handle<TDF_DeltaOnModification>*, handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeltaOnRemoval(handle<TDF_DeltaOnRemoval>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Paste(XTDF_Attribute, handle<TDF_RelocationTable>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    References(handle<TDF_DataSet>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_LeftShift(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    ExtendedDump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, TDF_IDFilter* IsImplicitlyDereferenced, NCollection_IndexedMap<opencascade::handle<TDF_Attribute>\,NCollection_DefaultHasher<opencascade::handle<Standard_Transient> > >* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Forget(Int32 IsConst): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XTDF_Attribute(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Mat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_XYZ, TKMath.xgp_XYZ, TKMath.xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Mat*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Mat* Handle 'get ' : 
  Methods:
    SetCol(Int32, xgp_XYZ): PrivateScope, Public, HideBySig
    SetCols(xgp_XYZ, xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    SetCross(xgp_XYZ): PrivateScope, Public, HideBySig
    SetDiagonal(Double, Double, Double): PrivateScope, Public, HideBySig
    SetDot(xgp_XYZ): PrivateScope, Public, HideBySig
    SetIdentity(): PrivateScope, Public, HideBySig
    SetRotation(xgp_XYZ, Double): PrivateScope, Public, HideBySig
    SetRow(Int32, xgp_XYZ): PrivateScope, Public, HideBySig
    SetRows(xgp_XYZ, xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    SetScale(Double): PrivateScope, Public, HideBySig
    SetValue(Int32, Int32, Double): PrivateScope, Public, HideBySig
    GetMat(): PrivateScope, Public, HideBySig
    Column(Int32): PrivateScope, Public, HideBySig
    Determinant(): PrivateScope, Public, HideBySig
    Diagonal(): PrivateScope, Public, HideBySig
    Row(Int32): PrivateScope, Public, HideBySig
    Value(Int32, Int32): PrivateScope, Public, HideBySig
    ChangeValue(Int32, Int32): PrivateScope, Public, HideBySig
    op_FunctionCall(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    IsSingular(): PrivateScope, Public, HideBySig
    Add(xgp_Mat): PrivateScope, Public, HideBySig
    op_AdditionAssignment(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    Added(xgp_Mat): PrivateScope, Public, HideBySig
    op_Addition(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    Divide(Double): PrivateScope, Public, HideBySig
    op_DivisionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Divided(Double): PrivateScope, Public, HideBySig
    op_Division(Double): PrivateScope, Public, HideBySig, SpecialName
    Invert(): PrivateScope, Public, HideBySig
    Inverted(): PrivateScope, Public, HideBySig
    Multiplied(Double): PrivateScope, Public, HideBySig
    Multiplied(xgp_Mat): PrivateScope, Public, HideBySig
    op_Multiply(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    Multiply(xgp_Mat): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    PreMultiply(xgp_Mat): PrivateScope, Public, HideBySig
    Power(Int32): PrivateScope, Public, HideBySig
    Powered(Int32): PrivateScope, Public, HideBySig
    Subtract(xgp_Mat): PrivateScope, Public, HideBySig
    op_SubtractionAssignment(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    Subtracted(xgp_Mat): PrivateScope, Public, HideBySig
    op_Subtraction(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    Transpose(): PrivateScope, Public, HideBySig
    Transposed(): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >*, Int32): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_XYZ: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_XYZ*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_XYZ* Handle 'get ' : 
  Methods:
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetCoord(Double, Double, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetZ(Double): PrivateScope, Public, HideBySig
    GetXYZ(): PrivateScope, Public, HideBySig
    Coord(Double, Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    ChangeCoord(Int32): PrivateScope, Public, HideBySig
    GetData(): PrivateScope, Public, HideBySig
    ChangeData(): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    Z(): PrivateScope, Public, HideBySig
    Modulus(): PrivateScope, Public, HideBySig
    SquareModulus(): PrivateScope, Public, HideBySig
    IsEqual(xgp_XYZ, Double): PrivateScope, Public, HideBySig
    Add(xgp_XYZ): PrivateScope, Public, HideBySig
    op_AdditionAssignment(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    Added(xgp_XYZ): PrivateScope, Public, HideBySig
    op_Addition(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    Cross(xgp_XYZ): PrivateScope, Public, HideBySig
    op_ExclusiveOrAssignment(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    Crossed(xgp_XYZ): PrivateScope, Public, HideBySig
    op_ExclusiveOr(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    CrossMagnitude(xgp_XYZ): PrivateScope, Public, HideBySig
    CrossSquareMagnitude(xgp_XYZ): PrivateScope, Public, HideBySig
    CrossCross(xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    CrossCrossed(xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    Divide(Double): PrivateScope, Public, HideBySig
    op_DivisionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Divided(Double): PrivateScope, Public, HideBySig
    op_Division(Double): PrivateScope, Public, HideBySig, SpecialName
    Dot(xgp_XYZ): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    DotCross(xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    Multiply(xgp_Mat): PrivateScope, Public, HideBySig
    Multiply(xgp_XYZ): PrivateScope, Public, HideBySig
    Multiply(Double): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(xgp_Mat): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Multiplied(xgp_Mat): PrivateScope, Public, HideBySig
    Multiplied(xgp_XYZ): PrivateScope, Public, HideBySig
    Multiplied(Double): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalized(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    Subtract(xgp_XYZ): PrivateScope, Public, HideBySig
    op_SubtractionAssignment(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    Subtracted(xgp_XYZ): PrivateScope, Public, HideBySig
    op_Subtraction(xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName
    SetLinearForm(xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XYZ, Double, xgp_XYZ): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XYZ, Double, xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XYZ, Double, xgp_XYZ, Double, xgp_XYZ): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XYZ, Double, xgp_XYZ, Double, xgp_XYZ, xgp_XYZ): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >*, Int32): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Ax2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(gp_Pnt, gp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Pnt, gp_Dir, gp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Ax2*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Ax2* Handle 'get ' : 
  Methods:
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetDirection(xgp_Dir): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetXDirection(xgp_Dir): PrivateScope, Public, HideBySig
    SetYDirection(xgp_Dir): PrivateScope, Public, HideBySig
    Angle(xgp_Ax2): PrivateScope, Public, HideBySig
    GetAx2(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Direction(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    XDirection(): PrivateScope, Public, HideBySig
    YDirection(): PrivateScope, Public, HideBySig
    IsCoplanar(xgp_Ax1, Double, Double): PrivateScope, Public, HideBySig
    IsCoplanar(xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Ax1: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Pnt*, gp_Dir*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Ax1*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Ax1* Handle 'get ' : 
  Methods:
    GetAx1(): PrivateScope, Public, HideBySig
    SetDirection(xgp_Dir): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    Direction(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    IsCoaxial(xgp_Ax1, Double, Double): PrivateScope, Public, HideBySig
    IsNormal(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    IsOpposite(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    IsParallel(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Angle(xgp_Ax1): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Dir: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Vec): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Dir*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Dir* Handle 'get ' : 
  Methods:
    SetCoord(Double, Double, Double): PrivateScope, Public, HideBySig
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetZ(Double): PrivateScope, Public, HideBySig
    SetXYZ(xgp_XYZ): PrivateScope, Public, HideBySig
    GetDir(): PrivateScope, Public, HideBySig
    Coord(Double, Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    Z(): PrivateScope, Public, HideBySig
    XYZ(): PrivateScope, Public, HideBySig
    IsEqual(xgp_Dir, Double): PrivateScope, Public, HideBySig
    IsNormal(xgp_Dir, Double): PrivateScope, Public, HideBySig
    IsOpposite(xgp_Dir, Double): PrivateScope, Public, HideBySig
    IsParallel(xgp_Dir, Double): PrivateScope, Public, HideBySig
    Angle(xgp_Dir): PrivateScope, Public, HideBySig
    AngleWithRef(xgp_Dir, xgp_Dir): PrivateScope, Public, HideBySig
    Cross(xgp_Dir): PrivateScope, Public, HideBySig
    op_ExclusiveOrAssignment(xgp_Dir): PrivateScope, Public, HideBySig, SpecialName
    Crossed(xgp_Dir): PrivateScope, Public, HideBySig
    op_ExclusiveOr(xgp_Dir): PrivateScope, Public, HideBySig, SpecialName
    CrossCross(xgp_Dir, xgp_Dir): PrivateScope, Public, HideBySig
    CrossCrossed(xgp_Dir, xgp_Dir): PrivateScope, Public, HideBySig
    Dot(xgp_Dir): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Dir): PrivateScope, Public, HideBySig, SpecialName
    DotCross(xgp_Dir, xgp_Dir): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Dir): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Dir): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Vec: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Vec*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Vec* Handle 'get ' : 
  Methods:
    SetCoord(Double, Double, Double): PrivateScope, Public, HideBySig
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetZ(Double): PrivateScope, Public, HideBySig
    SetXYZ(xgp_XYZ): PrivateScope, Public, HideBySig
    GetVec(): PrivateScope, Public, HideBySig
    Coord(Double, Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    Z(): PrivateScope, Public, HideBySig
    XYZ(): PrivateScope, Public, HideBySig
    IsEqual(xgp_Vec, Double, Double): PrivateScope, Public, HideBySig
    IsNormal(xgp_Vec, Double): PrivateScope, Public, HideBySig
    IsOpposite(xgp_Vec, Double): PrivateScope, Public, HideBySig
    IsParallel(xgp_Vec, Double): PrivateScope, Public, HideBySig
    Angle(xgp_Vec): PrivateScope, Public, HideBySig
    AngleWithRef(xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    Magnitude(): PrivateScope, Public, HideBySig
    SquareMagnitude(): PrivateScope, Public, HideBySig
    Add(xgp_Vec): PrivateScope, Public, HideBySig
    op_AdditionAssignment(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    Added(xgp_Vec): PrivateScope, Public, HideBySig
    op_Addition(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    Subtract(xgp_Vec): PrivateScope, Public, HideBySig
    op_SubtractionAssignment(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    Subtracted(xgp_Vec): PrivateScope, Public, HideBySig
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Multiplied(Double): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(Double): PrivateScope, Public, HideBySig, SpecialName
    Divide(Double): PrivateScope, Public, HideBySig
    op_DivisionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Divided(Double): PrivateScope, Public, HideBySig
    op_Division(Double): PrivateScope, Public, HideBySig, SpecialName
    Cross(xgp_Vec): PrivateScope, Public, HideBySig
    op_ExclusiveOrAssignment(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    Crossed(xgp_Vec): PrivateScope, Public, HideBySig
    op_ExclusiveOr(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    CrossMagnitude(xgp_Vec): PrivateScope, Public, HideBySig
    CrossSquareMagnitude(xgp_Vec): PrivateScope, Public, HideBySig
    CrossCross(xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    CrossCrossed(xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    Dot(xgp_Vec): PrivateScope, Public, HideBySig
    DotCross(xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalized(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    SetLinearForm(xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec, Double, xgp_Vec): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec, Double, xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec, Double, xgp_Vec, Double, xgp_Vec): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec, Double, xgp_Vec, Double, xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Vec): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Vec): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(Double): PrivateScope, Public, HideBySig
    Scaled(Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Pnt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Pnt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Pnt* Handle 'get ' : 
  Methods:
    SetCoord(Double, Double, Double): PrivateScope, Public, HideBySig
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetZ(Double): PrivateScope, Public, HideBySig
    SetXYZ(xgp_XYZ): PrivateScope, Public, HideBySig
    GetPnt(): PrivateScope, Public, HideBySig
    Coord(): PrivateScope, Public, HideBySig
    Coord(Double, Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    Z(): PrivateScope, Public, HideBySig
    XYZ(): PrivateScope, Public, HideBySig
    ChangeCoord(): PrivateScope, Public, HideBySig
    BaryCenter(Double, xgp_Pnt, Double): PrivateScope, Public, HideBySig
    IsEqual(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Distance(xgp_Pnt): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Ax3: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Ax3*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Ax3* Handle 'get ' : 
  Methods:
    GetAx3(): PrivateScope, Public, HideBySig
    XReverse(): PrivateScope, Public, HideBySig
    YReverse(): PrivateScope, Public, HideBySig
    ZReverse(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetDirection(xgp_Dir): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetXDirection(xgp_Dir): PrivateScope, Public, HideBySig
    SetYDirection(xgp_Dir): PrivateScope, Public, HideBySig
    Angle(xgp_Ax3): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Ax2(): PrivateScope, Public, HideBySig
    Direction(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    XDirection(): PrivateScope, Public, HideBySig
    YDirection(): PrivateScope, Public, HideBySig
    Direct(): PrivateScope, Public, HideBySig
    IsCoplanar(xgp_Ax1, Double, Double): PrivateScope, Public, HideBySig
    IsCoplanar(xgp_Ax3, Double, Double): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Quaternion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Mat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Vec, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Vec, TKMath.xgp_Vec, TKMath.xgp_Vec): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Vec, TKMath.xgp_Vec): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Quaternion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Quaternion*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Quaternion* Handle 'get ' : 
  Methods:
    GetQuaternion(): PrivateScope, Public, HideBySig
    IsEqual(xgp_Quaternion): PrivateScope, Public, HideBySig
    SetRotation(xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    SetRotation(xgp_Vec, xgp_Vec): PrivateScope, Public, HideBySig
    SetVectorAndAngle(xgp_Vec, Double): PrivateScope, Public, HideBySig
    GetVectorAndAngle(xgp_Vec, Double): PrivateScope, Public, HideBySig
    SetMatrix(xgp_Mat): PrivateScope, Public, HideBySig
    GetMatrix(): PrivateScope, Public, HideBySig
    SetEulerAngles(xgp_EulerSequence, Double, Double, Double): PrivateScope, Public, HideBySig
    GetEulerAngles(ValueType Int32 IsBoxed, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(xgp_Quaternion): PrivateScope, Public, HideBySig
    Set(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    Z(): PrivateScope, Public, HideBySig
    W(): PrivateScope, Public, HideBySig
    SetIdent(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    Invert(): PrivateScope, Public, HideBySig
    Inverted(): PrivateScope, Public, HideBySig
    SquareNorm(): PrivateScope, Public, HideBySig
    Norm(): PrivateScope, Public, HideBySig
    Scale(Double): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(xgp_Quaternion): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Scaled(Double): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Vec): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(xgp_Quaternion): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(Double): PrivateScope, Public, HideBySig, SpecialName
    StabilizeLength(): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalized(): PrivateScope, Public, HideBySig
    Negated(): PrivateScope, Public, HideBySig
    op_Subtraction(xgp_Quaternion): PrivateScope, Public, HideBySig, SpecialName
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    Added(xgp_Quaternion): PrivateScope, Public, HideBySig
    op_Addition(xgp_Quaternion): PrivateScope, Public, HideBySig, SpecialName
    Subtracted(xgp_Quaternion): PrivateScope, Public, HideBySig
    Multiplied(xgp_Quaternion): PrivateScope, Public, HideBySig
    Add(xgp_Quaternion): PrivateScope, Public, HideBySig
    op_AdditionAssignment(xgp_Quaternion): PrivateScope, Public, HideBySig, SpecialName
    Subtract(xgp_Quaternion): PrivateScope, Public, HideBySig
    op_SubtractionAssignment(xgp_Quaternion): PrivateScope, Public, HideBySig, SpecialName
    Multiply(xgp_Vec): PrivateScope, Public, HideBySig
    Multiply(xgp_Quaternion): PrivateScope, Public, HideBySig
    Dot(xgp_Quaternion): PrivateScope, Public, HideBySig
    GetRotationAngle(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Trsf: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Trsf2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Trsf*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Trsf* Handle 'get ' : 
  Methods:
    SetMirror(xgp_Ax2): PrivateScope, Public, HideBySig
    SetMirror(xgp_Ax1): PrivateScope, Public, HideBySig
    SetMirror(xgp_Pnt): PrivateScope, Public, HideBySig
    SetRotation(xgp_Quaternion): PrivateScope, Public, HideBySig
    SetRotation(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    SetScale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    SetDisplacement(xgp_Ax3, xgp_Ax3): PrivateScope, Public, HideBySig
    SetTransformation(xgp_Quaternion, xgp_Vec): PrivateScope, Public, HideBySig
    SetTransformation(xgp_Ax3): PrivateScope, Public, HideBySig
    SetTransformation(xgp_Ax3, xgp_Ax3): PrivateScope, Public, HideBySig
    SetTranslation(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    SetTranslation(xgp_Vec): PrivateScope, Public, HideBySig
    SetTranslationPart(xgp_Vec): PrivateScope, Public, HideBySig
    SetScaleFactor(Double): PrivateScope, Public, HideBySig
    SetTrsfForm(xgp_TrsfForm): PrivateScope, Public, HideBySig
    SetValues(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    GetTrsf(): PrivateScope, Public, HideBySig
    IsNegative(): PrivateScope, Public, HideBySig
    Form(): PrivateScope, Public, HideBySig
    ScaleFactor(): PrivateScope, Public, HideBySig
    TranslationPart(): PrivateScope, Public, HideBySig
    GetRotation(): PrivateScope, Public, HideBySig
    GetRotation(xgp_XYZ, Double): PrivateScope, Public, HideBySig
    VectorialPart(): PrivateScope, Public, HideBySig
    HVectorialPart(): PrivateScope, Public, HideBySig
    Value(Int32, Int32): PrivateScope, Public, HideBySig
    Invert(): PrivateScope, Public, HideBySig
    Inverted(): PrivateScope, Public, HideBySig
    Multiplied(xgp_Trsf): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Trsf): PrivateScope, Public, HideBySig, SpecialName
    Multiply(xgp_Trsf): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(xgp_Trsf): PrivateScope, Public, HideBySig, SpecialName
    PreMultiply(xgp_Trsf): PrivateScope, Public, HideBySig
    Power(Int32): PrivateScope, Public, HideBySig
    Powered(Int32): PrivateScope, Public, HideBySig
    Transforms(xgp_XYZ): PrivateScope, Public, HideBySig
    Transforms(Double, Double, Double): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >*, Int32): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Ax2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Pnt2d, TKMath.xgp_Dir2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Ax2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Ax2d* Handle 'get ' : 
  Methods:
    SetLocation(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetDirection(xgp_Dir2d): PrivateScope, Public, HideBySig
    GetAx2d(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Direction(): PrivateScope, Public, HideBySig
    IsCoaxial(xgp_Ax2d, Double, Double): PrivateScope, Public, HideBySig
    IsNormal(xgp_Ax2d, Double): PrivateScope, Public, HideBySig
    IsOpposite(xgp_Ax2d, Double): PrivateScope, Public, HideBySig
    IsParallel(xgp_Ax2d, Double): PrivateScope, Public, HideBySig
    Angle(xgp_Ax2d): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Pnt2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_XY): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Pnt2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Pnt2d* Handle 'get ' : 
  Methods:
    SetCoord(Double, Double): PrivateScope, Public, HideBySig
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetXY(xgp_XY): PrivateScope, Public, HideBySig
    GetPnt2d(): PrivateScope, Public, HideBySig
    Coord(): PrivateScope, Public, HideBySig
    Coord(Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    XY(): PrivateScope, Public, HideBySig
    ChangeCoord(): PrivateScope, Public, HideBySig
    IsEqual(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Distance(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_GTrsf2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Mat2d, TKMath.xgp_XY): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Trsf2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_GTrsf2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_GTrsf2d* Handle 'get ' : 
  Methods:
    GetGTrsf2d(): PrivateScope, Public, HideBySig
    SetAffinity(xgp_Ax2d, Double): PrivateScope, Public, HideBySig
    SetValue(Int32, Int32, Double): PrivateScope, Public, HideBySig
    SetTranslationPart(xgp_XY): PrivateScope, Public, HideBySig
    SetTrsf2d(xgp_Trsf2d): PrivateScope, Public, HideBySig
    SetVectorialPart(xgp_Mat2d): PrivateScope, Public, HideBySig
    IsNegative(): PrivateScope, Public, HideBySig
    IsSingular(): PrivateScope, Public, HideBySig
    Form(): PrivateScope, Public, HideBySig
    TranslationPart(): PrivateScope, Public, HideBySig
    VectorialPart(): PrivateScope, Public, HideBySig
    Value(Int32, Int32): PrivateScope, Public, HideBySig
    op_FunctionCall(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    Invert(): PrivateScope, Public, HideBySig
    Inverted(): PrivateScope, Public, HideBySig
    Multiplied(xgp_GTrsf2d): PrivateScope, Public, HideBySig
    op_Multiply(xgp_GTrsf2d): PrivateScope, Public, HideBySig, SpecialName
    Multiply(xgp_GTrsf2d): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(xgp_GTrsf2d): PrivateScope, Public, HideBySig, SpecialName
    PreMultiply(xgp_GTrsf2d): PrivateScope, Public, HideBySig
    Power(Int32): PrivateScope, Public, HideBySig
    Powered(Int32): PrivateScope, Public, HideBySig
    Transforms(Double, Double): PrivateScope, Public, HideBySig
    Transforms(xgp_XY): PrivateScope, Public, HideBySig
    Transformed(xgp_XY): PrivateScope, Public, HideBySig
    Trsf2d(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Trsf2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Trsf): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Trsf2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Trsf2d* Handle 'get ' : 
  Methods:
    SetMirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetMirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetRotation(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    SetScale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    SetTransformation(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetTransformation(xgp_Ax2d, xgp_Ax2d): PrivateScope, Public, HideBySig
    SetTranslation(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetTranslation(xgp_Vec2d): PrivateScope, Public, HideBySig
    SetTranslationPart(xgp_Vec2d): PrivateScope, Public, HideBySig
    SetScaleFactor(Double): PrivateScope, Public, HideBySig
    GetTrsf2d(): PrivateScope, Public, HideBySig
    IsNegative(): PrivateScope, Public, HideBySig
    Form(): PrivateScope, Public, HideBySig
    ScaleFactor(): PrivateScope, Public, HideBySig
    TranslationPart(): PrivateScope, Public, HideBySig
    VectorialPart(): PrivateScope, Public, HideBySig
    HVectorialPart(): PrivateScope, Public, HideBySig
    RotationPart(): PrivateScope, Public, HideBySig
    Value(Int32, Int32): PrivateScope, Public, HideBySig
    Invert(): PrivateScope, Public, HideBySig
    Inverted(): PrivateScope, Public, HideBySig
    Multiplied(xgp_Trsf2d): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Trsf2d): PrivateScope, Public, HideBySig, SpecialName
    Multiply(xgp_Trsf2d): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(xgp_Trsf2d): PrivateScope, Public, HideBySig, SpecialName
    PreMultiply(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Power(Int32): PrivateScope, Public, HideBySig
    Powered(Int32): PrivateScope, Public, HideBySig
    Transforms(xgp_XY): PrivateScope, Public, HideBySig
    Transforms(Double, Double): PrivateScope, Public, HideBySig
    SetValues(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Mat2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_XY, TKMath.xgp_XY): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Mat2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Mat2d* Handle 'get ' : 
  Methods:
    SetCol(Int32, xgp_XY): PrivateScope, Public, HideBySig
    SetCols(xgp_XY, xgp_XY): PrivateScope, Public, HideBySig
    SetDiagonal(Double, Double): PrivateScope, Public, HideBySig
    SetIdentity(): PrivateScope, Public, HideBySig
    SetRotation(Double): PrivateScope, Public, HideBySig
    SetRow(Int32, xgp_XY): PrivateScope, Public, HideBySig
    SetRows(xgp_XY, xgp_XY): PrivateScope, Public, HideBySig
    SetScale(Double): PrivateScope, Public, HideBySig
    SetValue(Int32, Int32, Double): PrivateScope, Public, HideBySig
    GetMat2d(): PrivateScope, Public, HideBySig
    Column(Int32): PrivateScope, Public, HideBySig
    Determinant(): PrivateScope, Public, HideBySig
    Diagonal(): PrivateScope, Public, HideBySig
    Row(Int32): PrivateScope, Public, HideBySig
    Value(Int32, Int32): PrivateScope, Public, HideBySig
    ChangeValue(Int32, Int32): PrivateScope, Public, HideBySig
    op_FunctionCall(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    IsSingular(): PrivateScope, Public, HideBySig
    Add(xgp_Mat2d): PrivateScope, Public, HideBySig
    op_AdditionAssignment(xgp_Mat2d): PrivateScope, Public, HideBySig, SpecialName
    Added(xgp_Mat2d): PrivateScope, Public, HideBySig
    op_Addition(xgp_Mat2d): PrivateScope, Public, HideBySig, SpecialName
    Divide(Double): PrivateScope, Public, HideBySig
    op_DivisionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Divided(Double): PrivateScope, Public, HideBySig
    op_Division(Double): PrivateScope, Public, HideBySig, SpecialName
    Invert(): PrivateScope, Public, HideBySig
    Inverted(): PrivateScope, Public, HideBySig
    Multiplied(Double): PrivateScope, Public, HideBySig
    Multiplied(xgp_Mat2d): PrivateScope, Public, HideBySig
    op_Multiply(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(xgp_Mat2d): PrivateScope, Public, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    Multiply(xgp_Mat2d): PrivateScope, Public, HideBySig
    PreMultiply(xgp_Mat2d): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Power(Int32): PrivateScope, Public, HideBySig
    Powered(Int32): PrivateScope, Public, HideBySig
    Subtract(xgp_Mat2d): PrivateScope, Public, HideBySig
    op_SubtractionAssignment(xgp_Mat2d): PrivateScope, Public, HideBySig, SpecialName
    Subtracted(xgp_Mat2d): PrivateScope, Public, HideBySig
    op_Subtraction(xgp_Mat2d): PrivateScope, Public, HideBySig, SpecialName
    Transpose(): PrivateScope, Public, HideBySig
    Transposed(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_XY: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_XY*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_XY* Handle 'get ' : 
  Methods:
    SetCoord(Double, Double): PrivateScope, Public, HideBySig
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    GetXY(): PrivateScope, Public, HideBySig
    Coord(Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    ChangeCoord(Int32): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    Modulus(): PrivateScope, Public, HideBySig
    SquareModulus(): PrivateScope, Public, HideBySig
    IsEqual(xgp_XY, Double): PrivateScope, Public, HideBySig
    Add(xgp_XY): PrivateScope, Public, HideBySig
    op_AdditionAssignment(xgp_XY): PrivateScope, Public, HideBySig, SpecialName
    Added(xgp_XY): PrivateScope, Public, HideBySig
    op_Addition(xgp_XY): PrivateScope, Public, HideBySig, SpecialName
    Crossed(xgp_XY): PrivateScope, Public, HideBySig
    op_ExclusiveOr(xgp_XY): PrivateScope, Public, HideBySig, SpecialName
    CrossMagnitude(xgp_XY): PrivateScope, Public, HideBySig
    CrossSquareMagnitude(xgp_XY): PrivateScope, Public, HideBySig
    Divide(Double): PrivateScope, Public, HideBySig
    op_DivisionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Divided(Double): PrivateScope, Public, HideBySig
    op_Division(Double): PrivateScope, Public, HideBySig, SpecialName
    Dot(xgp_XY): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Mat2d): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(xgp_XY): PrivateScope, Public, HideBySig, SpecialName
    Multiply(xgp_Mat2d): PrivateScope, Public, HideBySig
    Multiply(xgp_XY): PrivateScope, Public, HideBySig
    Multiply(Double): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(xgp_Mat2d): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(xgp_XY): PrivateScope, Public, HideBySig, SpecialName
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Multiplied(xgp_Mat2d): PrivateScope, Public, HideBySig
    Multiplied(xgp_XY): PrivateScope, Public, HideBySig
    Multiplied(Double): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalized(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    op_Subtraction(xgp_XY): PrivateScope, Public, HideBySig, SpecialName
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    SetLinearForm(xgp_XY, xgp_XY): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XY, xgp_XY): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XY, Double, xgp_XY, xgp_XY): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_XY, Double, xgp_XY): PrivateScope, Public, HideBySig
    Subtract(xgp_XY): PrivateScope, Public, HideBySig
    op_SubtractionAssignment(xgp_XY): PrivateScope, Public, HideBySig, SpecialName
    Subtracted(xgp_XY): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Dir2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_XY): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Vec2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Dir2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Dir2d* Handle 'get ' : 
  Methods:
    SetCoord(Double, Double): PrivateScope, Public, HideBySig
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetXY(xgp_XY): PrivateScope, Public, HideBySig
    GetDir2d(): PrivateScope, Public, HideBySig
    Coord(Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    XY(): PrivateScope, Public, HideBySig
    IsEqual(xgp_Dir2d, Double): PrivateScope, Public, HideBySig
    IsNormal(xgp_Dir2d, Double): PrivateScope, Public, HideBySig
    IsOpposite(xgp_Dir2d, Double): PrivateScope, Public, HideBySig
    IsParallel(xgp_Dir2d, Double): PrivateScope, Public, HideBySig
    Angle(xgp_Dir2d): PrivateScope, Public, HideBySig
    Crossed(xgp_Dir2d): PrivateScope, Public, HideBySig
    op_ExclusiveOr(xgp_Dir2d): PrivateScope, Public, HideBySig, SpecialName
    Dot(xgp_Dir2d): PrivateScope, Public, HideBySig
    op_Multiply(xgp_Dir2d): PrivateScope, Public, HideBySig, SpecialName
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Dir2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Dir2d): PrivateScope, Public, HideBySig
    Rotate(Double): PrivateScope, Public, HideBySig
    Rotated(Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Vec2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Pnt2d, TKMath.xgp_Pnt2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_XY): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Dir2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Vec2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Vec2d* Handle 'get ' : 
  Methods:
    SetCoord(Double, Double): PrivateScope, Public, HideBySig
    SetCoord(Int32, Double): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetXY(xgp_XY): PrivateScope, Public, HideBySig
    GetVec2d(): PrivateScope, Public, HideBySig
    Coord(Double, Double): PrivateScope, Public, HideBySig
    Coord(Int32): PrivateScope, Public, HideBySig
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    XY(): PrivateScope, Public, HideBySig
    IsEqual(xgp_Vec2d, Double, Double): PrivateScope, Public, HideBySig
    IsNormal(xgp_Vec2d, Double): PrivateScope, Public, HideBySig
    IsOpposite(xgp_Vec2d, Double): PrivateScope, Public, HideBySig
    IsParallel(xgp_Vec2d, Double): PrivateScope, Public, HideBySig
    Angle(xgp_Vec2d): PrivateScope, Public, HideBySig
    Magnitude(): PrivateScope, Public, HideBySig
    SquareMagnitude(): PrivateScope, Public, HideBySig
    Add(xgp_Vec2d): PrivateScope, Public, HideBySig
    op_AdditionAssignment(xgp_Vec2d): PrivateScope, Public, HideBySig, SpecialName
    Added(xgp_Vec2d): PrivateScope, Public, HideBySig
    op_Addition(xgp_Vec2d): PrivateScope, Public, HideBySig, SpecialName
    Crossed(xgp_Vec2d): PrivateScope, Public, HideBySig
    op_ExclusiveOr(xgp_Vec2d): PrivateScope, Public, HideBySig, SpecialName
    CrossMagnitude(xgp_Vec2d): PrivateScope, Public, HideBySig
    CrossSquareMagnitude(xgp_Vec2d): PrivateScope, Public, HideBySig
    Divide(Double): PrivateScope, Public, HideBySig
    op_DivisionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Divided(Double): PrivateScope, Public, HideBySig
    op_Division(Double): PrivateScope, Public, HideBySig, SpecialName
    Dot(xgp_Vec2d): PrivateScope, Public, HideBySig
    op_Multiply(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Multiply(xgp_Vec2d): PrivateScope, Public, HideBySig, SpecialName
    GetNormal(): PrivateScope, Public, HideBySig
    Multiply(Double): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    Multiplied(Double): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalized(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    op_Subtraction(xgp_Vec2d): PrivateScope, Public, HideBySig, SpecialName
    op_UnaryNegation(): PrivateScope, Public, HideBySig, SpecialName
    Subtract(xgp_Vec2d): PrivateScope, Public, HideBySig
    op_SubtractionAssignment(xgp_Vec2d): PrivateScope, Public, HideBySig, SpecialName
    Subtracted(xgp_Vec2d): PrivateScope, Public, HideBySig
    SetLinearForm(xgp_Vec2d, xgp_Vec2d): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec2d, xgp_Vec2d): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec2d, Double, xgp_Vec2d): PrivateScope, Public, HideBySig
    SetLinearForm(Double, xgp_Vec2d, Double, xgp_Vec2d, xgp_Vec2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Vec2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Vec2d): PrivateScope, Public, HideBySig
    Rotate(Double): PrivateScope, Public, HideBySig
    Rotated(Double): PrivateScope, Public, HideBySig
    Scale(Double): PrivateScope, Public, HideBySig
    Scaled(Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<TDataStd_Integer> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKLCAF.XTDataStd_Integer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKLCAF.XTDF_Attribute
    Void .ctor(opencascade.handle<TDataStd_Integer>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetID(): PrivateScope, Public, Static, HideBySig
    Set(Int32 IsConst): PrivateScope, Public, HideBySig
    Set(XTDF_Label, XStandard_GUID, Int32 IsConst): PrivateScope, Public, Static, HideBySig
    Set(XTDF_Label, Int32): PrivateScope, Public, Static, HideBySig
    SetID(): PrivateScope, Public, Virtual, HideBySig
    SetID(XStandard_GUID): PrivateScope, Public, Virtual, HideBySig
    Get(): PrivateScope, Public, HideBySig
    IsCaptured(): PrivateScope, Public, HideBySig
    ID(): PrivateScope, Public, Virtual, HideBySig
    Restore(XTDF_Attribute): PrivateScope, Public, Virtual, HideBySig
    NewEmpty(): PrivateScope, Public, Virtual, HideBySig
    Paste(XTDF_Attribute, handle<TDF_RelocationTable>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    Dump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    GetInteger(handle<TDataStd_Integer>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAttribute(handle<TDF_Attribute>*): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTDataStd_Integer(): PrivateScope, Public, HideBySig
Struct xgp_EulerSequence: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    xgp_EulerSequence gp_EulerAngles = 0 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_YawPitchRoll = 1 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_XYZ = 2 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_XZY = 3 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_YZX = 4 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_YXZ = 5 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_ZXY = 6 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_ZYX = 7 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_XYZ = 8 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_XZY = 9 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_YZX = 10 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_YXZ = 11 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_ZXY = 12 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_ZYX = 13 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_XYX = 14 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_XZX = 15 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_YZY = 16 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_YXY = 17 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_ZYZ = 18 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Extrinsic_ZXZ = 19 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_XYX = 20 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_XZX = 21 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_YZY = 22 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_YXY = 23 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_ZXZ = 24 : Public, Static, Literal, HasDefault
    xgp_EulerSequence gp_Intrinsic_ZYZ = 25 : Public, Static, Literal, HasDefault
Struct xgp_TrsfForm: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    xgp_TrsfForm gp_Identity = 0 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_Rotation = 1 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_Translation = 2 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_PntMirror = 3 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_Ax1Mirror = 4 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_Ax2Mirror = 5 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_Scale = 6 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_CompoundTrsf = 7 : Public, Static, Literal, HasDefault
    xgp_TrsfForm gp_Other = 8 : Public, Static, Literal, HasDefault
Class TKernel.XStandard_Helper: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    toAsciiString(TCollection_AsciiString*, String): PrivateScope, Public, Static, HideBySig
    toCString(TCollection_AsciiString*): PrivateScope, Public, Static, HideBySig
    toString(SByte*): PrivateScope, Public, Static, HideBySig
    toString(TCollection_AsciiString*): PrivateScope, Public, Static, HideBySig
    toObject(Void*): PrivateScope, Public, Static, HideBySig
Class TKernel.XTCollection_ExtendedString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TCollection_AsciiString*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XTCollection_ExtendedString*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    TCollection_ExtendedString* Handle 'get ' : 
  Methods:
    GetExtendedString(TCollection_ExtendedString*): PrivateScope, Public, HideBySig
    AssignCat(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    op_AdditionAssignment(XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName
    Cat(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    op_Addition(XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName
    ChangeAll(Char IsConst, Char IsConst): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Copy(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    op_Assign(XTCollection_ExtendedString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName
    Swap(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    Insert(Int32 IsConst, XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    Insert(Int32 IsConst, Char IsConst): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    IsEqual(XTCollection_ExtendedString, XTCollection_ExtendedString): PrivateScope, Public, Static, HideBySig
    IsEqual(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    IsEqual(Char* IsConst IsConst): PrivateScope, Public, HideBySig
    op_Equality(XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(Char* IsConst IsConst): PrivateScope, Public, HideBySig, SpecialName
    IsDifferent(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    IsDifferent(Char* IsConst IsConst): PrivateScope, Public, HideBySig
    op_Inequality(XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(Char* IsConst IsConst): PrivateScope, Public, HideBySig, SpecialName
    IsLess(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    IsLess(Char* IsConst IsConst): PrivateScope, Public, HideBySig
    op_LessThan(XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(Char* IsConst IsConst): PrivateScope, Public, HideBySig, SpecialName
    IsGreater(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    IsGreater(Char* IsConst IsConst): PrivateScope, Public, HideBySig
    op_GreaterThan(XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThan(Char* IsConst IsConst): PrivateScope, Public, HideBySig, SpecialName
    StartsWith(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    EndsWith(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    IsAscii(): PrivateScope, Public, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Print(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    RemoveAll(Char IsConst): PrivateScope, Public, HideBySig
    Remove(Int32 IsConst, Int32 IsConst): PrivateScope, Public, HideBySig
    Search(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    SearchFromEnd(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    SetValue(Int32 IsConst, XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    SetValue(Int32 IsConst, Char IsConst): PrivateScope, Public, HideBySig
    Split(Int32 IsConst): PrivateScope, Public, HideBySig
    Token(Char* IsConst IsConst, Int32 IsConst): PrivateScope, Public, HideBySig
    ToExtString(): PrivateScope, Public, HideBySig
    ToWideString(): PrivateScope, Public, HideBySig
    Trunc(Int32 IsConst): PrivateScope, Public, HideBySig
    Value(Int32 IsConst): PrivateScope, Public, HideBySig
    GetValueString(): PrivateScope, Public, HideBySig
    HashCode(XTCollection_ExtendedString, Int32 IsConst): PrivateScope, Public, Static, HideBySig
    ToUTF8CString(SByte** IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    LengthOfCString(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<TDataStd_Name> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKLCAF.XTDataStd_Name: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKLCAF.XTDF_Attribute
    Void .ctor(opencascade.handle<TDataStd_Name>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetName(handle<TDataStd_Name>*): PrivateScope, Public, HideBySig
    GetAttribute(handle<TDF_Attribute>*): PrivateScope, Public, Virtual, HideBySig
    GetID(): PrivateScope, Public, Static, HideBySig
    Set(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    Set(XTDF_Label, XStandard_GUID, XTCollection_ExtendedString): PrivateScope, Public, Static, HideBySig
    Set(XTDF_Label, XTCollection_ExtendedString): PrivateScope, Public, Static, HideBySig
    SetID(): PrivateScope, Public, Virtual, HideBySig
    SetID(XStandard_GUID): PrivateScope, Public, Virtual, HideBySig
    SetID(Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    Get(): PrivateScope, Public, HideBySig
    ID(): PrivateScope, Public, Virtual, HideBySig
    Restore(XTDF_Attribute): PrivateScope, Public, Virtual, HideBySig
    NewEmpty(): PrivateScope, Public, Virtual, HideBySig
    Paste(XTDF_Attribute, handle<TDF_RelocationTable>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    Dump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTDataStd_Name(): PrivateScope, Public, HideBySig
Class TKLCAF.XTDF_ChildIterator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKLCAF.XTDF_Label, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TDF_Label*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TDF_ChildIterator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TDF_ChildIterator* Handle 'get ' : 
  Methods:
    Initialize(XTDF_Label, Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    Initialize(TDF_Label* IsImplicitlyDereferenced, Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    More(): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    NextBrother(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKLCAF.XTDF_IDFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TDF_IDFilter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TDF_IDFilter* Handle 'get ' : 
  Methods:
    GetIDFilter(TDF_IDFilter*): PrivateScope, Public, HideBySig
    IgnoreAll(): PrivateScope, Public, HideBySig
    IgnoreAll(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    Keep(NCollection_List<Standard_GUID>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Keep(XStandard_GUID): PrivateScope, Public, HideBySig
    Ignore(NCollection_List<Standard_GUID>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Ignore(XStandard_GUID): PrivateScope, Public, HideBySig
    IsKept(XTDF_Attribute): PrivateScope, Public, HideBySig
    IsKept(handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    IsKept(XStandard_GUID): PrivateScope, Public, HideBySig
    IsIgnored(XTDF_Attribute): PrivateScope, Public, HideBySig
    IsIgnored(handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    IsIgnored(XStandard_GUID): PrivateScope, Public, HideBySig
    IDList(NCollection_List<Standard_GUID>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Copy(XTDF_IDFilter): PrivateScope, Public, HideBySig
    Dump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKMath.XTopLoc_Location: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<TopLoc_Datum3D>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Trsf): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TopLoc_Location*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TopLoc_Location*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    TopLoc_Location* Handle 'get ' : 
  Methods:
    GetLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsIdentity(): PrivateScope, Public, HideBySig
    Identity(): PrivateScope, Public, HideBySig
    FirstDatum(handle<TopLoc_Datum3D>*): PrivateScope, Public, HideBySig
    FirstPower(): PrivateScope, Public, HideBySig
    NextLocation(): PrivateScope, Public, HideBySig
    Transformation(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Inverted(): PrivateScope, Public, HideBySig
    Multiplied(XTopLoc_Location): PrivateScope, Public, HideBySig
    op_Multiply(XTopLoc_Location): PrivateScope, Public, HideBySig, SpecialName
    Divided(XTopLoc_Location): PrivateScope, Public, HideBySig
    op_Division(XTopLoc_Location): PrivateScope, Public, HideBySig, SpecialName
    Predivided(XTopLoc_Location): PrivateScope, Public, HideBySig
    Powered(Int32): PrivateScope, Public, HideBySig
    HashCode(Int32): PrivateScope, Public, HideBySig
    IsEqual(XTopLoc_Location): PrivateScope, Public, HideBySig
    op_Equality(XTopLoc_Location): PrivateScope, Public, HideBySig, SpecialName
    IsDifferent(XTopLoc_Location): PrivateScope, Public, HideBySig
    op_Inequality(XTopLoc_Location): PrivateScope, Public, HideBySig, SpecialName
    DumpJson(basic_ostream<char\,std::char_traits<char> >*, Int32): PrivateScope, Public, HideBySig
    ShallowDump(basic_ostream<char\,std::char_traits<char> >*): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<AIS_InteractiveContext> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XAIS_InteractiveContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<AIS_InteractiveContext>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<V3d_Viewer>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    UnsetWidth(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMaterial(handle<AIS_InteractiveObject>*, Graphic3d_MaterialAspect*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnsetMaterial(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetTransparency(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnsetTransparency(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetPolygonOffsets(handle<AIS_InteractiveObject>*, Int32, Single, Single, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HasPolygonOffsets(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    PolygonOffsets(handle<AIS_InteractiveObject>*, Int32, Single, Single): PrivateScope, Public, HideBySig
    SetTrihedronSize(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    TrihedronSize(): PrivateScope, Public, HideBySig
    SetPlaneSize(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetPlaneSize(Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    PlaneSize(Double, Double): PrivateScope, Public, HideBySig
    SetDeviationCoefficient(Double): PrivateScope, Public, HideBySig
    SetDeviationCoefficient(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetDeviationAngle(Double): PrivateScope, Public, HideBySig
    SetDeviationAngle(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetAngleAndDeviation(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetHLRDeviationCoefficient(Double): PrivateScope, Public, HideBySig
    SetHLRDeviationCoefficient(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetHLRDeviationAngle(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetHLRAngleAndDeviation(Double): PrivateScope, Public, HideBySig
    SetHLRAngleAndDeviation(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DeviationCoefficient(): PrivateScope, Public, HideBySig
    DeviationAngle(): PrivateScope, Public, HideBySig
    HLRDeviationCoefficient(): PrivateScope, Public, HideBySig
    SetHLRAngle(Double): PrivateScope, Public, HideBySig
    HLRAngle(): PrivateScope, Public, HideBySig
    HiddenLineAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    SetHiddenLineAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    DrawHiddenLine(): PrivateScope, Public, HideBySig
    EnableDrawHiddenLine(): PrivateScope, Public, HideBySig
    DisableDrawHiddenLine(): PrivateScope, Public, HideBySig
    SetIsoNumber(Int32, AIS_TypeOfIso): PrivateScope, Public, HideBySig
    IsoNumber(AIS_TypeOfIso): PrivateScope, Public, HideBySig
    IsoOnPlane(): PrivateScope, Public, HideBySig
    IsoOnPlane(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsoOnTriangulation(): PrivateScope, Public, HideBySig
    IsoOnTriangulation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsoOnTriangulation(Boolean(HasFieldMarshal), handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    SetCurrentObject(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddOrRemoveCurrentObject(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UpdateCurrent(): PrivateScope, Public, HideBySig
    IsCurrent(handle<AIS_InteractiveObject>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    InitCurrent(): PrivateScope, Public, HideBySig
    MoreCurrent(): PrivateScope, Public, HideBySig
    NextCurrent(): PrivateScope, Public, HideBySig
    Current(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    NbCurrents(): PrivateScope, Public, HideBySig
    HilightCurrents(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnhilightCurrents(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ClearCurrents(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SubIntensityColor(Quantity_Color*): PrivateScope, Public, HideBySig
    SetSubIntensityColor(Quantity_Color): PrivateScope, Public, HideBySig
    SubIntensityOn(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SubIntensityOff(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Selection(handle<AIS_Selection>*): PrivateScope, Public, HideBySig
    SetSelection(handle<AIS_Selection>*): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
    Select(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Select(NCollection_Array1<gp_Pnt2d>*, handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Select(Int32, Int32, Int32, Int32, handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ShiftSelect(Int32, Int32, Int32, Int32, handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ShiftSelect(NCollection_Array1<gp_Pnt2d>*, handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ShiftSelect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    BoundingBoxOfSelection(Bnd_Box*): PrivateScope, Public, HideBySig
    FitSelected(handle<V3d_View>*): PrivateScope, Public, HideBySig
    FitSelected(handle<V3d_View>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToHilightSelected(): PrivateScope, Public, HideBySig
    SetToHilightSelected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AutomaticHilight(): PrivateScope, Public, HideBySig
    SetAutomaticHilight(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetSelected(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetSelected(handle<SelectMgr_EntityOwner>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddOrRemoveSelected(handle<SelectMgr_EntityOwner>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddOrRemoveSelected(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetSelectedState(handle<SelectMgr_EntityOwner>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HilightSelected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnhilightSelected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UpdateSelected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ClearSelected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsSelected(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    IsSelected(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, HideBySig
    FirstSelectedObject(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    NbSelected(): PrivateScope, Public, HideBySig
    InitSelected(): PrivateScope, Public, HideBySig
    MoreSelected(): PrivateScope, Public, HideBySig
    NextSelected(): PrivateScope, Public, HideBySig
    SelectedOwner(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, HideBySig
    SelectedInteractive(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    HasSelectedShape(): PrivateScope, Public, HideBySig
    SelectedShape(TopoDS_Shape*): PrivateScope, Public, HideBySig
    HasApplicative(): PrivateScope, Public, HideBySig
    Applicative(handle<Standard_Transient>*): PrivateScope, Public, HideBySig
    BeginImmediateDraw(): PrivateScope, Public, HideBySig
    ImmediateAdd(handle<AIS_InteractiveObject>*, Int32): PrivateScope, Public, HideBySig
    EndImmediateDraw(): PrivateScope, Public, HideBySig
    EndImmediateDraw(handle<V3d_View>*): PrivateScope, Public, HideBySig
    IsImmediateModeOn(): PrivateScope, Public, HideBySig
    RedrawImmediate(handle<V3d_Viewer>*): PrivateScope, Public, HideBySig
    SetSelectionModeActive(handle<AIS_InteractiveObject>*, Int32, Boolean(HasFieldMarshal), AIS_SelectionModesConcurrency, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Activate(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Activate(handle<AIS_InteractiveObject>* IsImplicitlyDereferenced, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Deactivate(): PrivateScope, Public, HideBySig
    Deactivate(Int32): PrivateScope, Public, HideBySig
    Deactivate(handle<AIS_InteractiveObject>*, Int32): PrivateScope, Public, HideBySig
    Deactivate(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    ActivatedModes(handle<AIS_InteractiveObject>*, NCollection_List<int>*): PrivateScope, Public, HideBySig
    EntityOwners(handle<NCollection_Shared<NCollection_IndexedMap<opencascade::handle<SelectMgr_EntityOwner>\,NCollection_DefaultHasher<opencascade::handle<SelectMgr_EntityOwner> > >\,void> >*, handle<AIS_InteractiveObject>*, Int32): PrivateScope, Public, HideBySig
    Filters(NCollection_List<opencascade::handle<SelectMgr_Filter> >*): PrivateScope, Public, HideBySig
    AddFilter(handle<SelectMgr_Filter>*): PrivateScope, Public, HideBySig
    RemoveFilter(handle<SelectMgr_Filter>*): PrivateScope, Public, HideBySig
    RemoveFilters(): PrivateScope, Public, HideBySig
    PickingStrategy(): PrivateScope, Public, HideBySig
    SetPickingStrategy(SelectMgr_PickingStrategy): PrivateScope, Public, HideBySig
    DefaultDrawer(handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    CurrentViewer(handle<V3d_Viewer>*): PrivateScope, Public, HideBySig
    SelectionManager(handle<SelectMgr_SelectionManager>*): PrivateScope, Public, HideBySig
    MainPrsMgr(handle<PrsMgr_PresentationManager>*): PrivateScope, Public, HideBySig
    MainSelector(handle<StdSelect_ViewerSelector3d>*): PrivateScope, Public, HideBySig
    UpdateCurrentViewer(): PrivateScope, Public, HideBySig
    DisplayedObjects(AIS_KindOfInteractive, Int32, NCollection_List<opencascade::handle<AIS_InteractiveObject> >*): PrivateScope, Public, HideBySig
    DisplayedObjects(NCollection_List<opencascade::handle<AIS_InteractiveObject> >*): PrivateScope, Public, HideBySig
    ErasedObjects(AIS_KindOfInteractive, Int32, NCollection_List<opencascade::handle<AIS_InteractiveObject> >*): PrivateScope, Public, HideBySig
    ErasedObjects(NCollection_List<opencascade::handle<AIS_InteractiveObject> >*): PrivateScope, Public, HideBySig
    ObjectsByDisplayStatus(AIS_KindOfInteractive, Int32, AIS_DisplayStatus, NCollection_List<opencascade::handle<AIS_InteractiveObject> >*): PrivateScope, Public, HideBySig
    ObjectsByDisplayStatus(AIS_DisplayStatus, NCollection_List<opencascade::handle<AIS_InteractiveObject> >*): PrivateScope, Public, HideBySig
    ObjectsInside(NCollection_List<opencascade::handle<AIS_InteractiveObject> >*, AIS_KindOfInteractive, Int32): PrivateScope, Public, HideBySig
    RebuildSelectionStructs(): PrivateScope, Public, HideBySig
    Disconnect(handle<AIS_InteractiveObject>*, handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    ObjectsForView(NCollection_List<opencascade::handle<AIS_InteractiveObject> >*, handle<V3d_View>*, Boolean(HasFieldMarshal), AIS_DisplayStatus): PrivateScope, Public, HideBySig
    PurgeDisplay(): PrivateScope, Public, HideBySig
    GravityPoint(handle<V3d_View>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DisplayActiveSensitive(handle<AIS_InteractiveObject>*, handle<V3d_View>*): PrivateScope, Public, HideBySig
    DisplayActiveSensitive(handle<V3d_View>*): PrivateScope, Public, HideBySig
    ClearActiveSensitive(handle<V3d_View>*): PrivateScope, Public, HideBySig
    SetLocalAttributes(handle<AIS_InteractiveObject>*, handle<Prs3d_Drawer>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnsetLocalAttributes(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetCurrentFacingModel(handle<AIS_InteractiveObject>*, Aspect_TypeOfFacingModel): PrivateScope, Public, HideBySig
    HasColor(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    Color(handle<AIS_InteractiveObject>*, Quantity_Color): PrivateScope, Public, HideBySig
    SetColor(handle<AIS_InteractiveObject>*, Quantity_Color, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnsetColor(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Width(handle<AIS_InteractiveObject>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetWidth(handle<AIS_InteractiveObject>*, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInteractiveContext(handle<AIS_InteractiveContext>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DisplayStatus(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    Status(handle<AIS_InteractiveObject>*, TCollection_ExtendedString*): PrivateScope, Public, HideBySig
    IsDisplayed(handle<AIS_InteractiveObject>*, Int32): PrivateScope, Public, HideBySig
    IsDisplayed(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    SetAutoActivateSelection(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetAutoActivateSelection(): PrivateScope, Public, HideBySig
    Display(XAIS_InteractiveObject, Int32, Int32, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Int32): PrivateScope, Public, HideBySig
    Display(handle<AIS_InteractiveObject>*, Int32, Int32, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), AIS_DisplayStatus): PrivateScope, Public, HideBySig
    Display(XAIS_InteractiveObject, Int32, Int32, Boolean(HasFieldMarshal), Int32): PrivateScope, Public, HideBySig
    Display(handle<AIS_InteractiveObject>*, Int32, Int32, Boolean(HasFieldMarshal), AIS_DisplayStatus): PrivateScope, Public, HideBySig
    Display(XAIS_InteractiveObject, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Display(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Load(XAIS_InteractiveObject, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Load(handle<AIS_InteractiveObject>*, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Load(XAIS_InteractiveObject, Int32): PrivateScope, Public, HideBySig
    Load(handle<AIS_InteractiveObject>*, Int32): PrivateScope, Public, HideBySig
    Erase(XAIS_InteractiveObject, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Erase(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    EraseAll(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DisplayAll(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    EraseSelected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DisplaySelected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ClearPrs(XAIS_InteractiveObject, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ClearPrs(handle<AIS_InteractiveObject>*, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Remove(XAIS_InteractiveObject, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Remove(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveAll(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Redisplay(AIS_KindOfInteractive, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Redisplay(XAIS_InteractiveObject, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Redisplay(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RecomputePrsOnly(XAIS_InteractiveObject, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RecomputePrsOnly(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RecomputeSelectionOnly(XAIS_InteractiveObject): PrivateScope, Public, HideBySig
    RecomputeSelectionOnly(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    Update(XAIS_InteractiveObject, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Update(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HighlightStyle(handle<SelectMgr_EntityOwner>*, handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    HighlightStyle(handle<AIS_InteractiveObject>*, handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    HighlightStyle(handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    HighlightStyle(handle<Prs3d_Drawer>*, Prs3d_TypeOfHighlight): PrivateScope, Public, HideBySig
    SetHighlightStyle(handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    SetHighlightStyle(Prs3d_TypeOfHighlight, handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    SelectionStyle(handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    SetSelectionStyle(handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig
    IsHilighted(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, HideBySig
    IsHilighted(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    HilightWithColor(handle<AIS_InteractiveObject>*, handle<Prs3d_Drawer>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Unhilight(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DisplayPriority(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    SetDisplayPriority(handle<AIS_InteractiveObject>*, Int32): PrivateScope, Public, HideBySig
    GetZLayer(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    SetZLayer(handle<AIS_InteractiveObject>*, Int32): PrivateScope, Public, HideBySig
    SetViewAffinity(handle<AIS_InteractiveObject>*, handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DisplayMode(): PrivateScope, Public, HideBySig
    SetDisplayMode(handle<AIS_InteractiveObject>*, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetDisplayMode(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnsetDisplayMode(handle<AIS_InteractiveObject>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetLocation(handle<AIS_InteractiveObject>*, XTopLoc_Location): PrivateScope, Public, HideBySig
    ResetLocation(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    HasLocation(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    Location(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    SetTransformPersistence(handle<AIS_InteractiveObject>*, Graphic3d_TransModeFlags, xgp_Pnt): PrivateScope, Public, HideBySig
    SetTransformPersistence(handle<AIS_InteractiveObject>*, handle<Graphic3d_TransformPers>*): PrivateScope, Public, HideBySig
    SetPixelTolerance(Int32): PrivateScope, Public, HideBySig
    PixelTolerance(): PrivateScope, Public, HideBySig
    SetSelectionSensitivity(handle<AIS_InteractiveObject>*, Int32, Int32): PrivateScope, Public, HideBySig
    LastActiveView(handle<V3d_View>*): PrivateScope, Public, HideBySig
    MoveTo(Int32, Int32, handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ClearDetected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HasDetected(): PrivateScope, Public, HideBySig
    DetectedOwner(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, HideBySig
    DetectedInteractive(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    HasNextDetected(): PrivateScope, Public, HideBySig
    HilightNextDetected(handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HilightPreviousDetected(handle<V3d_View>*, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    InitDetected(): PrivateScope, Public, HideBySig
    MoreDetected(): PrivateScope, Public, HideBySig
    NextDetected(): PrivateScope, Public, HideBySig
    DetectedCurrentOwner(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, HideBySig
    AddSelect(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    AddSelect(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, HideBySig
Class TKMath.xgp_GTrsf: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Mat, TKMath.xgp_XYZ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Trsf): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_GTrsf*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_GTrsf* Handle 'get ' : 
  Methods:
    GetGTrsf(): PrivateScope, Public, HideBySig
    SetAffinity(xgp_Ax2, Double): PrivateScope, Public, HideBySig
    SetAffinity(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    SetValue(Int32, Int32, Double): PrivateScope, Public, HideBySig
    SetVectorialPart(xgp_Mat): PrivateScope, Public, HideBySig
    SetTranslationPart(xgp_XYZ): PrivateScope, Public, HideBySig
    SetTrsf(xgp_Trsf): PrivateScope, Public, HideBySig
    IsNegative(): PrivateScope, Public, HideBySig
    IsSingular(): PrivateScope, Public, HideBySig
    Form(): PrivateScope, Public, HideBySig
    SetForm(): PrivateScope, Public, HideBySig
    TranslationPart(): PrivateScope, Public, HideBySig
    VectorialPart(): PrivateScope, Public, HideBySig
    Value(Int32, Int32): PrivateScope, Public, HideBySig
    op_FunctionCall(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    Invert(): PrivateScope, Public, HideBySig
    Inverted(): PrivateScope, Public, HideBySig
    Multiplied(xgp_GTrsf): PrivateScope, Public, HideBySig
    op_Multiply(xgp_GTrsf): PrivateScope, Public, HideBySig, SpecialName
    Multiply(xgp_GTrsf): PrivateScope, Public, HideBySig
    op_MultiplicationAssignment(xgp_GTrsf): PrivateScope, Public, HideBySig, SpecialName
    PreMultiply(xgp_GTrsf): PrivateScope, Public, HideBySig
    Power(Int32): PrivateScope, Public, HideBySig
    Powered(Int32): PrivateScope, Public, HideBySig
    Transforms(Double, Double, Double): PrivateScope, Public, HideBySig
    Transforms(xgp_XYZ): PrivateScope, Public, HideBySig
    Trsf(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKernel.XQuantity_Color: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NCollection_Vec3<float>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, XQuantity_TypeOfColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XQuantity_Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Quantity_Color*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(XQuantity_NameOfColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Quantity_Color* Handle 'get ' : 
  Methods:
    GetColor(): PrivateScope, Public, HideBySig
    ChangeContrast(Double IsConst): PrivateScope, Public, HideBySig
    ChangeIntensity(Double IsConst): PrivateScope, Public, HideBySig
    SetValues(Double IsConst, Double, Double, XQuantity_TypeOfColor): PrivateScope, Public, HideBySig
    SetValues(XQuantity_NameOfColor IsConst): PrivateScope, Public, HideBySig
    Delta(XQuantity_Color, Double* IsImplicitlyDereferenced, Double* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Distance(XQuantity_Color): PrivateScope, Public, HideBySig
    SquareDistance(XQuantity_Color): PrivateScope, Public, HideBySig
    Blue(): PrivateScope, Public, HideBySig
    Green(): PrivateScope, Public, HideBySig
    Hue(): PrivateScope, Public, HideBySig
    IsDifferent(XQuantity_Color): PrivateScope, Public, HideBySig
    op_Inequality(XQuantity_Color): PrivateScope, Public, HideBySig, SpecialName
    IsEqual(XQuantity_Color): PrivateScope, Public, HideBySig
    op_Equality(XQuantity_Color): PrivateScope, Public, HideBySig, SpecialName
    Light(): PrivateScope, Public, HideBySig
    Name(Double IsConst, Double, Double): PrivateScope, Public, Static, HideBySig
    Name(): PrivateScope, Public, HideBySig
    Red(): PrivateScope, Public, HideBySig
    Saturation(): PrivateScope, Public, HideBySig
    Values(Double* IsImplicitlyDereferenced, Double* IsImplicitlyDereferenced, Double* IsImplicitlyDereferenced, XQuantity_TypeOfColor): PrivateScope, Public, HideBySig
    SetEpsilon(Double IsConst): PrivateScope, Public, Static, HideBySig
    Epsilon(): PrivateScope, Public, Static, HideBySig
    StringName(XQuantity_NameOfColor): PrivateScope, Public, Static, HideBySig
    ColorFromName(String, XQuantity_Color): PrivateScope, Public, Static, HideBySig
    ColorFromName(String, XQuantity_NameOfColor* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ColorFromHex(String, XQuantity_Color): PrivateScope, Public, Static, HideBySig
    ColorToHex(TCollection_AsciiString*, XQuantity_Color, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    HlsRgb(Double IsConst, Double, Double, Double* IsImplicitlyDereferenced, Double* IsImplicitlyDereferenced, Double* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    RgbHls(Double IsConst, Double, Double, Double* IsImplicitlyDereferenced, Double* IsImplicitlyDereferenced, Double* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Color2argb(XQuantity_Color, Int32* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Argb2color(Int32 IsConst, XQuantity_Color): PrivateScope, Public, Static, HideBySig
    Test(): PrivateScope, Public, Static, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<Graphic3d_PresentationAttributes> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XGraphic3d_PresentationAttributes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<Graphic3d_PresentationAttributes>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetPresentationAttributes(handle<Graphic3d_PresentationAttributes>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNativeHandle(handle<Graphic3d_PresentationAttributes>*): PrivateScope, Public, HideBySig
    Method(): PrivateScope, Public, HideBySig
    SetMethod(XAspect_TypeOfHighlightMethod): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ColorRGBA(): PrivateScope, Public, HideBySig
    Color(): PrivateScope, Public, HideBySig
    SetColor(XQuantity_Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Transparency(): PrivateScope, Public, HideBySig
    SetTransparency(Single IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ZLayer(): PrivateScope, Public, HideBySig
    SetZLayer(Int32 IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DisplayMode(): PrivateScope, Public, HideBySig
    SetDisplayMode(Int32 IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BasicFillAreaAspect(): PrivateScope, Public, HideBySig
    SetBasicFillAreaAspect(handle<Graphic3d_AspectFillArea3d>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<Graphic3d_AspectLine3d> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XGraphic3d_AspectLine3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKernel.XQuantity_Color, XAspect_TypeOfLine, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<Graphic3d_AspectLine3d>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetAspectLine3d(handle<Graphic3d_AspectLine3d>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNativeHandle(handle<Graphic3d_AspectLine3d>*): PrivateScope, Public, HideBySig
    Type(): PrivateScope, Public, HideBySig
    SetType(XAspect_TypeOfLine): PrivateScope, Public, HideBySig
    Width(): PrivateScope, Public, HideBySig
    SetWidth(Single): PrivateScope, Public, HideBySig
    SetWidth(Double IsConst): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XGraphic3d_AspectLine3d(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<Prs3d_LineAspect> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XPrs3d_LineAspect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKV3d.XGraphic3d_AspectLine3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XQuantity_Color, XAspect_TypeOfLine, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetNativeHandle(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    GetLineAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor(XQuantity_Color): PrivateScope, Public, HideBySig
    SetTypeOfLine(XAspect_TypeOfLine): PrivateScope, Public, HideBySig
    SetWidth(Double IsConst): PrivateScope, Public, HideBySig
    Aspect(): PrivateScope, Public, HideBySig
    SetAspect(XGraphic3d_AspectLine3d): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Int32 IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XPrs3d_LineAspect(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<Prs3d_Drawer> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XPrs3d_Drawer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKV3d.XGraphic3d_PresentationAttributes
    Void .ctor(opencascade.handle<Prs3d_Drawer>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    HasOwnArrowAspect(): PrivateScope, Public, HideBySig
    SetLineArrowDraw(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    LineArrowDraw(): PrivateScope, Public, HideBySig
    HasOwnLineArrowDraw(): PrivateScope, Public, HideBySig
    HiddenLineAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    SetHiddenLineAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnHiddenLineAspect(): PrivateScope, Public, HideBySig
    DrawHiddenLine(): PrivateScope, Public, HideBySig
    EnableDrawHiddenLine(): PrivateScope, Public, HideBySig
    DisableDrawHiddenLine(): PrivateScope, Public, HideBySig
    HasOwnDrawHiddenLine(): PrivateScope, Public, HideBySig
    VectorAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    SetVectorAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnVectorAspect(): PrivateScope, Public, HideBySig
    SetVertexDrawMode(XPrs3d_VertexDrawMode): PrivateScope, Public, HideBySig
    VertexDrawMode(): PrivateScope, Public, HideBySig
    HasOwnVertexDrawMode(): PrivateScope, Public, HideBySig
    DatumAspect(handle<Prs3d_DatumAspect>*): PrivateScope, Public, HideBySig
    SetDatumAspect(handle<Prs3d_DatumAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnDatumAspect(): PrivateScope, Public, HideBySig
    SectionAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    SetSectionAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnSectionAspect(): PrivateScope, Public, HideBySig
    SetFreeBoundaryAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    FreeBoundaryAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    HasOwnFreeBoundaryAspect(): PrivateScope, Public, HideBySig
    SetFreeBoundaryDraw(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    FreeBoundaryDraw(): PrivateScope, Public, HideBySig
    HasOwnFreeBoundaryDraw(): PrivateScope, Public, HideBySig
    SetUnFreeBoundaryAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    UnFreeBoundaryAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    HasOwnUnFreeBoundaryAspect(): PrivateScope, Public, HideBySig
    SetUnFreeBoundaryDraw(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    UnFreeBoundaryDraw(): PrivateScope, Public, HideBySig
    HasOwnUnFreeBoundaryDraw(): PrivateScope, Public, HideBySig
    SetFaceBoundaryAspect(XPrs3d_LineAspect): PrivateScope, Public, HideBySig
    FaceBoundaryAspect(): PrivateScope, Public, HideBySig
    HasOwnFaceBoundaryAspect(): PrivateScope, Public, HideBySig
    SetupOwnFaceBoundaryAspect(XPrs3d_Drawer): PrivateScope, Public, HideBySig
    SetFaceBoundaryDraw(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    FaceBoundaryDraw(): PrivateScope, Public, HideBySig
    HasOwnFaceBoundaryDraw(): PrivateScope, Public, HideBySig
    HasOwnFaceBoundaryUpperContinuity(): PrivateScope, Public, HideBySig
    FaceBoundaryUpperContinuity(): PrivateScope, Public, HideBySig
    SetFaceBoundaryUpperContinuity(GeomAbs_Shape): PrivateScope, Public, HideBySig
    UnsetFaceBoundaryUpperContinuity(): PrivateScope, Public, HideBySig
    DimensionAspect(handle<Prs3d_DimensionAspect>*): PrivateScope, Public, HideBySig
    SetDimensionAspect(handle<Prs3d_DimensionAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnDimensionAspect(): PrivateScope, Public, HideBySig
    SetDimLengthModelUnits(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetDimAngleModelUnits(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    DimLengthModelUnits(TCollection_AsciiString*): PrivateScope, Public, HideBySig
    DimAngleModelUnits(TCollection_AsciiString*): PrivateScope, Public, HideBySig
    HasOwnDimLengthModelUnits(): PrivateScope, Public, HideBySig
    HasOwnDimAngleModelUnits(): PrivateScope, Public, HideBySig
    SetDimLengthDisplayUnits(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetDimAngleDisplayUnits(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    DimLengthDisplayUnits(TCollection_AsciiString*): PrivateScope, Public, HideBySig
    DimAngleDisplayUnits(TCollection_AsciiString*): PrivateScope, Public, HideBySig
    HasOwnDimLengthDisplayUnits(): PrivateScope, Public, HideBySig
    HasOwnDimAngleDisplayUnits(): PrivateScope, Public, HideBySig
    Link(XPrs3d_Drawer): PrivateScope, Public, HideBySig
    Link(): PrivateScope, Public, HideBySig
    HasLink(): PrivateScope, Public, HideBySig
    SetLink(XPrs3d_Drawer): PrivateScope, Public, HideBySig
    ClearLocalAttributes(): PrivateScope, Public, HideBySig
    SetShaderProgram(handle<Graphic3d_ShaderProgram>* IsImplicitlyDereferenced, Graphic3d_GroupAspect, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetShadingModel(XGraphic3d_TypeOfShadingModel, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XPrs3d_Drawer(): PrivateScope, Public, HideBySig
    GetDrawer(handle<Prs3d_Drawer>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPresentationAttributes(handle<Graphic3d_PresentationAttributes>*): PrivateScope, Public, Virtual, HideBySig
    SetTypeOfDeflection(XAspect_TypeOfDeflection): PrivateScope, Public, HideBySig
    TypeOfDeflection(): PrivateScope, Public, HideBySig
    HasOwnTypeOfDeflection(): PrivateScope, Public, HideBySig
    SetMaximalChordialDeviation(Double IsConst): PrivateScope, Public, HideBySig
    MaximalChordialDeviation(): PrivateScope, Public, HideBySig
    HasOwnMaximalChordialDeviation(): PrivateScope, Public, HideBySig
    SetTypeOfHLR(XPrs3d_TypeOfHLR): PrivateScope, Public, HideBySig
    TypeOfHLR(): PrivateScope, Public, HideBySig
    HasOwnTypeOfHLR(): PrivateScope, Public, HideBySig
    SetMaximalParameterValue(Double IsConst): PrivateScope, Public, HideBySig
    MaximalParameterValue(): PrivateScope, Public, HideBySig
    HasOwnMaximalParameterValue(): PrivateScope, Public, HideBySig
    SetIsoOnPlane(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    IsoOnPlane(): PrivateScope, Public, HideBySig
    HasOwnIsoOnPlane(): PrivateScope, Public, HideBySig
    IsoOnTriangulation(): PrivateScope, Public, HideBySig
    HasOwnIsoOnTriangulation(): PrivateScope, Public, HideBySig
    SetIsoOnTriangulation(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    SetDiscretisation(Int32 IsConst): PrivateScope, Public, HideBySig
    Discretisation(): PrivateScope, Public, HideBySig
    HasOwnDiscretisation(): PrivateScope, Public, HideBySig
    SetDeviationCoefficient(): PrivateScope, Public, HideBySig
    SetDeviationCoefficient(Double IsConst): PrivateScope, Public, HideBySig
    DeviationCoefficient(): PrivateScope, Public, HideBySig
    HasOwnDeviationCoefficient(): PrivateScope, Public, HideBySig
    PreviousDeviationCoefficient(): PrivateScope, Public, HideBySig
    UpdatePreviousDeviationCoefficient(): PrivateScope, Public, HideBySig
    SetHLRDeviationCoefficient(): PrivateScope, Public, HideBySig
    SetHLRDeviationCoefficient(Double IsConst): PrivateScope, Public, HideBySig
    HLRDeviationCoefficient(): PrivateScope, Public, HideBySig
    HasOwnHLRDeviationCoefficient(): PrivateScope, Public, HideBySig
    PreviousHLRDeviationCoefficient(): PrivateScope, Public, HideBySig
    SetDeviationAngle(): PrivateScope, Public, HideBySig
    SetDeviationAngle(Double IsConst): PrivateScope, Public, HideBySig
    DeviationAngle(): PrivateScope, Public, HideBySig
    HasOwnDeviationAngle(): PrivateScope, Public, HideBySig
    PreviousDeviationAngle(): PrivateScope, Public, HideBySig
    UpdatePreviousDeviationAngle(): PrivateScope, Public, HideBySig
    SetHLRAngle(): PrivateScope, Public, HideBySig
    SetHLRAngle(Double IsConst): PrivateScope, Public, HideBySig
    HLRAngle(): PrivateScope, Public, HideBySig
    HasOwnHLRDeviationAngle(): PrivateScope, Public, HideBySig
    PreviousHLRDeviationAngle(): PrivateScope, Public, HideBySig
    SetAutoTriangulation(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    IsAutoTriangulation(): PrivateScope, Public, HideBySig
    HasOwnIsAutoTriangulation(): PrivateScope, Public, HideBySig
    UIsoAspect(handle<Prs3d_IsoAspect>*): PrivateScope, Public, HideBySig
    SetUIsoAspect(handle<Prs3d_IsoAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnUIsoAspect(): PrivateScope, Public, HideBySig
    VIsoAspect(handle<Prs3d_IsoAspect>*): PrivateScope, Public, HideBySig
    SetVIsoAspect(handle<Prs3d_IsoAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnVIsoAspect(): PrivateScope, Public, HideBySig
    WireAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    SetWireAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnWireAspect(): PrivateScope, Public, HideBySig
    SetWireDraw(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    WireDraw(): PrivateScope, Public, HideBySig
    HasOwnWireDraw(): PrivateScope, Public, HideBySig
    PointAspect(handle<Prs3d_PointAspect>*): PrivateScope, Public, HideBySig
    SetPointAspect(handle<Prs3d_PointAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnPointAspect(): PrivateScope, Public, HideBySig
    SetupOwnPointAspect(XPrs3d_Drawer): PrivateScope, Public, HideBySig
    LineAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    SetLineAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnLineAspect(): PrivateScope, Public, HideBySig
    SetOwnLineAspects(XPrs3d_Drawer): PrivateScope, Public, HideBySig
    SetOwnDatumAspects(XPrs3d_Drawer): PrivateScope, Public, HideBySig
    TextAspect(handle<Prs3d_TextAspect>*): PrivateScope, Public, HideBySig
    SetTextAspect(handle<Prs3d_TextAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnTextAspect(): PrivateScope, Public, HideBySig
    ShadingAspect(handle<Prs3d_ShadingAspect>*): PrivateScope, Public, HideBySig
    SetShadingAspect(handle<Prs3d_ShadingAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnShadingAspect(): PrivateScope, Public, HideBySig
    SetupOwnShadingAspect(XPrs3d_Drawer): PrivateScope, Public, HideBySig
    SeenLineAspect(handle<Prs3d_LineAspect>*): PrivateScope, Public, HideBySig
    SetSeenLineAspect(handle<Prs3d_LineAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnSeenLineAspect(): PrivateScope, Public, HideBySig
    PlaneAspect(handle<Prs3d_PlaneAspect>*): PrivateScope, Public, HideBySig
    SetPlaneAspect(handle<Prs3d_PlaneAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasOwnPlaneAspect(): PrivateScope, Public, HideBySig
    ArrowAspect(handle<Prs3d_ArrowAspect>*): PrivateScope, Public, HideBySig
    SetArrowAspect(handle<Prs3d_ArrowAspect>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
Class TKernel.XTCollection_AsciiString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKernel.XTCollection_AsciiString, TKernel.XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XTCollection_AsciiString, SByte*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XTCollection_AsciiString, SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TCollection_AsciiString*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte*, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    TCollection_AsciiString* Handle 'get ' : 
  Methods:
    RealValue(): PrivateScope, Public, HideBySig
    RemoveAll(SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    RemoveAll(SByte IsSignUnspecifiedByte, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Remove(Int32, Int32): PrivateScope, Public, HideBySig
    RightAdjust(): PrivateScope, Public, HideBySig
    RightJustify(Int32, SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    Search(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    Search(SByte*): PrivateScope, Public, HideBySig
    SearchFromEnd(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    SearchFromEnd(SByte*): PrivateScope, Public, HideBySig
    SetValue(Int32, XTCollection_AsciiString): PrivateScope, Public, HideBySig
    SetValue(Int32, SByte*): PrivateScope, Public, HideBySig
    SetValue(Int32, SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    Split(Int32): PrivateScope, Public, HideBySig
    SubString(Int32, Int32): PrivateScope, Public, HideBySig
    ToCString(): PrivateScope, Public, HideBySig
    Token(SByte*, Int32): PrivateScope, Public, HideBySig
    Trunc(Int32): PrivateScope, Public, HideBySig
    UpperCase(): PrivateScope, Public, HideBySig
    UsefullLength(): PrivateScope, Public, HideBySig
    Value(Int32): PrivateScope, Public, HideBySig
    HashCode(XTCollection_AsciiString, Int32): PrivateScope, Public, Static, HideBySig
    IsSameString(XTCollection_AsciiString, XTCollection_AsciiString, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
    GetAsciiString(): PrivateScope, Public, HideBySig
    AssignCat(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    AssignCat(SByte*): PrivateScope, Public, HideBySig
    AssignCat(Double): PrivateScope, Public, HideBySig
    AssignCat(Int32): PrivateScope, Public, HideBySig
    AssignCat(SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    op_AdditionAssignment(XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName
    op_AdditionAssignment(SByte*): PrivateScope, Public, HideBySig, SpecialName
    op_AdditionAssignment(Double): PrivateScope, Public, HideBySig, SpecialName
    op_AdditionAssignment(Int32): PrivateScope, Public, HideBySig, SpecialName
    op_AdditionAssignment(SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig, SpecialName
    Capitalize(): PrivateScope, Public, HideBySig
    Cat(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    Cat(SByte*): PrivateScope, Public, HideBySig
    Cat(Double): PrivateScope, Public, HideBySig
    Cat(Int32): PrivateScope, Public, HideBySig
    Cat(SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    op_Addition(XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(SByte*): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig, SpecialName
    Center(Int32, SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    ChangeAll(SByte IsSignUnspecifiedByte, SByte IsSignUnspecifiedByte, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Copy(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    Copy(SByte*): PrivateScope, Public, HideBySig
    op_Assign(XTCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(SByte*): PrivateScope, Public, HideBySig, SpecialName
    Swap(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    FirstLocationInSet(XTCollection_AsciiString, Int32, Int32): PrivateScope, Public, HideBySig
    FirstLocationNotInSet(XTCollection_AsciiString, Int32, Int32): PrivateScope, Public, HideBySig
    Insert(Int32, XTCollection_AsciiString): PrivateScope, Public, HideBySig
    Insert(Int32, SByte*): PrivateScope, Public, HideBySig
    Insert(Int32, SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    InsertAfter(Int32, XTCollection_AsciiString): PrivateScope, Public, HideBySig
    InsertBefore(Int32, XTCollection_AsciiString): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    IsEqual(XTCollection_AsciiString, SByte*): PrivateScope, Public, Static, HideBySig
    IsEqual(XTCollection_AsciiString, XTCollection_AsciiString): PrivateScope, Public, Static, HideBySig
    IsEqual(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    IsEqual(SByte*): PrivateScope, Public, HideBySig
    op_Equality(XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(SByte*): PrivateScope, Public, HideBySig, SpecialName
    IsDifferent(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    IsDifferent(SByte*): PrivateScope, Public, HideBySig
    op_Inequality(XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(SByte*): PrivateScope, Public, HideBySig, SpecialName
    IsLess(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    IsLess(SByte*): PrivateScope, Public, HideBySig
    op_LessThan(XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(SByte*): PrivateScope, Public, HideBySig, SpecialName
    IsGreater(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    IsGreater(SByte*): PrivateScope, Public, HideBySig
    op_GreaterThan(XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThan(SByte*): PrivateScope, Public, HideBySig, SpecialName
    StartsWith(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    EndsWith(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    IntegerValue(): PrivateScope, Public, HideBySig
    IsIntegerValue(): PrivateScope, Public, HideBySig
    IsRealValue(): PrivateScope, Public, HideBySig
    IsAscii(): PrivateScope, Public, HideBySig
    LeftAdjust(): PrivateScope, Public, HideBySig
    LeftJustify(Int32, SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Location(Int32, SByte IsSignUnspecifiedByte, Int32, Int32): PrivateScope, Public, HideBySig
    Location(XTCollection_AsciiString, Int32, Int32): PrivateScope, Public, HideBySig
    LowerCase(): PrivateScope, Public, HideBySig
    Prepend(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    Print(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Read(basic_istream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
Class TKV3d.XGraphic3d_MaterialAspect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(XGraphic3d_NameOfMaterial): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Graphic3d_MaterialAspect* Handle 'get ' : 
  Methods:
    NumberOfMaterials(): PrivateScope, Public, Static, HideBySig
    MaterialName(): PrivateScope, Public, HideBySig
    MaterialName(Int32 IsConst): PrivateScope, Public, Static, HideBySig
    MaterialType(XGraphic3d_TypeOfMaterial): PrivateScope, Public, HideBySig
    MaterialType(): PrivateScope, Public, HideBySig
    MaterialType(Int32 IsConst): PrivateScope, Public, Static, HideBySig
    MaterialFromName(String): PrivateScope, Public, Static, HideBySig
    MaterialFromName(String, XGraphic3d_NameOfMaterial): PrivateScope, Public, Static, HideBySig
    GetMaterialAspect(Graphic3d_MaterialAspect*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Name(): PrivateScope, Public, HideBySig
    RequestedName(): PrivateScope, Public, HideBySig
    StringName(): PrivateScope, Public, HideBySig
    SetMaterialName(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    Color(): PrivateScope, Public, HideBySig
    SetColor(XQuantity_Color): PrivateScope, Public, HideBySig
    Transparency(): PrivateScope, Public, HideBySig
    Alpha(): PrivateScope, Public, HideBySig
    SetTransparency(Single IsConst): PrivateScope, Public, HideBySig
    SetAlpha(Single): PrivateScope, Public, HideBySig
    AmbientColor(): PrivateScope, Public, HideBySig
    SetAmbientColor(XQuantity_Color): PrivateScope, Public, HideBySig
    DiffuseColor(): PrivateScope, Public, HideBySig
    SetDiffuseColor(XQuantity_Color): PrivateScope, Public, HideBySig
    SpecularColor(): PrivateScope, Public, HideBySig
    SetSpecularColor(XQuantity_Color): PrivateScope, Public, HideBySig
    EmissiveColor(): PrivateScope, Public, HideBySig
    SetEmissiveColor(XQuantity_Color): PrivateScope, Public, HideBySig
    Shininess(): PrivateScope, Public, HideBySig
    SetShininess(Single IsConst): PrivateScope, Public, HideBySig
    IncreaseShine(Single IsConst): PrivateScope, Public, HideBySig
    RefractionIndex(): PrivateScope, Public, HideBySig
    SetRefractionIndex(Single IsConst): PrivateScope, Public, HideBySig
    BSDF(): PrivateScope, Public, HideBySig
    SetBSDF(Graphic3d_BSDF* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ReflectionMode(XGraphic3d_TypeOfReflection): PrivateScope, Public, HideBySig
    SetMaterialType(XGraphic3d_TypeOfMaterial): PrivateScope, Public, HideBySig
    IsDifferent(XGraphic3d_MaterialAspect): PrivateScope, Public, HideBySig
    op_Inequality(XGraphic3d_MaterialAspect): PrivateScope, Public, HideBySig, SpecialName
    IsEqual(XGraphic3d_MaterialAspect): PrivateScope, Public, HideBySig
    op_Equality(XGraphic3d_MaterialAspect): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<PrsMgr_PresentableObject> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XPrsMgr_PresentableObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<PrsMgr_PresentableObject>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetBaseNativeHandle(handle<PrsMgr_PresentableObject>*): PrivateScope, Public, HideBySig
    GetPresentableObject(handle<PrsMgr_PresentableObject>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Presentations(): PrivateScope, Public, HideBySig
    ZLayer(): PrivateScope, Public, HideBySig
    SetZLayer(Int32 IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMutable(): PrivateScope, Public, HideBySig
    SetMutable(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasDisplayMode(): PrivateScope, Public, HideBySig
    DisplayMode(): PrivateScope, Public, HideBySig
    SetDisplayMode(Int32 IsConst): PrivateScope, Public, HideBySig
    UnsetDisplayMode(): PrivateScope, Public, HideBySig
    HasHilightMode(): PrivateScope, Public, HideBySig
    HilightMode(): PrivateScope, Public, HideBySig
    SetHilightMode(Int32 IsConst): PrivateScope, Public, HideBySig
    UnsetHilightMode(): PrivateScope, Public, HideBySig
    AcceptDisplayMode(Int32 IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DefaultDisplayMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToBeUpdated(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetToUpdate(): PrivateScope, Public, HideBySig
    SetToUpdate(Int32): PrivateScope, Public, HideBySig
    IsInfinite(): PrivateScope, Public, HideBySig
    SetInfiniteState(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    TypeOfPresentation3d(): PrivateScope, Public, HideBySig
    SetTypeOfPresentation(XPrsMgr_TypeOfPresentation3d): PrivateScope, Public, HideBySig
    Attributes(): PrivateScope, Public, HideBySig
    SetAttributes(XPrs3d_Drawer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HilightAttributes(): PrivateScope, Public, HideBySig
    SetHilightAttributes(XPrs3d_Drawer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DynamicHilightAttributes(): PrivateScope, Public, HideBySig
    SetDynamicHilightAttributes(XPrs3d_Drawer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnsetHilightAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SynchronizeAspects(): PrivateScope, Public, HideBySig
    TransformPersistence(): PrivateScope, Public, HideBySig
    SetTransformPersistence(handle<Graphic3d_TransformPers>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LocalTransformationGeom(): PrivateScope, Public, HideBySig
    SetLocalTransformation(handle<Geom_Transformation>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetLocalTransformation(xgp_Trsf): PrivateScope, Public, HideBySig
    HasTransformation(): PrivateScope, Public, HideBySig
    TransformationGeom(): PrivateScope, Public, HideBySig
    LocalTransformation(): PrivateScope, Public, HideBySig
    Transformation(): PrivateScope, Public, HideBySig
    InversedTransformation(): PrivateScope, Public, HideBySig
    CombinedParentTransformation(): PrivateScope, Public, HideBySig
    ResetTransformation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateTransformation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClipPlanes(): PrivateScope, Public, HideBySig
    SetClipPlanes(handle<Graphic3d_SequenceOfHClipPlane>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddClipPlane(handle<Graphic3d_ClipPlane>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveClipPlane(handle<Graphic3d_ClipPlane>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Parent(): PrivateScope, Public, HideBySig
    Children(): PrivateScope, Public, HideBySig
    AddChild(XPrsMgr_PresentableObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddChildWithCurrentTransformation(XPrsMgr_PresentableObject): PrivateScope, Public, HideBySig
    RemoveChild(XPrsMgr_PresentableObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveChildWithRestoreTransformation(XPrsMgr_PresentableObject): PrivateScope, Public, HideBySig
    HasOwnPresentations(): PrivateScope, Public, HideBySig
    BoundingBox(Bnd_Box* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetIsoOnTriangulation(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    CurrentFacingModel(): PrivateScope, Public, HideBySig
    SetCurrentFacingModel(XAspect_TypeOfFacingModel): PrivateScope, Public, HideBySig
    HasColor(): PrivateScope, Public, HideBySig
    Color(XQuantity_Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor(XQuantity_Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnsetColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasWidth(): PrivateScope, Public, HideBySig
    Width(): PrivateScope, Public, HideBySig
    SetWidth(Double IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnsetWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasMaterial(): PrivateScope, Public, HideBySig
    Material(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMaterial(XGraphic3d_MaterialAspect): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnsetMaterial(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsTransparent(): PrivateScope, Public, HideBySig
    Transparency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTransparency(Double IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnsetTransparency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasPolygonOffsets(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PolygonOffsets(Int32* IsImplicitlyDereferenced, Single* IsImplicitlyDereferenced, Single* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetPolygonOffsets(Int32 IsConst, Single IsConst, Single IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnsetAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DumpJson(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Int32 IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToPropagateVisualState(): PrivateScope, Public, HideBySig
    SetPropagateVisualState(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XPrsMgr_PresentableObject(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<SelectMgr_SelectableObject> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XSelectMgr_SelectableObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKV3d.XPrsMgr_PresentableObject
    Void .ctor(opencascade.handle<SelectMgr_SelectableObject>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetSelectMgr_SelectableObjectNativeHandle(handle<SelectMgr_SelectableObject>*): PrivateScope, Public, HideBySig
    GetSelectableObject(handle<SelectMgr_SelectableObject>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPresentableObject(handle<PrsMgr_PresentableObject>*): PrivateScope, Public, Virtual, HideBySig
    ComputeSelection(handle<SelectMgr_Selection>* IsImplicitlyDereferenced, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AcceptShapeDecomposition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RecomputePrimitives(Int32 IsConst): PrivateScope, Public, HideBySig
    RecomputePrimitives(): PrivateScope, Public, HideBySig
    AddSelection(handle<SelectMgr_Selection>* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    ClearSelections(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    Selection(handle<SelectMgr_Selection>*, Int32 IsConst): PrivateScope, Public, HideBySig
    HasSelection(Int32 IsConst): PrivateScope, Public, HideBySig
    Selections(NCollection_Sequence<opencascade::handle<SelectMgr_Selection> >*): PrivateScope, Public, HideBySig
    ResetTransformation(): PrivateScope, Public, Virtual, HideBySig
    UpdateTransformation(): PrivateScope, Public, Virtual, HideBySig
    UpdateTransformations(handle<SelectMgr_Selection>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HilightSelected(handle<PrsMgr_PresentationManager>* IsImplicitlyDereferenced, NCollection_Sequence<opencascade::handle<SelectMgr_EntityOwner> >* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearSelected(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearDynamicHighlight(handle<PrsMgr_PresentationManager>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HilightOwnerWithColor(handle<PrsMgr_PresentationManager>* IsImplicitlyDereferenced, handle<Prs3d_Drawer>* IsImplicitlyDereferenced, handle<SelectMgr_EntityOwner>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsAutoHilight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAutoHilight(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHilightPresentation(handle<Graphic3d_Structure>*, handle<PrsMgr_PresentationManager>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetSelectPresentation(handle<Graphic3d_Structure>*, handle<PrsMgr_PresentationManager>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ErasePresentations(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetZLayer(Int32 IsConst): PrivateScope, Public, Virtual, HideBySig
    UpdateSelection(Int32 IsConst): PrivateScope, Public, HideBySig
    SetAssemblyOwner(handle<SelectMgr_EntityOwner>* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    BndBoxOfSelected(Bnd_Box*, handle<NCollection_Shared<NCollection_IndexedMap<opencascade::handle<SelectMgr_EntityOwner>\,NCollection_DefaultHasher<opencascade::handle<SelectMgr_EntityOwner> > >\,void> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GlobalSelectionMode(): PrivateScope, Public, HideBySig
    GlobalSelOwner(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAssemblyOwner(handle<SelectMgr_EntityOwner>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DumpJson(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Int32): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<AIS_InteractiveObject> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XAIS_InteractiveObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKV3d.XSelectMgr_SelectableObject
    Void .ctor(opencascade.handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetNativeHandle(handle<AIS_InteractiveObject>*): PrivateScope, Public, HideBySig
    GetInteractiveObject(handle<AIS_InteractiveObject>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSelectableObject(handle<SelectMgr_SelectableObject>*): PrivateScope, Public, Virtual, HideBySig
    GetPresentableObject(handle<PrsMgr_PresentableObject>*): PrivateScope, Public, Virtual, HideBySig
    Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Signature(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Redisplay(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HasInteractiveContext(): PrivateScope, Public, HideBySig
    InteractiveContext(): PrivateScope, Public, HideBySig
    SetContext(handle<AIS_InteractiveContext>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasOwner(): PrivateScope, Public, HideBySig
    GetOwner(handle<Standard_Transient>*): PrivateScope, Public, HideBySig
    SetOwner(handle<Standard_Transient>*): PrivateScope, Public, HideBySig
    ClearOwner(): PrivateScope, Public, HideBySig
    GetContext(handle<AIS_InteractiveContext>*): PrivateScope, Public, HideBySig
    HasPresentation(): PrivateScope, Public, HideBySig
    Presentation(handle<Graphic3d_Structure>*): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >*, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<TPrsStd_AISPresentation> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKVCAF.XTPrsStd_AISPresentation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKLCAF.XTDF_Attribute
    Void .ctor(opencascade.handle<TPrsStd_AISPresentation>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetAISPresentation(handle<TPrsStd_AISPresentation>*): PrivateScope, Public, HideBySig
    GetAttribute(handle<TDF_Attribute>*): PrivateScope, Public, Virtual, HideBySig
    GetID(): PrivateScope, Public, Static, HideBySig
    Set(XTDF_Attribute): PrivateScope, Public, Static, HideBySig
    Set(handle<TPrsStd_AISPresentation>*, handle<TDF_Attribute>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Set(XTDF_Label, XStandard_GUID): PrivateScope, Public, Static, HideBySig
    Set(handle<TPrsStd_AISPresentation>*, TDF_Label* IsImplicitlyDereferenced, Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Unset(XTDF_Label): PrivateScope, Public, Static, HideBySig
    Unset(TDF_Label* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    SetDisplayed(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    Display(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    Erase(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    Update(): PrivateScope, Public, HideBySig
    GetDriverGUID(): PrivateScope, Public, HideBySig
    SetDriverGUID(XStandard_GUID): PrivateScope, Public, HideBySig
    SetDriverGUID(Standard_GUID* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    IsDisplayed(): PrivateScope, Public, HideBySig
    GetAIS(): PrivateScope, Public, HideBySig
    Material(): PrivateScope, Public, HideBySig
    SetMaterial(Int32 IsConst): PrivateScope, Public, HideBySig
    SetMaterial(XGraphic3d_NameOfMaterial): PrivateScope, Public, HideBySig
    HasOwnMaterial(): PrivateScope, Public, HideBySig
    UnsetMaterial(): PrivateScope, Public, HideBySig
    SetTransparency(Double IsConst): PrivateScope, Public, HideBySig
    Transparency(): PrivateScope, Public, HideBySig
    HasOwnTransparency(): PrivateScope, Public, HideBySig
    UnsetTransparency(): PrivateScope, Public, HideBySig
    Color(): PrivateScope, Public, HideBySig
    SetColor(XQuantity_NameOfColor): PrivateScope, Public, HideBySig
    HasOwnColor(): PrivateScope, Public, HideBySig
    UnsetColor(): PrivateScope, Public, HideBySig
    Width(): PrivateScope, Public, HideBySig
    SetWidth(Double IsConst): PrivateScope, Public, HideBySig
    HasOwnWidth(): PrivateScope, Public, HideBySig
    UnsetWidth(): PrivateScope, Public, HideBySig
    Mode(): PrivateScope, Public, HideBySig
    SetMode(Int32 IsConst): PrivateScope, Public, HideBySig
    HasOwnMode(): PrivateScope, Public, HideBySig
    UnsetMode(): PrivateScope, Public, HideBySig
    GetNbSelectionModes(): PrivateScope, Public, HideBySig
    SelectionMode(Int32 IsConst): PrivateScope, Public, HideBySig
    SetSelectionMode(Int32 IsConst, Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    AddSelectionMode(Int32 IsConst, Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    HasOwnSelectionMode(): PrivateScope, Public, HideBySig
    UnsetSelectionMode(): PrivateScope, Public, HideBySig
    ID(): PrivateScope, Public, Virtual, HideBySig
    NewEmpty(): PrivateScope, Public, Virtual, HideBySig
    Restore(XTDF_Attribute): PrivateScope, Public, Virtual, HideBySig
    Paste(XTDF_Attribute, handle<TDF_RelocationTable>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    BackupCopy(): PrivateScope, Public, Virtual, HideBySig
    AfterAddition(): PrivateScope, Public, Virtual, HideBySig
    BeforeRemoval(): PrivateScope, Public, Virtual, HideBySig
    BeforeForget(): PrivateScope, Public, Virtual, HideBySig
    AfterResume(): PrivateScope, Public, Virtual, HideBySig
    BeforeUndo(handle<TDF_AttributeDelta>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, Virtual, HideBySig
    AfterUndo(handle<TDF_AttributeDelta>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTPrsStd_AISPresentation(): PrivateScope, Public, HideBySig
Struct XAspect_TypeOfFacingModel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_TypeOfFacingModel Aspect_TOFM_BOTH_SIDE = 0 : Public, Static, Literal, HasDefault
    XAspect_TypeOfFacingModel Aspect_TOFM_BACK_SIDE = 1 : Public, Static, Literal, HasDefault
    XAspect_TypeOfFacingModel Aspect_TOFM_FRONT_SIDE = 2 : Public, Static, Literal, HasDefault
Struct XAspect_TypeOfHighlightMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_TypeOfHighlightMethod Aspect_TOHM_COLOR = 0 : Public, Static, Literal, HasDefault
    XAspect_TypeOfHighlightMethod Aspect_TOHM_BOUNDBOX = 1 : Public, Static, Literal, HasDefault
Struct XQuantity_NameOfColor: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XQuantity_NameOfColor Quantity_NOC_BLACK = 0 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MATRABLUE = 1 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MATRAGRAY = 2 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ALICEBLUE = 3 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ANTIQUEWHITE = 4 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ANTIQUEWHITE1 = 5 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ANTIQUEWHITE2 = 6 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ANTIQUEWHITE3 = 7 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ANTIQUEWHITE4 = 8 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_AQUAMARINE1 = 9 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_AQUAMARINE2 = 10 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_AQUAMARINE4 = 11 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_AZURE = 12 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_AZURE2 = 13 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_AZURE3 = 14 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_AZURE4 = 15 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BEIGE = 16 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BISQUE = 17 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BISQUE2 = 18 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BISQUE3 = 19 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BISQUE4 = 20 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BLANCHEDALMOND = 21 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BLUE1 = 22 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BLUE2 = 23 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BLUE3 = 24 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BLUE4 = 25 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BLUEVIOLET = 26 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BROWN = 27 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BROWN1 = 28 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BROWN2 = 29 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BROWN3 = 30 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BROWN4 = 31 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BURLYWOOD = 32 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BURLYWOOD1 = 33 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BURLYWOOD2 = 34 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BURLYWOOD3 = 35 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BURLYWOOD4 = 36 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CADETBLUE = 37 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CADETBLUE1 = 38 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CADETBLUE2 = 39 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CADETBLUE3 = 40 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CADETBLUE4 = 41 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHARTREUSE = 42 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHARTREUSE1 = 43 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHARTREUSE2 = 44 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHARTREUSE3 = 45 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHARTREUSE4 = 46 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHOCOLATE = 47 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHOCOLATE1 = 48 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHOCOLATE2 = 49 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHOCOLATE3 = 50 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CHOCOLATE4 = 51 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORAL = 52 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORAL1 = 53 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORAL2 = 54 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORAL3 = 55 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORAL4 = 56 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORNFLOWERBLUE = 57 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORNSILK1 = 58 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORNSILK2 = 59 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORNSILK3 = 60 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CORNSILK4 = 61 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CYAN1 = 62 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CYAN2 = 63 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CYAN3 = 64 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_CYAN4 = 65 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKGOLDENROD = 66 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKGOLDENROD1 = 67 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKGOLDENROD2 = 68 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKGOLDENROD3 = 69 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKGOLDENROD4 = 70 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKGREEN = 71 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKKHAKI = 72 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKOLIVEGREEN = 73 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKOLIVEGREEN1 = 74 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKOLIVEGREEN2 = 75 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKOLIVEGREEN3 = 76 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKOLIVEGREEN4 = 77 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORANGE = 78 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORANGE1 = 79 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORANGE2 = 80 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORANGE3 = 81 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORANGE4 = 82 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORCHID = 83 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORCHID1 = 84 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORCHID2 = 85 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORCHID3 = 86 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKORCHID4 = 87 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSALMON = 88 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSEAGREEN = 89 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSEAGREEN1 = 90 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSEAGREEN2 = 91 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSEAGREEN3 = 92 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSEAGREEN4 = 93 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSLATEBLUE = 94 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSLATEGRAY1 = 95 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSLATEGRAY2 = 96 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSLATEGRAY3 = 97 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSLATEGRAY4 = 98 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKSLATEGRAY = 99 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKTURQUOISE = 100 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DARKVIOLET = 101 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPPINK = 102 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPPINK2 = 103 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPPINK3 = 104 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPPINK4 = 105 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPSKYBLUE1 = 106 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPSKYBLUE2 = 107 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPSKYBLUE3 = 108 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DEEPSKYBLUE4 = 109 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DODGERBLUE1 = 110 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DODGERBLUE2 = 111 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DODGERBLUE3 = 112 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_DODGERBLUE4 = 113 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_FIREBRICK = 114 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_FIREBRICK1 = 115 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_FIREBRICK2 = 116 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_FIREBRICK3 = 117 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_FIREBRICK4 = 118 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_FLORALWHITE = 119 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_FORESTGREEN = 120 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GAINSBORO = 121 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GHOSTWHITE = 122 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLD = 123 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLD1 = 124 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLD2 = 125 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLD3 = 126 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLD4 = 127 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLDENROD = 128 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLDENROD1 = 129 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLDENROD2 = 130 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLDENROD3 = 131 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GOLDENROD4 = 132 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY = 133 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY0 = 134 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY1 = 135 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY10 = 136 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY11 = 137 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY12 = 138 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY13 = 139 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY14 = 140 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY15 = 141 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY16 = 142 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY17 = 143 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY18 = 144 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY19 = 145 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY2 = 146 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY20 = 147 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY21 = 148 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY22 = 149 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY23 = 150 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY24 = 151 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY25 = 152 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY26 = 153 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY27 = 154 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY28 = 155 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY29 = 156 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY3 = 157 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY30 = 158 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY31 = 159 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY32 = 160 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY33 = 161 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY34 = 162 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY35 = 163 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY36 = 164 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY37 = 165 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY38 = 166 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY39 = 167 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY4 = 168 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY40 = 169 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY41 = 170 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY42 = 171 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY43 = 172 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY44 = 173 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY45 = 174 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY46 = 175 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY47 = 176 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY48 = 177 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY49 = 178 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY5 = 179 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY50 = 180 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY51 = 181 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY52 = 182 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY53 = 183 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY54 = 184 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY55 = 185 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY56 = 186 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY57 = 187 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY58 = 188 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY59 = 189 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY6 = 190 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY60 = 191 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY61 = 192 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY62 = 193 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY63 = 194 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY64 = 195 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY65 = 196 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY66 = 197 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY67 = 198 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY68 = 199 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY69 = 200 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY7 = 201 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY70 = 202 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY71 = 203 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY72 = 204 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY73 = 205 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY74 = 206 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY75 = 207 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY76 = 208 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY77 = 209 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY78 = 210 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY79 = 211 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY8 = 212 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY80 = 213 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY81 = 214 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY82 = 215 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY83 = 216 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY85 = 217 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY86 = 218 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY87 = 219 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY88 = 220 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY89 = 221 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY9 = 222 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY90 = 223 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY91 = 224 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY92 = 225 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY93 = 226 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY94 = 227 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY95 = 228 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GREEN = 229 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GREEN1 = 230 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GREEN2 = 231 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GREEN3 = 232 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GREEN4 = 233 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GREENYELLOW = 234 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY97 = 235 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY98 = 236 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_GRAY99 = 237 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HONEYDEW = 238 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HONEYDEW2 = 239 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HONEYDEW3 = 240 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HONEYDEW4 = 241 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HOTPINK = 242 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HOTPINK1 = 243 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HOTPINK2 = 244 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HOTPINK3 = 245 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_HOTPINK4 = 246 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_INDIANRED = 247 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_INDIANRED1 = 248 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_INDIANRED2 = 249 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_INDIANRED3 = 250 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_INDIANRED4 = 251 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_IVORY = 252 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_IVORY2 = 253 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_IVORY3 = 254 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_IVORY4 = 255 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_KHAKI = 256 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_KHAKI1 = 257 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_KHAKI2 = 258 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_KHAKI3 = 259 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_KHAKI4 = 260 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LAVENDER = 261 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LAVENDERBLUSH1 = 262 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LAVENDERBLUSH2 = 263 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LAVENDERBLUSH3 = 264 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LAVENDERBLUSH4 = 265 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LAWNGREEN = 266 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LEMONCHIFFON1 = 267 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LEMONCHIFFON2 = 268 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LEMONCHIFFON3 = 269 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LEMONCHIFFON4 = 270 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTBLUE = 271 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTBLUE1 = 272 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTBLUE2 = 273 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTBLUE3 = 274 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTBLUE4 = 275 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTCORAL = 276 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTCYAN1 = 277 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTCYAN2 = 278 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTCYAN3 = 279 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTCYAN4 = 280 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTGOLDENROD = 281 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTGOLDENROD1 = 282 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTGOLDENROD2 = 283 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTGOLDENROD3 = 284 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTGOLDENROD4 = 285 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTGOLDENRODYELLOW = 286 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTGRAY = 287 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTPINK = 288 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTPINK1 = 289 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTPINK2 = 290 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTPINK3 = 291 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTPINK4 = 292 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSALMON1 = 293 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSALMON2 = 294 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSALMON3 = 295 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSALMON4 = 296 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSEAGREEN = 297 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSKYBLUE = 298 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSKYBLUE1 = 299 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSKYBLUE2 = 300 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSKYBLUE3 = 301 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSKYBLUE4 = 302 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSLATEBLUE = 303 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSLATEGRAY = 304 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSTEELBLUE = 305 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSTEELBLUE1 = 306 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSTEELBLUE2 = 307 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSTEELBLUE3 = 308 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTSTEELBLUE4 = 309 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTYELLOW = 310 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTYELLOW2 = 311 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTYELLOW3 = 312 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIGHTYELLOW4 = 313 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LIMEGREEN = 314 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_LINEN = 315 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAGENTA1 = 316 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAGENTA2 = 317 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAGENTA3 = 318 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAGENTA4 = 319 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAROON = 320 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAROON1 = 321 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAROON2 = 322 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAROON3 = 323 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MAROON4 = 324 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMAQUAMARINE = 325 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMORCHID = 326 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMORCHID1 = 327 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMORCHID2 = 328 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMORCHID3 = 329 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMORCHID4 = 330 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMPURPLE = 331 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMPURPLE1 = 332 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMPURPLE2 = 333 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMPURPLE3 = 334 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMPURPLE4 = 335 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMSEAGREEN = 336 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMSLATEBLUE = 337 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMSPRINGGREEN = 338 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMTURQUOISE = 339 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MEDIUMVIOLETRED = 340 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MIDNIGHTBLUE = 341 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MINTCREAM = 342 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MISTYROSE = 343 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MISTYROSE2 = 344 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MISTYROSE3 = 345 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MISTYROSE4 = 346 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_MOCCASIN = 347 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_NAVAJOWHITE1 = 348 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_NAVAJOWHITE2 = 349 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_NAVAJOWHITE3 = 350 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_NAVAJOWHITE4 = 351 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_NAVYBLUE = 352 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_OLDLACE = 353 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_OLIVEDRAB = 354 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_OLIVEDRAB1 = 355 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_OLIVEDRAB2 = 356 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_OLIVEDRAB3 = 357 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_OLIVEDRAB4 = 358 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGE = 359 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGE1 = 360 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGE2 = 361 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGE3 = 362 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGE4 = 363 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGERED = 364 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGERED1 = 365 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGERED2 = 366 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGERED3 = 367 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORANGERED4 = 368 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORCHID = 369 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORCHID1 = 370 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORCHID2 = 371 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORCHID3 = 372 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ORCHID4 = 373 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEGOLDENROD = 374 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEGREEN = 375 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEGREEN1 = 376 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEGREEN2 = 377 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEGREEN3 = 378 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEGREEN4 = 379 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALETURQUOISE = 380 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALETURQUOISE1 = 381 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALETURQUOISE2 = 382 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALETURQUOISE3 = 383 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALETURQUOISE4 = 384 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEVIOLETRED = 385 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEVIOLETRED1 = 386 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEVIOLETRED2 = 387 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEVIOLETRED3 = 388 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PALEVIOLETRED4 = 389 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PAPAYAWHIP = 390 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PEACHPUFF = 391 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PEACHPUFF2 = 392 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PEACHPUFF3 = 393 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PEACHPUFF4 = 394 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PERU = 395 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PINK = 396 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PINK1 = 397 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PINK2 = 398 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PINK3 = 399 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PINK4 = 400 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PLUM = 401 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PLUM1 = 402 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PLUM2 = 403 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PLUM3 = 404 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PLUM4 = 405 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_POWDERBLUE = 406 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PURPLE = 407 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PURPLE1 = 408 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PURPLE2 = 409 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PURPLE3 = 410 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_PURPLE4 = 411 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_RED = 412 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_RED1 = 413 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_RED2 = 414 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_RED3 = 415 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_RED4 = 416 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROSYBROWN = 417 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROSYBROWN1 = 418 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROSYBROWN2 = 419 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROSYBROWN3 = 420 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROSYBROWN4 = 421 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROYALBLUE = 422 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROYALBLUE1 = 423 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROYALBLUE2 = 424 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROYALBLUE3 = 425 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_ROYALBLUE4 = 426 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SADDLEBROWN = 427 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SALMON = 428 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SALMON1 = 429 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SALMON2 = 430 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SALMON3 = 431 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SALMON4 = 432 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SANDYBROWN = 433 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEAGREEN = 434 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEAGREEN1 = 435 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEAGREEN2 = 436 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEAGREEN3 = 437 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEAGREEN4 = 438 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEASHELL = 439 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEASHELL2 = 440 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEASHELL3 = 441 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SEASHELL4 = 442 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_BEET = 443 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TEAL = 444 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SIENNA = 445 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SIENNA1 = 446 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SIENNA2 = 447 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SIENNA3 = 448 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SIENNA4 = 449 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SKYBLUE = 450 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SKYBLUE1 = 451 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SKYBLUE2 = 452 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SKYBLUE3 = 453 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SKYBLUE4 = 454 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEBLUE = 455 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEBLUE1 = 456 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEBLUE2 = 457 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEBLUE3 = 458 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEBLUE4 = 459 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEGRAY1 = 460 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEGRAY2 = 461 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEGRAY3 = 462 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEGRAY4 = 463 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SLATEGRAY = 464 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SNOW = 465 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SNOW2 = 466 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SNOW3 = 467 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SNOW4 = 468 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SPRINGGREEN = 469 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SPRINGGREEN2 = 470 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SPRINGGREEN3 = 471 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_SPRINGGREEN4 = 472 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_STEELBLUE = 473 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_STEELBLUE1 = 474 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_STEELBLUE2 = 475 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_STEELBLUE3 = 476 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_STEELBLUE4 = 477 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TAN = 478 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TAN1 = 479 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TAN2 = 480 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TAN3 = 481 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TAN4 = 482 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_THISTLE = 483 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_THISTLE1 = 484 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_THISTLE2 = 485 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_THISTLE3 = 486 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_THISTLE4 = 487 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TOMATO = 488 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TOMATO1 = 489 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TOMATO2 = 490 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TOMATO3 = 491 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TOMATO4 = 492 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TURQUOISE = 493 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TURQUOISE1 = 494 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TURQUOISE2 = 495 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TURQUOISE3 = 496 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_TURQUOISE4 = 497 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_VIOLET = 498 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_VIOLETRED = 499 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_VIOLETRED1 = 500 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_VIOLETRED2 = 501 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_VIOLETRED3 = 502 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_VIOLETRED4 = 503 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_WHEAT = 504 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_WHEAT1 = 505 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_WHEAT2 = 506 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_WHEAT3 = 507 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_WHEAT4 = 508 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_WHITESMOKE = 509 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_YELLOW = 510 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_YELLOW1 = 511 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_YELLOW2 = 512 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_YELLOW3 = 513 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_YELLOW4 = 514 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_YELLOWGREEN = 515 : Public, Static, Literal, HasDefault
    XQuantity_NameOfColor Quantity_NOC_WHITE = 516 : Public, Static, Literal, HasDefault
Struct XQuantity_TypeOfColor: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XQuantity_TypeOfColor Quantity_TOC_RGB = 0 : Public, Static, Literal, HasDefault
    XQuantity_TypeOfColor Quantity_TOC_HLS = 1 : Public, Static, Literal, HasDefault
Struct XAspect_TypeOfDeflection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_TypeOfDeflection Aspect_TOD_RELATIVE = 0 : Public, Static, Literal, HasDefault
    XAspect_TypeOfDeflection Aspect_TOD_ABSOLUTE = 1 : Public, Static, Literal, HasDefault
Struct XPrs3d_TypeOfHLR: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XPrs3d_TypeOfHLR Prs3d_TOH_NotSet = 0 : Public, Static, Literal, HasDefault
    XPrs3d_TypeOfHLR Prs3d_TOH_PolyAlgo = 1 : Public, Static, Literal, HasDefault
    XPrs3d_TypeOfHLR Prs3d_TOH_Algo = 2 : Public, Static, Literal, HasDefault
Struct XPrs3d_VertexDrawMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XPrs3d_VertexDrawMode Prs3d_VDM_Isolated = 0 : Public, Static, Literal, HasDefault
    XPrs3d_VertexDrawMode Prs3d_VDM_All = 1 : Public, Static, Literal, HasDefault
    XPrs3d_VertexDrawMode Prs3d_VDM_Inherited = 2 : Public, Static, Literal, HasDefault
Struct XGraphic3d_TypeOfShadingModel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XGraphic3d_TypeOfShadingModel Graphic3d_TOSM_DEFAULT = -1 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel Graphic3d_TOSM_UNLIT = 0 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel Graphic3d_TOSM_FACET = 1 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel Graphic3d_TOSM_VERTEX = 2 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel Graphic3d_TOSM_FRAGMENT = 3 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel Graphic3d_TOSM_NONE = 0 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel V3d_COLOR = 0 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel V3d_FLAT = 1 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel V3d_GOURAUD = 2 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel V3d_PHONG = 3 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfShadingModel XGraphic3d_TypeOfShadingModel_NB = 4 : Public, Static, Literal, HasDefault
Struct XAspect_TypeOfLine: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_TypeOfLine Aspect_TOL_EMPTY = -1 : Public, Static, Literal, HasDefault
    XAspect_TypeOfLine Aspect_TOL_SOLID = 0 : Public, Static, Literal, HasDefault
    XAspect_TypeOfLine Aspect_TOL_DASH = 1 : Public, Static, Literal, HasDefault
    XAspect_TypeOfLine Aspect_TOL_DOT = 2 : Public, Static, Literal, HasDefault
    XAspect_TypeOfLine Aspect_TOL_DOTDASH = 3 : Public, Static, Literal, HasDefault
    XAspect_TypeOfLine Aspect_TOL_USERDEFINED = 4 : Public, Static, Literal, HasDefault
Struct XPrsMgr_TypeOfPresentation3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XPrsMgr_TypeOfPresentation3d PrsMgr_TOP_AllView = 0 : Public, Static, Literal, HasDefault
    XPrsMgr_TypeOfPresentation3d PrsMgr_TOP_ProjectorDependant = 1 : Public, Static, Literal, HasDefault
Struct XGraphic3d_NameOfMaterial: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XGraphic3d_NameOfMaterial Graphic3d_NOM_BRASS = 0 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_BRONZE = 1 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_COPPER = 2 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_GOLD = 3 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_PEWTER = 4 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_PLASTER = 5 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_PLASTIC = 6 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_SILVER = 7 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_STEEL = 8 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_STONE = 9 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_SHINY_PLASTIC = 10 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_SATIN = 11 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_METALIZED = 12 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_NEON_GNC = 13 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_CHROME = 14 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_ALUMINIUM = 15 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_OBSIDIAN = 16 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_NEON_PHC = 17 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_JADE = 18 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_CHARCOAL = 19 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_WATER = 20 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_GLASS = 21 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_DIAMOND = 22 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_TRANSPARENT = 23 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_DEFAULT = 24 : Public, Static, Literal, HasDefault
    XGraphic3d_NameOfMaterial Graphic3d_NOM_UserDefined = 25 : Public, Static, Literal, HasDefault
Struct XGraphic3d_TypeOfReflection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XGraphic3d_TypeOfReflection Graphic3d_TOR_AMBIENT = 0 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfReflection Graphic3d_TOR_DIFFUSE = 1 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfReflection Graphic3d_TOR_SPECULAR = 2 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfReflection Graphic3d_TOR_EMISSION = 3 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfReflection Graphic3d_TypeOfReflection_NB = 4 : Public, Static, Literal, HasDefault
Struct XGraphic3d_TypeOfMaterial: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XGraphic3d_TypeOfMaterial Graphic3d_MATERIAL_ASPECT = 0 : Public, Static, Literal, HasDefault
    XGraphic3d_TypeOfMaterial Graphic3d_MATERIAL_PHYSIC = 1 : Public, Static, Literal, HasDefault
Struct XAIS_KindOfInteractive: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAIS_KindOfInteractive AIS_KOI_None = 0 : Public, Static, Literal, HasDefault
    XAIS_KindOfInteractive AIS_KOI_Datum = 1 : Public, Static, Literal, HasDefault
    XAIS_KindOfInteractive AIS_KOI_Shape = 2 : Public, Static, Literal, HasDefault
    XAIS_KindOfInteractive AIS_KOI_Object = 3 : Public, Static, Literal, HasDefault
    XAIS_KindOfInteractive AIS_KOI_Relation = 4 : Public, Static, Literal, HasDefault
    XAIS_KindOfInteractive AIS_KOI_Dimension = 5 : Public, Static, Literal, HasDefault
Class NCollection_Haft<opencascade::handle<TDocStd_Document> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKLCAF.XTDocStd_Document: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKernel.XTCollection_ExtendedString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TCollection_ExtendedString*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<TDocStd_Document>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    Get(handle<TDocStd_Document>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    GetDocument(handle<TDocStd_Document>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSaved(): PrivateScope, Public, HideBySig
    IsChanged(): PrivateScope, Public, HideBySig
    SetSaved(): PrivateScope, Public, HideBySig
    SetSavedTime(Int32 IsConst): PrivateScope, Public, HideBySig
    GetSavedTime(): PrivateScope, Public, HideBySig
    GetName(TCollection_ExtendedString*): PrivateScope, Public, HideBySig
    GetPath(TCollection_ExtendedString*): PrivateScope, Public, HideBySig
    SetData(handle<TDF_Data>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetData(handle<TDF_Data>*): PrivateScope, Public, HideBySig
    Main(): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    IsValid(): PrivateScope, Public, HideBySig
    SetModified(XTDF_Label): PrivateScope, Public, HideBySig
    PurgeModified(): PrivateScope, Public, HideBySig
    GetModified(NCollection_Map<TDF_Label\,TDF_LabelMapHasher>*): PrivateScope, Public, HideBySig
    NewCommand(): PrivateScope, Public, HideBySig
    HasOpenCommand(): PrivateScope, Public, HideBySig
    OpenCommand(): PrivateScope, Public, HideBySig
    CommitCommand(): PrivateScope, Public, HideBySig
    AbortCommand(): PrivateScope, Public, HideBySig
    GetUndoLimit(): PrivateScope, Public, HideBySig
    SetUndoLimit(Int32 IsConst): PrivateScope, Public, HideBySig
    ClearUndos(): PrivateScope, Public, HideBySig
    ClearRedos(): PrivateScope, Public, HideBySig
    GetAvailableUndos(): PrivateScope, Public, HideBySig
    Undo(): PrivateScope, Public, HideBySig
    GetAvailableRedos(): PrivateScope, Public, HideBySig
    Redo(): PrivateScope, Public, HideBySig
    GetUndos(NCollection_List<opencascade::handle<TDF_Delta> >*): PrivateScope, Public, HideBySig
    GetRedos(NCollection_List<opencascade::handle<TDF_Delta> >*): PrivateScope, Public, HideBySig
    RemoveFirstUndo(): PrivateScope, Public, HideBySig
    InitDeltaCompaction(): PrivateScope, Public, HideBySig
    PerformDeltaCompaction(): PrivateScope, Public, HideBySig
    UpdateReferences(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Recompute(): PrivateScope, Public, HideBySig
    Update(handle<CDM_Document>* IsImplicitlyDereferenced, Int32, Void*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StorageFormat(TCollection_ExtendedString*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEmptyLabelsSavingMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    EmptyLabelsSavingMode(): PrivateScope, Public, HideBySig
    ChangeStorageFormat(TCollection_ExtendedString* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNestedTransactionMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    IsNestedTransactionMode(): PrivateScope, Public, HideBySig
    SetModificationMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    ModificationMode(): PrivateScope, Public, HideBySig
    BeforeClose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XTDocStd_Document(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<TDocStd_Application> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKLCAF.XTDocStd_Application: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<TDocStd_Application>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    IsDriverLoaded(): PrivateScope, Public, HideBySig
    MessageDriver(handle<Message_Messenger>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNativeHandle(handle<TDocStd_Application>*): PrivateScope, Public, HideBySig
    GetTDocStd_Application(handle<TDocStd_Application>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Resources(handle<Resource_Manager>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResourcesName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DefineFormat(TCollection_AsciiString* IsImplicitlyDereferenced, TCollection_AsciiString* IsImplicitlyDereferenced, TCollection_AsciiString* IsImplicitlyDereferenced, handle<PCDM_RetrievalDriver>* IsImplicitlyDereferenced, handle<PCDM_StorageDriver>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ReadingFormats(NCollection_Sequence<TCollection_AsciiString>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    WritingFormats(NCollection_Sequence<TCollection_AsciiString>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    NbDocuments(): PrivateScope, Public, HideBySig
    GetDocument(Int32 IsConst, XTDocStd_Document): PrivateScope, Public, HideBySig
    GetDocument(Int32 IsConst, handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    NewDocument(String, XTDocStd_Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewDocument(XTCollection_ExtendedString, XTDocStd_Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NewDocument(TCollection_ExtendedString* IsImplicitlyDereferenced, handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitDocument(XTDocStd_Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitDocument(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(XTDocStd_Document): PrivateScope, Public, HideBySig
    Close(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    IsInSession(XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    IsInSession(TCollection_ExtendedString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Open(basic_istream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, XTDocStd_Document): PrivateScope, Public, HideBySig
    Open(basic_istream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Open(XTCollection_ExtendedString, XTDocStd_Document): PrivateScope, Public, HideBySig
    Open(TCollection_ExtendedString* IsImplicitlyDereferenced, handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SaveAs(XTDocStd_Document, basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    SaveAs(handle<TDocStd_Document>* IsImplicitlyDereferenced, basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, TCollection_ExtendedString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SaveAs(XTDocStd_Document, XTCollection_ExtendedString, XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    SaveAs(handle<TDocStd_Document>* IsImplicitlyDereferenced, TCollection_ExtendedString* IsImplicitlyDereferenced, TCollection_ExtendedString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SaveAs(XTDocStd_Document, basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SaveAs(handle<TDocStd_Document>* IsImplicitlyDereferenced, basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SaveAs(XTDocStd_Document, XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    SaveAs(handle<TDocStd_Document>* IsImplicitlyDereferenced, TCollection_ExtendedString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Save(XTDocStd_Document, XTCollection_ExtendedString): PrivateScope, Public, HideBySig
    Save(handle<TDocStd_Document>* IsImplicitlyDereferenced, TCollection_ExtendedString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Save(XTDocStd_Document): PrivateScope, Public, HideBySig
    Save(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    OnOpenTransaction(XTDocStd_Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnOpenTransaction(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnCommitTransaction(XTDocStd_Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnCommitTransaction(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnAbortTransaction(XTDocStd_Document): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnAbortTransaction(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XTDocStd_Application(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKSTEP.XSTEPConstruct_Tool: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<XSControl_WorkSession>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(STEPConstruct_Tool*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    STEPConstruct_Tool* Handle 'get ' : 
  Methods:
    GetTool(STEPConstruct_Tool*): PrivateScope, Public, HideBySig
    WS(): PrivateScope, Public, HideBySig
    Model(handle<Interface_InterfaceModel>*): PrivateScope, Public, HideBySig
    Graph(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    TransientProcess(): PrivateScope, Public, HideBySig
    FinderProcess(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<XCAFApp_Application> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKXCAF.XXCAFApp_Application: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKLCAF.XTDocStd_Application
    Void .ctor(opencascade.handle<XCAFApp_Application>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetXCAFApp_Application(handle<XCAFApp_Application>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTDocStd_Application(handle<TDocStd_Application>*): PrivateScope, Public, Virtual, HideBySig
    ResourcesName(): PrivateScope, Public, Virtual, HideBySig
    InitDocument(handle<TDocStd_Document>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitDocument(XTDocStd_Document): PrivateScope, Public, Virtual, HideBySig
    GetApplication(): PrivateScope, Public, Static, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XXCAFApp_Application(): PrivateScope, Public, HideBySig
Class TKLCAF.XTDF_XIterator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NCollection_Sequence<TDF_Label>*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetIterator(Iterator*): PrivateScope, Public, HideBySig
    More(): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    ChangeValue(): PrivateScope, Public, HideBySig
    IsEqual(XTDF_XIterator): PrivateScope, Public, HideBySig
Class TKLCAF.XTDF_LabelSequence: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NCollection_Sequence<TDF_Label>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Initialize(NCollection_Sequence<TDF_Label>*): PrivateScope, Public, HideBySig
    GetLabelSequence(NCollection_Sequence<TDF_Label>*): PrivateScope, Public, HideBySig
    Iterator(): PrivateScope, Public, HideBySig
    More(): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<XCAFDoc_ShapeTool> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKXCAF.XXCAFDoc_ShapeTool: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKLCAF.XTDF_Attribute
    Void .ctor(opencascade.handle<XCAFDoc_ShapeTool>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetID(): PrivateScope, Public, Static, HideBySig
    Set(XTDF_Label): PrivateScope, Public, Static, HideBySig
    GetShapeTool(handle<XCAFDoc_ShapeTool>*): PrivateScope, Public, HideBySig
    GetAttribute(handle<TDF_Attribute>*): PrivateScope, Public, Virtual, HideBySig
    IsTopLevel(XTDF_Label): PrivateScope, Public, HideBySig
    IsFree(XTDF_Label): PrivateScope, Public, Static, HideBySig
    IsShape(XTDF_Label): PrivateScope, Public, Static, HideBySig
    IsSimpleShape(XTDF_Label): PrivateScope, Public, Static, HideBySig
    IsReference(XTDF_Label): PrivateScope, Public, Static, HideBySig
    IsAssembly(XTDF_Label): PrivateScope, Public, Static, HideBySig
    IsComponent(XTDF_Label): PrivateScope, Public, Static, HideBySig
    IsCompound(XTDF_Label): PrivateScope, Public, Static, HideBySig
    IsSubShape(XTDF_Label, TopoDS_Shape* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    IsSubShape(XTDF_Label): PrivateScope, Public, Static, HideBySig
    SearchUsingMap(TopoDS_Shape* IsImplicitlyDereferenced, XTDF_Label, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Search(TopoDS_Shape* IsImplicitlyDereferenced, XTDF_Label, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindShape(TopoDS_Shape* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindShape(TopoDS_Shape* IsImplicitlyDereferenced, XTDF_Label, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetShape(TopoDS_Shape*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    GetShape(XTDF_Label, TopoDS_Shape* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    NewShape(): PrivateScope, Public, HideBySig
    SetShape(XTDF_Label, TopoDS_Shape* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    AddShape(TopoDS_Shape* IsImplicitlyDereferenced, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveShape(XTDF_Label, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Init(): PrivateScope, Public, HideBySig
    SetAutoNaming(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, Static, HideBySig
    AutoNaming(): PrivateScope, Public, Static, HideBySig
    ComputeShapes(XTDF_Label): PrivateScope, Public, HideBySig
    ComputeSimpleShapes(): PrivateScope, Public, HideBySig
    GetShapes(XTDF_LabelSequence): PrivateScope, Public, HideBySig
    GetFreeShapes(XTDF_LabelSequence&): PrivateScope, Public, HideBySig
    GetFreeShapes(): PrivateScope, Public, HideBySig
    GetUsers(XTDF_Label, NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetLocation(XTDF_Label): PrivateScope, Public, Static, HideBySig
    GetReferredShape(XTDF_Label, XTDF_Label): PrivateScope, Public, Static, HideBySig
    NbComponents(XTDF_Label, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetComponents(XTDF_Label, NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    AddComponent(XTDF_Label, TopoDS_Shape* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddComponent(XTDF_Label, XTDF_Label, XTopLoc_Location): PrivateScope, Public, HideBySig
    RemoveComponent(XTDF_Label): PrivateScope, Public, HideBySig
    UpdateAssemblies(): PrivateScope, Public, HideBySig
    FindSubShape(XTDF_Label, TopoDS_Shape* IsImplicitlyDereferenced, XTDF_Label): PrivateScope, Public, HideBySig
    AddSubShape(XTDF_Label, TopoDS_Shape* IsImplicitlyDereferenced, XTDF_Label): PrivateScope, Public, HideBySig
    AddSubShape(XTDF_Label, TopoDS_Shape* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    FindMainShapeUsingMap(TopoDS_Shape* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    FindMainShape(TopoDS_Shape* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetSubShapes(XTDF_Label, NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    BaseLabel(): PrivateScope, Public, HideBySig
    Dump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    Dump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DumpShape(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, XTDF_Label, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    ID(): PrivateScope, Public, Virtual, HideBySig
    Restore(XTDF_Attribute): PrivateScope, Public, Virtual, HideBySig
    NewEmpty(): PrivateScope, Public, Virtual, HideBySig
    Paste(XTDF_Attribute, handle<TDF_RelocationTable>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    IsExternRef(XTDF_Label): PrivateScope, Public, Static, HideBySig
    SetExternRefs(XTDF_Label, NCollection_Sequence<opencascade::handle<TCollection_HAsciiString> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetExternRefs(NCollection_Sequence<opencascade::handle<TCollection_HAsciiString> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetExternRefs(XTDF_Label, NCollection_Sequence<opencascade::handle<TCollection_HAsciiString> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    SetSHUO(NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced, handle<XCAFDoc_GraphNode>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetSHUO(XTDF_Label, handle<XCAFDoc_GraphNode>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    GetAllComponentSHUO(XTDF_Label, NCollection_Sequence<opencascade::handle<TDF_Attribute> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    GetSHUOUpperUsage(XTDF_Label, NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    GetSHUONextUsage(XTDF_Label, NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    RemoveSHUO(XTDF_Label): PrivateScope, Public, HideBySig
    FindComponent(TopoDS_Shape* IsImplicitlyDereferenced, NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetSHUOInstance(TopoDS_Shape*, handle<XCAFDoc_GraphNode>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetInstanceSHUO(handle<XCAFDoc_GraphNode>*, TopoDS_Shape* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetAllSHUOInstances(handle<XCAFDoc_GraphNode>* IsImplicitlyDereferenced, NCollection_Sequence<TopoDS_Shape>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    FindSHUO(NCollection_Sequence<TDF_Label>* IsImplicitlyDereferenced, handle<XCAFDoc_GraphNode>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Expand(XTDF_Label): PrivateScope, Public, HideBySig
    GetNamedProperties(handle<TDataStd_NamedData>*, TopoDS_Shape* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetNamedProperties(handle<TDataStd_NamedData>*, XTDF_Label, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XXCAFDoc_ShapeTool(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<XCAFDoc_DocumentTool> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKXCAF.XXCAFDoc_DocumentTool: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKLCAF.XTDF_Attribute
    Void .ctor(opencascade.handle<XCAFDoc_DocumentTool>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetID(): PrivateScope, Public, Static, HideBySig
    Set(XTDF_Label, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IsXCAFDocument(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    DocLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    ShapesLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    ColorsLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    LayersLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    DGTsLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    MaterialsLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    ViewsLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    ClippingPlanesLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    NotesLabel(XTDF_Label): PrivateScope, Public, Static, HideBySig
    ShapeTool(XTDF_Label): PrivateScope, Public, Static, HideBySig
    ColorTool(handle<XCAFDoc_ColorTool>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    LayerTool(handle<XCAFDoc_LayerTool>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    DimTolTool(handle<XCAFDoc_DimTolTool>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    MaterialTool(handle<XCAFDoc_MaterialTool>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    ViewTool(handle<XCAFDoc_ViewTool>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    ClippingPlaneTool(handle<XCAFDoc_ClippingPlaneTool>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    NotesTool(handle<XCAFDoc_NotesTool>*, XTDF_Label): PrivateScope, Public, Static, HideBySig
    Init(): PrivateScope, Public, HideBySig
    ID(): PrivateScope, Public, Virtual, HideBySig
    Restore(XTDF_Attribute): PrivateScope, Public, Virtual, HideBySig
    NewEmpty(): PrivateScope, Public, Virtual, HideBySig
    Paste(XTDF_Attribute, handle<TDF_RelocationTable>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig
    GetDocumentTool(handle<XCAFDoc_DocumentTool>*): PrivateScope, Public, HideBySig
    GetAttribute(handle<TDF_Attribute>*): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XXCAFDoc_DocumentTool(): PrivateScope, Public, HideBySig
Class TKXCAF.XXCAFPrs_Driver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    XCAFPrs_Driver* Handle 'get ' : 
  Methods:
    Update(XTDF_Label, XAIS_InteractiveObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(TDF_Label* IsImplicitlyDereferenced, handle<AIS_InteractiveObject>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetID(): PrivateScope, Public, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKXDESTEP.XSTEPCAFControl_Reader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<XSControl_WorkSession>*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(STEPCAFControl_Reader*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    STEPCAFControl_Reader* Handle 'get ' : 
  Methods:
    Init(handle<XSControl_WorkSession>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    ReadFile(String): PrivateScope, Public, HideBySig
    ReadFile(SByte* IsConst IsConst): PrivateScope, Public, HideBySig
    NbRootsForTransfer(): PrivateScope, Public, HideBySig
    TransferOneRoot(Int32 IsConst, handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Transfer(XTDocStd_Document): PrivateScope, Public, HideBySig
    Transfer(handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Perform(SByte* IsConst IsConst, handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Perform(TCollection_AsciiString* IsImplicitlyDereferenced, handle<TDocStd_Document>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ExternFiles(NCollection_DataMap<TCollection_AsciiString\,opencascade::handle<STEPCAFControl_ExternFile>\,NCollection_DefaultHasher<TCollection_AsciiString> >*): PrivateScope, Public, HideBySig
    ExternFile(SByte* IsConst IsConst, handle<STEPCAFControl_ExternFile>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ChangeReader(): PrivateScope, Public, HideBySig
    Reader(): PrivateScope, Public, HideBySig
    FindInstance(handle<StepRepr_NextAssemblyUsageOccurrence>* IsImplicitlyDereferenced, handle<XCAFDoc_ShapeTool>* IsImplicitlyDereferenced, STEPConstruct_Tool* IsImplicitlyDereferenced, NCollection_DataMap<TopoDS_Shape\,TDF_Label\,TopTools_ShapeMapHasher>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    SetColorMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetColorMode(): PrivateScope, Public, HideBySig
    SetNameMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetNameMode(): PrivateScope, Public, HideBySig
    SourceCodePage(): PrivateScope, Public, HideBySig
    SetSourceCodePage(Resource_FormatType): PrivateScope, Public, HideBySig
    SetLayerMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetLayerMode(): PrivateScope, Public, HideBySig
    SetPropsMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetPropsMode(): PrivateScope, Public, HideBySig
    SetSHUOMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetSHUOMode(): PrivateScope, Public, HideBySig
    SetGDTMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetGDTMode(): PrivateScope, Public, HideBySig
    SetMatMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetMatMode(): PrivateScope, Public, HideBySig
    SetViewMode(Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetViewMode(): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKMath.xgp_Lin: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax1): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Lin*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Lin* Handle 'get ' : 
  Methods:
    GetLin(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    SetDirection(xgp_Dir): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax1): PrivateScope, Public, HideBySig
    Direction(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    Angle(xgp_Lin): PrivateScope, Public, HideBySig
    Contains(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Distance(xgp_Lin): PrivateScope, Public, HideBySig
    Distance(xgp_Pnt): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Lin): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pnt): PrivateScope, Public, HideBySig
    Normal(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Pln: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Pln*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Pln* Handle 'get ' : 
  Methods:
    GetPln(): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax3): PrivateScope, Public, HideBySig
    UReverse(): PrivateScope, Public, HideBySig
    VReverse(): PrivateScope, Public, HideBySig
    Direct(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    Distance(xgp_Pln): PrivateScope, Public, HideBySig
    Distance(xgp_Lin): PrivateScope, Public, HideBySig
    Distance(xgp_Pnt): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pln): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Lin): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pnt): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Contains(xgp_Lin, Double, Double): PrivateScope, Public, HideBySig
    Contains(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.XBnd_Box: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Bnd_Box*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Bnd_Box* IHandle 'get set' : 
  Methods:
    SetBndBoxHandle(Bnd_Box*): PrivateScope, Public, HideBySig
    GetBndBox(): PrivateScope, Public, HideBySig
    SetWhole(): PrivateScope, Public, HideBySig
    SetVoid(): PrivateScope, Public, HideBySig
    Set(xgp_Pnt, xgp_Dir): PrivateScope, Public, HideBySig
    Set(xgp_Pnt): PrivateScope, Public, HideBySig
    Update(Double, Double, Double): PrivateScope, Public, HideBySig
    Update(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    GetGap(): PrivateScope, Public, HideBySig
    SetGap(Double): PrivateScope, Public, HideBySig
    Enlarge(Double): PrivateScope, Public, HideBySig
    Get(Double&, Double&, Double&, Double&, Double&, Double&): PrivateScope, Public, HideBySig
    CornerMin(): PrivateScope, Public, HideBySig
    CornerMax(): PrivateScope, Public, HideBySig
    OpenXmin(): PrivateScope, Public, HideBySig
    OpenXmax(): PrivateScope, Public, HideBySig
    OpenYmin(): PrivateScope, Public, HideBySig
    OpenYmax(): PrivateScope, Public, HideBySig
    OpenZmin(): PrivateScope, Public, HideBySig
    OpenZmax(): PrivateScope, Public, HideBySig
    IsOpen(): PrivateScope, Public, HideBySig
    IsOpenXmin(): PrivateScope, Public, HideBySig
    IsOpenXmax(): PrivateScope, Public, HideBySig
    IsOpenYmin(): PrivateScope, Public, HideBySig
    IsOpenYmax(): PrivateScope, Public, HideBySig
    IsOpenZmin(): PrivateScope, Public, HideBySig
    IsOpenZmax(): PrivateScope, Public, HideBySig
    IsWhole(): PrivateScope, Public, HideBySig
    IsVoid(): PrivateScope, Public, HideBySig
    IsXThin(Double): PrivateScope, Public, HideBySig
    IsYThin(Double): PrivateScope, Public, HideBySig
    IsZThin(Double): PrivateScope, Public, HideBySig
    IsThin(Double): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Add(xgp_Dir): PrivateScope, Public, HideBySig
    Add(xgp_Pnt, xgp_Dir): PrivateScope, Public, HideBySig
    Add(xgp_Pnt): PrivateScope, Public, HideBySig
    Add(XBnd_Box): PrivateScope, Public, HideBySig
    IsOut(xgp_Pnt, xgp_Pnt, xgp_Dir): PrivateScope, Public, HideBySig
    IsOut(xgp_Trsf, XBnd_Box, xgp_Trsf): PrivateScope, Public, HideBySig
    IsOut(XBnd_Box, xgp_Trsf): PrivateScope, Public, HideBySig
    IsOut(XBnd_Box): PrivateScope, Public, HideBySig
    IsOut(xgp_Pln): PrivateScope, Public, HideBySig
    IsOut(xgp_Lin): PrivateScope, Public, HideBySig
    IsOut(xgp_Pnt): PrivateScope, Public, HideBySig
    Distance(XBnd_Box): PrivateScope, Public, HideBySig
    Dump(): PrivateScope, Public, HideBySig
    SquareExtent(): PrivateScope, Public, HideBySig
    FinitePart(): PrivateScope, Public, HideBySig
    HasFinitePart(): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(Bnd_Box*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct TKMath.XMaskFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TKMath.XMaskFlags VoidMask = 1 : Public, Static, Literal, HasDefault
    TKMath.XMaskFlags XminMask = 2 : Public, Static, Literal, HasDefault
    TKMath.XMaskFlags XmaxMask = 4 : Public, Static, Literal, HasDefault
    TKMath.XMaskFlags YminMask = 8 : Public, Static, Literal, HasDefault
    TKMath.XMaskFlags YmaxMask = 16 : Public, Static, Literal, HasDefault
    TKMath.XMaskFlags ZminMask = 32 : Public, Static, Literal, HasDefault
    TKMath.XMaskFlags ZmaxMask = 64 : Public, Static, Literal, HasDefault
    TKMath.XMaskFlags WholeMask = 126 : Public, Static, Literal, HasDefault
Class TKMath.xgp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    gp* Handle 'get ' : 
  Methods:
    Resolution(): PrivateScope, Public, Static, HideBySig
    Origin(): PrivateScope, Public, Static, HideBySig
    DX(): PrivateScope, Public, Static, HideBySig
    DY(): PrivateScope, Public, Static, HideBySig
    DZ(): PrivateScope, Public, Static, HideBySig
    OX(): PrivateScope, Public, Static, HideBySig
    OY(): PrivateScope, Public, Static, HideBySig
    OZ(): PrivateScope, Public, Static, HideBySig
    XOY(): PrivateScope, Public, Static, HideBySig
    ZOX(): PrivateScope, Public, Static, HideBySig
    YOZ(): PrivateScope, Public, Static, HideBySig
    Origin2d(): PrivateScope, Public, Static, HideBySig
    DX2d(): PrivateScope, Public, Static, HideBySig
    DY2d(): PrivateScope, Public, Static, HideBySig
    OX2d(): PrivateScope, Public, Static, HideBySig
    OY2d(): PrivateScope, Public, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKMath.xgp_Ax22d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax2d, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt2d, TKMath.xgp_Dir2d, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt2d, TKMath.xgp_Dir2d, TKMath.xgp_Dir2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Ax22d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Ax22d* Handle 'get ' : 
  Methods:
    GetAx22d(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax22d): PrivateScope, Public, HideBySig
    SetXAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetYAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetXDirection(xgp_Dir2d): PrivateScope, Public, HideBySig
    SetYDirection(xgp_Dir2d): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    XDirection(): PrivateScope, Public, HideBySig
    YDirection(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Circ: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax2, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Circ*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Circ* Handle 'get ' : 
  Methods:
    GetCirc(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax2): PrivateScope, Public, HideBySig
    SetRadius(Double): PrivateScope, Public, HideBySig
    Area(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    Radius(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Distance(xgp_Pnt): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pnt): PrivateScope, Public, HideBySig
    Contains(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Circ2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax22d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2d, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Circ2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Circ2d* Handle 'get ' : 
  Methods:
    GetCirc2d(): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetXAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax22d): PrivateScope, Public, HideBySig
    SetYAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetRadius(Double): PrivateScope, Public, HideBySig
    Area(): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Contains(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Distance(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Radius(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    IsDirect(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Cone: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax3, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Cone*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Cone* Handle 'get ' : 
  Methods:
    GetCone(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax3): PrivateScope, Public, HideBySig
    SetRadius(Double): PrivateScope, Public, HideBySig
    SetSemiAngle(Double): PrivateScope, Public, HideBySig
    Apex(): PrivateScope, Public, HideBySig
    UReverse(): PrivateScope, Public, HideBySig
    VReverse(): PrivateScope, Public, HideBySig
    Direct(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    RefRadius(): PrivateScope, Public, HideBySig
    SemiAngle(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Cylinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax3, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Cylinder*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Cylinder* Handle 'get ' : 
  Methods:
    GetCylinder(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax3): PrivateScope, Public, HideBySig
    SetRadius(Double): PrivateScope, Public, HideBySig
    UReverse(): PrivateScope, Public, HideBySig
    VReverse(): PrivateScope, Public, HideBySig
    Direct(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    Radius(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Elips: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Elips*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Elips* Handle 'get ' : 
  Methods:
    GetElips(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetMajorRadius(Double): PrivateScope, Public, HideBySig
    SetMinorRadius(Double): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax2): PrivateScope, Public, HideBySig
    Area(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Directrix1(): PrivateScope, Public, HideBySig
    Directrix2(): PrivateScope, Public, HideBySig
    Eccentricity(): PrivateScope, Public, HideBySig
    Focal(): PrivateScope, Public, HideBySig
    Focus1(): PrivateScope, Public, HideBySig
    Focus2(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    MajorRadius(): PrivateScope, Public, HideBySig
    MinorRadius(): PrivateScope, Public, HideBySig
    Parameter(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Elips2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax22d, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2d, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Elips2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Elips2d* Handle 'get ' : 
  Methods:
    GetElips2d(): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetMajorRadius(Double): PrivateScope, Public, HideBySig
    SetMinorRadius(Double): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax22d): PrivateScope, Public, HideBySig
    SetXAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetYAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    Area(): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Directrix1(): PrivateScope, Public, HideBySig
    Directrix2(): PrivateScope, Public, HideBySig
    Eccentricity(): PrivateScope, Public, HideBySig
    Focal(): PrivateScope, Public, HideBySig
    Focus1(): PrivateScope, Public, HideBySig
    Focus2(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    MajorRadius(): PrivateScope, Public, HideBySig
    MinorRadius(): PrivateScope, Public, HideBySig
    Parameter(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    IsDirect(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Hypr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Hypr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Hypr* Handle 'get ' : 
  Methods:
    GetHypr(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetMajorRadius(Double): PrivateScope, Public, HideBySig
    SetMinorRadius(Double): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax2): PrivateScope, Public, HideBySig
    Asymptote1(): PrivateScope, Public, HideBySig
    Asymptote2(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    ConjugateBranch1(): PrivateScope, Public, HideBySig
    ConjugateBranch2(): PrivateScope, Public, HideBySig
    Directrix1(): PrivateScope, Public, HideBySig
    Directrix2(): PrivateScope, Public, HideBySig
    Eccentricity(): PrivateScope, Public, HideBySig
    Focal(): PrivateScope, Public, HideBySig
    Focus1(): PrivateScope, Public, HideBySig
    Focus2(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    MajorRadius(): PrivateScope, Public, HideBySig
    MinorRadius(): PrivateScope, Public, HideBySig
    OtherBranch(): PrivateScope, Public, HideBySig
    Parameter(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Hypr2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax22d, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2d, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Hypr2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Hypr2d* Handle 'get ' : 
  Methods:
    GetHypr2d(): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetMajorRadius(Double): PrivateScope, Public, HideBySig
    SetMinorRadius(Double): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax22d): PrivateScope, Public, HideBySig
    SetXAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetYAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    Asymptote1(): PrivateScope, Public, HideBySig
    Asymptote2(): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    ConjugateBranch1(): PrivateScope, Public, HideBySig
    ConjugateBranch2(): PrivateScope, Public, HideBySig
    Directrix1(): PrivateScope, Public, HideBySig
    Directrix2(): PrivateScope, Public, HideBySig
    Eccentricity(): PrivateScope, Public, HideBySig
    Focal(): PrivateScope, Public, HideBySig
    Focus1(): PrivateScope, Public, HideBySig
    Focus2(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    MajorRadius(): PrivateScope, Public, HideBySig
    MinorRadius(): PrivateScope, Public, HideBySig
    OtherBranch(): PrivateScope, Public, HideBySig
    Parameter(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    IsDirect(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Lin2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt2d, TKMath.xgp_Dir2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Lin2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Lin2d* Handle 'get ' : 
  Methods:
    GetLin2d(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    SetDirection(xgp_Dir2d): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax2d): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double): PrivateScope, Public, HideBySig
    Direction(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    Angle(xgp_Lin2d): PrivateScope, Public, HideBySig
    Contains(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Distance(xgp_Lin2d): PrivateScope, Public, HideBySig
    Distance(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Lin2d): PrivateScope, Public, HideBySig
    SquareDistance(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Normal(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Parab: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax1, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Parab*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Parab* Handle 'get ' : 
  Methods:
    GetParab(): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetFocal(Double): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax2): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Directrix(): PrivateScope, Public, HideBySig
    Focal(): PrivateScope, Public, HideBySig
    Focus(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Parameter(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Parab2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax2d, TKMath.xgp_Pnt2d, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax22d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2d, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Parab2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Parab2d* Handle 'get ' : 
  Methods:
    GetParab2d(): PrivateScope, Public, HideBySig
    SetFocal(Double): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt2d): PrivateScope, Public, HideBySig
    SetMirrorAxis(xgp_Ax2d): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax22d): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Directrix(): PrivateScope, Public, HideBySig
    Focal(): PrivateScope, Public, HideBySig
    Focus(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    MirrorAxis(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Parameter(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    IsDirect(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Sphere: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax3, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Sphere*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Sphere* Handle 'get ' : 
  Methods:
    GetSphere(): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax3): PrivateScope, Public, HideBySig
    SetRadius(Double): PrivateScope, Public, HideBySig
    Area(): PrivateScope, Public, HideBySig
    Coefficients(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    UReverse(): PrivateScope, Public, HideBySig
    VReverse(): PrivateScope, Public, HideBySig
    Direct(): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    Radius(): PrivateScope, Public, HideBySig
    Volume(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKMath.xgp_Torus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Ax3, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(gp_Torus*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    gp_Torus* Handle 'get ' : 
  Methods:
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetMajorRadius(Double): PrivateScope, Public, HideBySig
    SetMinorRadius(Double): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax3): PrivateScope, Public, HideBySig
    GetTorus(): PrivateScope, Public, HideBySig
    Area(): PrivateScope, Public, HideBySig
    UReverse(): PrivateScope, Public, HideBySig
    VReverse(): PrivateScope, Public, HideBySig
    Direct(): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Coefficients(NCollection_Array1<double>*): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    MajorRadius(): PrivateScope, Public, HideBySig
    MinorRadius(): PrivateScope, Public, HideBySig
    Volume(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKernel.XStandard_ConstructionError: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class TKMath.XTopLoc_Datum3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKMath.xgp_Trsf): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TopLoc_Datum3D*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopLoc_Datum3D* Handle 'get ' : 
  Methods:
    GetDatum3D(TopLoc_Datum3D*): PrivateScope, Public, HideBySig
    Transformation(): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    ShallowDump(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
Class TKBO.XBOPAlgo_Options: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<NCollection_BaseAllocator>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    BOPAlgo_Options* IHandle 'get set' : 
  Methods:
    SetAlgoOptionsHandle(BOPAlgo_Options*): PrivateScope, Public, HideBySig
    GetOptions(): PrivateScope, Public, HideBySig
    Allocator(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddError(handle<Message_Alert>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    AddWarning(handle<Message_Alert>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasErrors(): PrivateScope, Public, HideBySig
    HasError(handle<Standard_Type>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HasWarnings(): PrivateScope, Public, HideBySig
    HasWarning(handle<Standard_Type>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetReport(): PrivateScope, Public, HideBySig
    DumpErrors(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    DumpWarnings(basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ClearWarnings(): PrivateScope, Public, HideBySig
    GetParallelMode(): PrivateScope, Public, Static, HideBySig
    SetParallelMode(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    SetRunParallel(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RunParallel(): PrivateScope, Public, HideBySig
    SetFuzzyValue(Double): PrivateScope, Public, HideBySig
    FuzzyValue(): PrivateScope, Public, HideBySig
    SetProgressIndicator(handle<Message_ProgressIndicator>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetUseOBB(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UseOBB(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BOPAlgo_Options*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XTopAbs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compose(XTopAbs_Orientation, XTopAbs_Orientation): PrivateScope, Public, Static, HideBySig
    Reverse(XTopAbs_Orientation): PrivateScope, Public, Static, HideBySig
    Complement(XTopAbs_Orientation): PrivateScope, Public, Static, HideBySig
    Print(XTopAbs_State, basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Print(XTopAbs_Orientation, basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Print(XTopAbs_ShapeEnum, basic_ostream<char\,std::char_traits<char> >* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    ShapeTypeToString(XTopAbs_ShapeEnum): PrivateScope, Public, Static, HideBySig
    ShapeTypeFromString(String, XTopAbs_ShapeEnum): PrivateScope, Public, Static, HideBySig
    ShapeTypeFromString(String): PrivateScope, Public, Static, HideBySig
    ShapeOrientationToString(XTopAbs_Orientation): PrivateScope, Public, Static, HideBySig
    ShapeOrientationFromString(String, XTopAbs_Orientation): PrivateScope, Public, Static, HideBySig
    ShapeOrientationFromString(String): PrivateScope, Public, Static, HideBySig
Class TKBRep.XTopoDS_Iterator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XTopoDS_Shape, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Iterator* IHandle 'get set' : 
  Methods:
    Initialize(XTopoDS_Shape, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal) IsConst): PrivateScope, Public, HideBySig
    GetIterator(TopoDS_Iterator*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    More(): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(TopoDS_Iterator*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NCollection_Haft<opencascade::handle<TopoDS_TShape> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TShape: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<TopoDS_TShape>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTShapeHandle(handle<TopoDS_TShape>*): PrivateScope, Public, HideBySig
    Free(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Free(): PrivateScope, Public, HideBySig
    Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Locked(): PrivateScope, Public, HideBySig
    Modified(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Modified(): PrivateScope, Public, HideBySig
    Checked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Checked(): PrivateScope, Public, HideBySig
    Orientable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Orientable(): PrivateScope, Public, HideBySig
    Closed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Closed(): PrivateScope, Public, HideBySig
    Infinite(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Infinite(): PrivateScope, Public, HideBySig
    Convex(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Convex(): PrivateScope, Public, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EmptyCopy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NbChildren(): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >*, Int32): PrivateScope, Public, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XTopoDS_TShape(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_Shape: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TopoDS_Shape*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    SetShapeHandle(TopoDS_Shape*): PrivateScope, Public, HideBySig
    SetShapeHandle(TopoDS_Shape*): PrivateScope, Public, HideBySig
    GetShape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsNull(): PrivateScope, Public, HideBySig
    Nullify(): PrivateScope, Public, HideBySig
    Location(XTopLoc_Location&): PrivateScope, Public, HideBySig
    Location(): PrivateScope, Public, HideBySig
    Located(XTopLoc_Location): PrivateScope, Public, HideBySig
    Orientation(XTopAbs_Orientation): PrivateScope, Public, HideBySig
    Orientation(): PrivateScope, Public, HideBySig
    Oriented(XTopAbs_Orientation): PrivateScope, Public, HideBySig
    TShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    TShape(XTopoDS_TShape): PrivateScope, Public, HideBySig
    TShape(): PrivateScope, Public, HideBySig
    ShapeType(): PrivateScope, Public, HideBySig
    Free(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Free(): PrivateScope, Public, HideBySig
    Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Locked(): PrivateScope, Public, HideBySig
    Modified(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Modified(): PrivateScope, Public, HideBySig
    Checked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Checked(): PrivateScope, Public, HideBySig
    Orientable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Orientable(): PrivateScope, Public, HideBySig
    Closed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Closed(): PrivateScope, Public, HideBySig
    Infinite(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Infinite(): PrivateScope, Public, HideBySig
    Convex(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Convex(): PrivateScope, Public, HideBySig
    Move(XTopLoc_Location): PrivateScope, Public, HideBySig
    Moved(XTopLoc_Location): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    Complement(): PrivateScope, Public, HideBySig
    Complemented(): PrivateScope, Public, HideBySig
    Compose(XTopAbs_Orientation): PrivateScope, Public, HideBySig
    Composed(XTopAbs_Orientation): PrivateScope, Public, HideBySig
    NbChildren(): PrivateScope, Public, HideBySig
    IsPartner(XTopoDS_Shape): PrivateScope, Public, HideBySig
    IsSame(XTopoDS_Shape): PrivateScope, Public, HideBySig
    IsEqual(XTopoDS_Shape): PrivateScope, Public, HideBySig
    op_Equality(XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName
    IsNotEqual(XTopoDS_Shape): PrivateScope, Public, HideBySig
    op_Inequality(XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName
    HashCode(Int32): PrivateScope, Public, HideBySig
    EmptyCopy(): PrivateScope, Public, HideBySig
    EmptyCopied(): PrivateScope, Public, HideBySig
    DumpJson(basic_ostream<char\,std::char_traits<char> >*, Int32): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopTools_ListOfShape: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NCollection_List<TopoDS_Shape>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetXListOfShapes(): PrivateScope, Public, HideBySig
    GetListOfShapes(): PrivateScope, Public, HideBySig
Class TKBRep.XTopoDS_Vertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_Vertex*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetVertex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XTopoDS_Edge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_Edge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetEdge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XTopoDS_Face: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_Face*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetFace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBO.XBOPAlgo_PaveFiller: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<NCollection_BaseAllocator>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    BOPAlgo_PaveFiller* IHandle 'get set' : 
  Methods:
    SetPaveFillerHandle(BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig
    GetPaveFiller(): PrivateScope, Public, HideBySig
    DS(): PrivateScope, Public, HideBySig
    PDS(): PrivateScope, Public, HideBySig
    SetArguments(XTopTools_ListOfShape): PrivateScope, Public, HideBySig
    AddArgument(XTopoDS_Shape): PrivateScope, Public, HideBySig
    Arguments(): PrivateScope, Public, HideBySig
    Context(handle<IntTools_Context>*): PrivateScope, Public, HideBySig
    SetSectionAttribute(BOPAlgo_SectionAttribute): PrivateScope, Public, HideBySig
    SetNonDestructive(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    NonDestructive(): PrivateScope, Public, HideBySig
    Perform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGlue(XBOPAlgo_GlueEnum): PrivateScope, Public, HideBySig
    Glue(): PrivateScope, Public, HideBySig
    SetAvoidBuildPCurve(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsAvoidBuildPCurve(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BOPAlgo_PaveFiller*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct XTopAbs_Orientation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XTopAbs_Orientation TopAbs_FORWARD = 0 : Public, Static, Literal, HasDefault
    XTopAbs_Orientation TopAbs_REVERSED = 1 : Public, Static, Literal, HasDefault
    XTopAbs_Orientation TopAbs_INTERNAL = 2 : Public, Static, Literal, HasDefault
    XTopAbs_Orientation TopAbs_EXTERNAL = 3 : Public, Static, Literal, HasDefault
Struct XTopAbs_ShapeEnum: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XTopAbs_ShapeEnum TopAbs_COMPOUND = 0 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_COMPSOLID = 1 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_SOLID = 2 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_SHELL = 3 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_FACE = 4 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_WIRE = 5 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_EDGE = 6 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_VERTEX = 7 : Public, Static, Literal, HasDefault
    XTopAbs_ShapeEnum TopAbs_SHAPE = 8 : Public, Static, Literal, HasDefault
Struct XTopAbs_State: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XTopAbs_State TopAbs_IN = 0 : Public, Static, Literal, HasDefault
    XTopAbs_State TopAbs_OUT = 1 : Public, Static, Literal, HasDefault
    XTopAbs_State TopAbs_ON = 2 : Public, Static, Literal, HasDefault
    XTopAbs_State TopAbs_UNKNOWN = 3 : Public, Static, Literal, HasDefault
Struct XBOPAlgo_GlueEnum: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XBOPAlgo_GlueEnum BOPAlgo_GlueOff = 0 : Public, Static, Literal, HasDefault
    XBOPAlgo_GlueEnum BOPAlgo_GlueShift = 1 : Public, Static, Literal, HasDefault
    XBOPAlgo_GlueEnum BOPAlgo_GlueFull = 2 : Public, Static, Literal, HasDefault
Class TKBO.XBRepAlgoAPI_Common: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape, BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    BRepAlgoAPI_Common* IHandle 'get set' : 
  Methods:
    Shape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepAlgoAPI_Common*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBO.XBRepAlgoAPI_Cut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape, BOPAlgo_PaveFiller*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    BRepAlgoAPI_Cut* IHandle 'get set' : 
  Methods:
    Shape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepAlgoAPI_Cut*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBO.XBRepAlgoAPI_Fuse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape, BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    BRepAlgoAPI_Fuse* IHandle 'get set' : 
  Methods:
    Shape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepAlgoAPI_Fuse*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Geometry> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Geometry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<Geom_Geometry>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetGeomHandle(handle<Geom_Geometry>*): PrivateScope, Public, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Mirror(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirror(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotate(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translate(xgp_Vec): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Mirrored(xgp_Ax2): PrivateScope, Public, HideBySig
    Mirrored(xgp_Ax1): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt): PrivateScope, Public, HideBySig
    Rotated(xgp_Ax1, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt, Double): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Translated(xgp_Vec): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Surface> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Surface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Geometry
    Void .ctor(opencascade.handle<Geom_Surface>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetSurfaceHandle(handle<Geom_Surface>*): PrivateScope, Public, HideBySig
    GetSurface(handle<Geom_Surface>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    UReverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UReversed(handle<Geom_Surface>*): PrivateScope, Public, HideBySig
    UReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VReverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VReversed(handle<Geom_Surface>*): PrivateScope, Public, HideBySig
    VReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformParameters(Double, Double, xgp_Trsf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ParametricTransformation(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Bounds(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsUClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsVClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsUPeriodic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UPeriod(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsVPeriodic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VPeriod(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UIso(handle<Geom_Curve>*, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VIso(handle<Geom_Curve>*, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Continuity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsCNu(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsCNv(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D0(Double, Double, xgp_Pnt): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D1(Double, Double, xgp_Pnt, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D2(Double, Double, xgp_Pnt, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D3(Double, Double, xgp_Pnt, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DN(Double, Double, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Value(Double, Double): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBO.XBRepAlgoAPI_Section: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKG3d.XGeom_Surface, TKG3d.XGeom_Surface, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Surface, TKBRep.XTopoDS_Shape, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKG3d.XGeom_Surface, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKMath.xgp_Pln, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape, BOPAlgo_PaveFiller*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKBRep.XTopoDS_Shape, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BOPAlgo_PaveFiller*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    BRepAlgoAPI_Section* IHandle 'get set' : 
  Methods:
    Init1(XGeom_Surface): PrivateScope, Public, HideBySig
    Init1(xgp_Pln): PrivateScope, Public, HideBySig
    Init1(XTopoDS_Shape): PrivateScope, Public, HideBySig
    Init2(XGeom_Surface): PrivateScope, Public, HideBySig
    Init2(xgp_Pln): PrivateScope, Public, HideBySig
    Init2(XTopoDS_Shape): PrivateScope, Public, HideBySig
    Approximation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ComputePCurveOn1(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ComputePCurveOn2(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasAncestorFaceOn1(XTopoDS_Shape, XTopoDS_Shape): PrivateScope, Public, HideBySig
    HasAncestorFaceOn2(XTopoDS_Shape, XTopoDS_Shape): PrivateScope, Public, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepAlgoAPI_Section*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKTopAlgo.XBRepBuilderAPI_MakeShape: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeShapeHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Build(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Shape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Generated(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Modified(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsDeleted(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKFillet.XBRepFilletAPI_LocalOperation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(BRepFilletAPI_LocalOperation*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetLocalOperationHandle(BRepFilletAPI_LocalOperation*): PrivateScope, Public, HideBySig
    GetLocalOperation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    Add(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetContour(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NbContours(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contour(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NbEdges(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Edge(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Length(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FirstVertex(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LastVertex(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Abscissa(Int32, XTopoDS_Vertex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RelativeAbscissa(Int32, XTopoDS_Vertex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClosedAndTangent(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Closed(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Simulate(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NbSurf(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Sect(handle<ChFiDS_SecHArray1>*, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKFillet.XBRepFilletAPI_MakeChamfer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKFillet.XBRepFilletAPI_LocalOperation
    Void .ctor(BRepFilletAPI_MakeChamfer*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeChamferHandle(BRepFilletAPI_MakeChamfer*): PrivateScope, Public, HideBySig
    GetMakeChamfer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLocalOperation(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    Add(Double, Double, XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, HideBySig
    Add(Double, XTopoDS_Edge): PrivateScope, Public, HideBySig
    Add(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig
    SetDist(Double, Int32, XTopoDS_Face): PrivateScope, Public, HideBySig
    GetDist(Int32, Double): PrivateScope, Public, HideBySig
    SetDists(Double, Double, Int32, XTopoDS_Face): PrivateScope, Public, HideBySig
    Dists(Int32, Double&, Double&): PrivateScope, Public, HideBySig
    AddDA(Double, Double, XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, HideBySig
    SetDistAngle(Double, Double, Int32, XTopoDS_Face): PrivateScope, Public, HideBySig
    GetDistAngle(Int32, Double&, Double&): PrivateScope, Public, HideBySig
    SetMode(XChFiDS_ChamfMode): PrivateScope, Public, HideBySig
    IsSymetric(Int32): PrivateScope, Public, HideBySig
    IsTwoDistances(Int32): PrivateScope, Public, HideBySig
    IsDistanceAngle(Int32): PrivateScope, Public, HideBySig
    ResetContour(Int32): PrivateScope, Public, Virtual, HideBySig
    NbContours(): PrivateScope, Public, Virtual, HideBySig
    Contour(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig
    NbEdges(Int32): PrivateScope, Public, Virtual, HideBySig
    Edge(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Remove(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig
    Length(Int32): PrivateScope, Public, Virtual, HideBySig
    FirstVertex(Int32): PrivateScope, Public, Virtual, HideBySig
    LastVertex(Int32): PrivateScope, Public, Virtual, HideBySig
    Abscissa(Int32, XTopoDS_Vertex): PrivateScope, Public, Virtual, HideBySig
    RelativeAbscissa(Int32, XTopoDS_Vertex): PrivateScope, Public, Virtual, HideBySig
    ClosedAndTangent(Int32): PrivateScope, Public, Virtual, HideBySig
    Closed(Int32): PrivateScope, Public, Virtual, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    Builder(handle<TopOpeBRepBuild_HBuilder>*): PrivateScope, Public, HideBySig
    Generated(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    Modified(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    IsDeleted(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    Simulate(Int32): PrivateScope, Public, Virtual, HideBySig
    NbSurf(Int32): PrivateScope, Public, Virtual, HideBySig
    Sect(handle<ChFiDS_SecHArray1>*, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct XChFiDS_ChamfMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XChFiDS_ChamfMode ChFiDS_ClassicChamfer = 0 : Public, Static, Literal, HasDefault
    XChFiDS_ChamfMode ChFiDS_ConstThroatChamfer = 1 : Public, Static, Literal, HasDefault
    XChFiDS_ChamfMode ChFiDS_ConstThroatWithPenetrationChamfer = 2 : Public, Static, Literal, HasDefault
Class TKFillet.XBRepFilletAPI_MakeFillet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKFillet.XBRepFilletAPI_LocalOperation
    Void .ctor(BRepFilletAPI_MakeFillet*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, XChFi3d_FilletShape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeFilletHandle(BRepFilletAPI_MakeFillet*): PrivateScope, Public, HideBySig
    GetMakeFillet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLocalOperation(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    SetParams(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    SetContinuity(XGeomAbs_Shape, Double): PrivateScope, Public, HideBySig
    Add(NCollection_Array1<gp_Pnt2d>* IsImplicitlyDereferenced, XTopoDS_Edge): PrivateScope, Public, HideBySig
    Add(handle<Law_Function>* IsImplicitlyDereferenced, XTopoDS_Edge): PrivateScope, Public, HideBySig
    Add(Double, Double, XTopoDS_Edge): PrivateScope, Public, HideBySig
    Add(Double, XTopoDS_Edge): PrivateScope, Public, HideBySig
    Add(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig
    SetRadius(Double, Int32, XTopoDS_Vertex): PrivateScope, Public, HideBySig
    SetRadius(Double, Int32, XTopoDS_Edge): PrivateScope, Public, HideBySig
    SetRadius(NCollection_Array1<gp_Pnt2d>* IsImplicitlyDereferenced, Int32, Int32): PrivateScope, Public, HideBySig
    SetRadius(handle<Law_Function>* IsImplicitlyDereferenced, Int32, Int32): PrivateScope, Public, HideBySig
    SetRadius(Double, Double, Int32, Int32): PrivateScope, Public, HideBySig
    SetRadius(Double, Int32, Int32): PrivateScope, Public, HideBySig
    ResetContour(Int32): PrivateScope, Public, Virtual, HideBySig
    IsConstant(Int32, XTopoDS_Edge): PrivateScope, Public, HideBySig
    IsConstant(Int32): PrivateScope, Public, HideBySig
    Radius(Int32, XTopoDS_Edge): PrivateScope, Public, HideBySig
    Radius(Int32): PrivateScope, Public, HideBySig
    GetBounds(Int32, XTopoDS_Edge, Double, Double): PrivateScope, Public, HideBySig
    GetLaw(handle<Law_Function>*, Int32, XTopoDS_Edge): PrivateScope, Public, HideBySig
    SetLaw(Int32, XTopoDS_Edge, handle<Law_Function>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetFilletShape(XChFi3d_FilletShape): PrivateScope, Public, HideBySig
    GetFilletShape(): PrivateScope, Public, HideBySig
    NbContours(): PrivateScope, Public, Virtual, HideBySig
    Contour(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig
    NbEdges(Int32): PrivateScope, Public, Virtual, HideBySig
    Edge(Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Remove(XTopoDS_Edge): PrivateScope, Public, Virtual, HideBySig
    Length(Int32): PrivateScope, Public, Virtual, HideBySig
    FirstVertex(Int32): PrivateScope, Public, Virtual, HideBySig
    LastVertex(Int32): PrivateScope, Public, Virtual, HideBySig
    Abscissa(Int32, XTopoDS_Vertex): PrivateScope, Public, Virtual, HideBySig
    RelativeAbscissa(Int32, XTopoDS_Vertex): PrivateScope, Public, Virtual, HideBySig
    ClosedAndTangent(Int32): PrivateScope, Public, Virtual, HideBySig
    Closed(Int32): PrivateScope, Public, Virtual, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    Builder(handle<TopOpeBRepBuild_HBuilder>*): PrivateScope, Public, HideBySig
    Generated(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    Modified(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    IsDeleted(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    NbSurfaces(): PrivateScope, Public, HideBySig
    NewFaces(Int32): PrivateScope, Public, HideBySig
    Simulate(Int32): PrivateScope, Public, Virtual, HideBySig
    NbSurf(Int32): PrivateScope, Public, Virtual, HideBySig
    Sect(handle<ChFiDS_SecHArray1>*, Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    NbFaultyContours(): PrivateScope, Public, HideBySig
    FaultyContour(Int32): PrivateScope, Public, HideBySig
    NbComputedSurfaces(Int32): PrivateScope, Public, HideBySig
    ComputedSurface(Int32, Int32): PrivateScope, Public, HideBySig
    NbFaultyVertices(): PrivateScope, Public, HideBySig
    FaultyVertex(Int32): PrivateScope, Public, HideBySig
    HasResult(): PrivateScope, Public, HideBySig
    BadShape(): PrivateScope, Public, HideBySig
    StripeStatus(Int32): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct XGeomAbs_Shape: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XGeomAbs_Shape GeomAbs_C0 = 0 : Public, Static, Literal, HasDefault
    XGeomAbs_Shape GeomAbs_G1 = 1 : Public, Static, Literal, HasDefault
    XGeomAbs_Shape GeomAbs_C1 = 2 : Public, Static, Literal, HasDefault
    XGeomAbs_Shape GeomAbs_G2 = 3 : Public, Static, Literal, HasDefault
    XGeomAbs_Shape GeomAbs_C2 = 4 : Public, Static, Literal, HasDefault
    XGeomAbs_Shape GeomAbs_C3 = 5 : Public, Static, Literal, HasDefault
    XGeomAbs_Shape GeomAbs_CN = 6 : Public, Static, Literal, HasDefault
Struct XChFi3d_FilletShape: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XChFi3d_FilletShape ChFi3d_Rational = 0 : Public, Static, Literal, HasDefault
    XChFi3d_FilletShape ChFi3d_QuasiAngular = 1 : Public, Static, Literal, HasDefault
    XChFi3d_FilletShape ChFi3d_Polynomial = 2 : Public, Static, Literal, HasDefault
Struct XChFiDS_ErrorStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XChFiDS_ErrorStatus ChFiDS_Ok = 0 : Public, Static, Literal, HasDefault
    XChFiDS_ErrorStatus ChFiDS_Error = 1 : Public, Static, Literal, HasDefault
    XChFiDS_ErrorStatus ChFiDS_WalkingFailure = 2 : Public, Static, Literal, HasDefault
    XChFiDS_ErrorStatus ChFiDS_StartsolFailure = 3 : Public, Static, Literal, HasDefault
    XChFiDS_ErrorStatus ChFiDS_TwistedSurface = 4 : Public, Static, Literal, HasDefault
Class TKFillet.XBRepFilletAPI_MakeFillet2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(BRepFilletAPI_MakeFillet2d*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeFillet2dHandle(BRepFilletAPI_MakeFillet2d*): PrivateScope, Public, HideBySig
    GetMakeFillet2d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    Init(XTopoDS_Face, XTopoDS_Face): PrivateScope, Public, HideBySig
    Init(XTopoDS_Face): PrivateScope, Public, HideBySig
    AddFillet(XTopoDS_Vertex, Double): PrivateScope, Public, HideBySig
    ModifyFillet(XTopoDS_Edge, Double): PrivateScope, Public, HideBySig
    RemoveFillet(XTopoDS_Edge): PrivateScope, Public, HideBySig
    AddChamfer(XTopoDS_Edge, XTopoDS_Vertex, Double, Double): PrivateScope, Public, HideBySig
    AddChamfer(XTopoDS_Edge, XTopoDS_Edge, Double, Double): PrivateScope, Public, HideBySig
    ModifyChamfer(XTopoDS_Edge, XTopoDS_Edge, Double, Double): PrivateScope, Public, HideBySig
    ModifyChamfer(XTopoDS_Edge, XTopoDS_Edge, XTopoDS_Edge, Double, Double): PrivateScope, Public, HideBySig
    RemoveChamfer(XTopoDS_Edge): PrivateScope, Public, HideBySig
    IsModified(XTopoDS_Edge): PrivateScope, Public, HideBySig
    FilletEdges(NCollection_Sequence<TopoDS_Shape>*): PrivateScope, Public, HideBySig
    NbFillet(): PrivateScope, Public, HideBySig
    ChamferEdges(NCollection_Sequence<TopoDS_Shape>*): PrivateScope, Public, HideBySig
    NbChamfer(): PrivateScope, Public, HideBySig
    Modified(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    NbCurves(): PrivateScope, Public, HideBySig
    NewEdges(Int32): PrivateScope, Public, HideBySig
    HasDescendant(XTopoDS_Edge): PrivateScope, Public, HideBySig
    DescendantEdge(XTopoDS_Edge): PrivateScope, Public, HideBySig
    BasisEdge(XTopoDS_Edge): PrivateScope, Public, HideBySig
    Status(): PrivateScope, Public, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct XChFi2d_ConstructionError: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XChFi2d_ConstructionError ChFi2d_NotPlanar = 0 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_NoFace = 1 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_InitialisationError = 2 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_ParametersError = 3 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_Ready = 4 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_IsDone = 5 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_ComputationError = 6 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_ConnexionError = 7 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_TangencyError = 8 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_FirstEdgeDegenerated = 9 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_LastEdgeDegenerated = 10 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_BothEdgesDegenerated = 11 : Public, Static, Literal, HasDefault
    XChFi2d_ConstructionError ChFi2d_NotAuthorized = 12 : Public, Static, Literal, HasDefault
Class TKBRep.XTopoDS_Wire: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_Wire*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetWire(): PrivateScope, Public, HideBySig
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XTopoDS_Shell: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_Shell*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetShell(): PrivateScope, Public, HideBySig
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XTopoDS_Solid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_Solid*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetSolid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XTopoDS_CompSolid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_CompSolid*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetCompSolid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XTopoDS_Compound: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Shape
    Void .ctor(TopoDS_Compound*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Shape* IHandle 'get set' : 
  Methods:
    GetCompound(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Shape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XTopoDS_Builder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TopoDS_Builder*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Builder* IHandle 'get set' : 
  Methods:
    SetTopoDSBuilderHandle(TopoDS_Builder*): PrivateScope, Public, HideBySig
    GetTopoDSBuilder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeWire(XTopoDS_Wire): PrivateScope, Public, HideBySig
    MakeShell(XTopoDS_Shell): PrivateScope, Public, HideBySig
    MakeSolid(XTopoDS_Solid): PrivateScope, Public, HideBySig
    MakeCompSolid(XTopoDS_CompSolid): PrivateScope, Public, HideBySig
    MakeCompound(XTopoDS_Compound): PrivateScope, Public, HideBySig
    Add(XTopoDS_Shape, XTopoDS_Shape): PrivateScope, Public, HideBySig
    Remove(XTopoDS_Shape, XTopoDS_Shape): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(TopoDS_Builder*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NCollection_Haft<opencascade::handle<Geom_Curve> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Curve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Geometry
    Void .ctor(opencascade.handle<Geom_Curve>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetCurveHandle(handle<Geom_Curve>*): PrivateScope, Public, HideBySig
    GetCurve(handle<Geom_Curve>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    Reverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformedParameter(Double, xgp_Trsf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ParametricTransformation(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reversed(): PrivateScope, Public, HideBySig
    FirstParameter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LastParameter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPeriodic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Period(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Continuity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsCN(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D0(Double, xgp_Pnt): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D1(Double, xgp_Pnt, xgp_Vec): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D2(Double, xgp_Pnt, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D3(Double, xgp_Pnt, xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DN(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Value(Double): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<Geom2d_Geometry> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG2d.XGeom2d_Geometry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<Geom2d_Geometry>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetGeometryHandle(handle<Geom2d_Geometry>*): PrivateScope, Public, HideBySig
    GetGeometry(handle<Geom2d_Geometry>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Mirror(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirror(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotate(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scale(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Translate(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translate(xgp_Vec2d): PrivateScope, Public, HideBySig
    Transform(xgp_Trsf2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Mirrored(xgp_Ax2d): PrivateScope, Public, HideBySig
    Mirrored(xgp_Pnt2d): PrivateScope, Public, HideBySig
    Rotated(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Scaled(xgp_Pnt2d, Double): PrivateScope, Public, HideBySig
    Transformed(xgp_Trsf2d): PrivateScope, Public, HideBySig
    Translated(xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    Translated(xgp_Vec2d): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XGeom2d_Geometry(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<Geom2d_Curve> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG2d.XGeom2d_Curve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG2d.XGeom2d_Geometry
    Void .ctor(opencascade.handle<Geom2d_Curve>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetCurveHandle(handle<Geom2d_Curve>*): PrivateScope, Public, HideBySig
    GetGeometry(handle<Geom2d_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    GetCurve(handle<Geom2d_Curve>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformedParameter(Double, xgp_Trsf2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ParametricTransformation(xgp_Trsf2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reversed(): PrivateScope, Public, HideBySig
    FirstParameter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LastParameter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPeriodic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Period(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Continuity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsCN(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D0(Double, xgp_Pnt2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D1(Double, xgp_Pnt2d, xgp_Vec2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D2(Double, xgp_Pnt2d, xgp_Vec2d, xgp_Vec2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    D3(Double, xgp_Pnt2d, xgp_Vec2d, xgp_Vec2d, xgp_Vec2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DN(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Value(Double): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom2d_Curve(): PrivateScope, Public, HideBySig
Class TKBRep.XBRep_Builder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_Builder
    Void .ctor(BRep_Builder*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TopoDS_Builder* IHandle 'get set' : 
  Methods:
    SetBRepBuilderHandle(BRep_Builder*): PrivateScope, Public, HideBySig
    GetBRepBuilder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTopoDSBuilder(): PrivateScope, Public, Virtual, HideBySig
    MakeFace(XTopoDS_Face, handle<Poly_Triangulation>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    MakeFace(XTopoDS_Face, XGeom_Surface, XTopLoc_Location, Double): PrivateScope, Public, HideBySig
    MakeFace(XTopoDS_Face, XGeom_Surface, Double): PrivateScope, Public, HideBySig
    MakeFace(XTopoDS_Face): PrivateScope, Public, HideBySig
    UpdateFace(XTopoDS_Face, Double): PrivateScope, Public, HideBySig
    UpdateFace(XTopoDS_Face, handle<Poly_Triangulation>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    UpdateFace(XTopoDS_Face, XGeom_Surface, XTopLoc_Location, Double): PrivateScope, Public, HideBySig
    NaturalRestriction(XTopoDS_Face, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced, XTopLoc_Location): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge, handle<Poly_Polygon3D>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge, XGeom_Curve, XTopLoc_Location, Double): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge, XGeom_Curve, Double): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, Double): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, XGeom_Surface, XTopLoc_Location): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, XTopoDS_Face): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, XGeom_Surface, XTopLoc_Location): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, XTopoDS_Face): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced, XTopLoc_Location): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced, XTopLoc_Location): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_Polygon3D>* IsImplicitlyDereferenced, XTopLoc_Location): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, handle<Poly_Polygon3D>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom2d_Curve, XGeom2d_Curve, XGeom_Surface, XTopLoc_Location, Double, xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom2d_Curve, XGeom2d_Curve, XGeom_Surface, XTopLoc_Location, Double): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom2d_Curve, XGeom_Surface, XTopLoc_Location, Double, xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom2d_Curve, XGeom_Surface, XTopLoc_Location, Double): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom2d_Curve, XGeom2d_Curve, XTopoDS_Face, Double): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom2d_Curve, XTopoDS_Face, Double): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom_Curve, XTopLoc_Location, Double): PrivateScope, Public, HideBySig
    UpdateEdge(XTopoDS_Edge, XGeom_Curve, Double): PrivateScope, Public, HideBySig
    Continuity(XTopoDS_Edge, XGeom_Surface, XGeom_Surface, XTopLoc_Location, XTopLoc_Location, XGeomAbs_Shape): PrivateScope, Public, HideBySig
    Continuity(XTopoDS_Edge, XTopoDS_Face, XTopoDS_Face, XGeomAbs_Shape): PrivateScope, Public, HideBySig
    SameParameter(XTopoDS_Edge, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SameRange(XTopoDS_Edge, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Degenerated(XTopoDS_Edge, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Range(XTopoDS_Edge, XTopoDS_Face, Double, Double): PrivateScope, Public, HideBySig
    Range(XTopoDS_Edge, XGeom_Surface, XTopLoc_Location, Double, Double): PrivateScope, Public, HideBySig
    Range(XTopoDS_Edge, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Transfert(XTopoDS_Edge, XTopoDS_Edge, XTopoDS_Vertex, XTopoDS_Vertex): PrivateScope, Public, HideBySig
    Transfert(XTopoDS_Edge, XTopoDS_Edge): PrivateScope, Public, HideBySig
    MakeVertex(XTopoDS_Vertex, xgp_Pnt, Double): PrivateScope, Public, HideBySig
    MakeVertex(XTopoDS_Vertex): PrivateScope, Public, HideBySig
    UpdateVertex(XTopoDS_Vertex, Double): PrivateScope, Public, HideBySig
    UpdateVertex(XTopoDS_Vertex, Double, Double, XTopoDS_Face, Double): PrivateScope, Public, HideBySig
    UpdateVertex(XTopoDS_Vertex, Double, XTopoDS_Edge, XGeom_Surface, XTopLoc_Location, Double): PrivateScope, Public, HideBySig
    UpdateVertex(XTopoDS_Vertex, Double, XTopoDS_Edge, XTopoDS_Face, Double): PrivateScope, Public, HideBySig
    UpdateVertex(XTopoDS_Vertex, Double, XTopoDS_Edge, Double): PrivateScope, Public, HideBySig
    UpdateVertex(XTopoDS_Vertex, xgp_Pnt, Double): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(TopoDS_Builder*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrim_Builder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(BRepPrim_Builder*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_Builder* IHandle 'get set' : 
  Methods:
    SetBRepPrimBuilderHandle(BRepPrim_Builder*): PrivateScope, Public, HideBySig
    GetBRepPrimBuilder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Builder(): PrivateScope, Public, HideBySig
    MakeShell(XTopoDS_Shell): PrivateScope, Public, HideBySig
    MakeFace(XTopoDS_Face, xgp_Pln): PrivateScope, Public, HideBySig
    MakeWire(XTopoDS_Wire): PrivateScope, Public, HideBySig
    MakeDegeneratedEdge(XTopoDS_Edge): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge, xgp_Circ): PrivateScope, Public, HideBySig
    MakeEdge(XTopoDS_Edge, xgp_Lin): PrivateScope, Public, HideBySig
    SetPCurve(XTopoDS_Edge, XTopoDS_Face, xgp_Circ2d): PrivateScope, Public, HideBySig
    SetPCurve(XTopoDS_Edge, XTopoDS_Face, xgp_Lin2d, xgp_Lin2d): PrivateScope, Public, HideBySig
    SetPCurve(XTopoDS_Edge, XTopoDS_Face, xgp_Lin2d): PrivateScope, Public, HideBySig
    MakeVertex(XTopoDS_Vertex, xgp_Pnt): PrivateScope, Public, HideBySig
    ReverseFace(XTopoDS_Face): PrivateScope, Public, HideBySig
    AddEdgeVertex(XTopoDS_Edge, XTopoDS_Vertex, Double, Double): PrivateScope, Public, HideBySig
    AddEdgeVertex(XTopoDS_Edge, XTopoDS_Vertex, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetParameters(XTopoDS_Edge, XTopoDS_Vertex, Double, Double): PrivateScope, Public, HideBySig
    AddWireEdge(XTopoDS_Wire, XTopoDS_Edge, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddFaceWire(XTopoDS_Face, XTopoDS_Wire): PrivateScope, Public, HideBySig
    AddShellFace(XTopoDS_Shell, XTopoDS_Face): PrivateScope, Public, HideBySig
    CompleteEdge(XTopoDS_Edge): PrivateScope, Public, HideBySig
    CompleteWire(XTopoDS_Wire): PrivateScope, Public, HideBySig
    CompleteFace(XTopoDS_Face): PrivateScope, Public, HideBySig
    CompleteShell(XTopoDS_Shell): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepPrim_Builder*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKPrim.XBRepPrim_GWedge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKPrim.XBRepPrim_Builder, TKMath.xgp_Ax2, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKPrim.XBRepPrim_Builder, TKMath.xgp_Ax2, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKPrim.XBRepPrim_Builder, TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_GWedge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_GWedge* IHandle 'get set' : 
  Methods:
    SetGWedgeHandle(BRepPrim_GWedge*): PrivateScope, Public, HideBySig
    GetGWedge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Axes(): PrivateScope, Public, HideBySig
    GetXMin(): PrivateScope, Public, HideBySig
    GetYMin(): PrivateScope, Public, HideBySig
    GetZMin(): PrivateScope, Public, HideBySig
    GetZ2Min(): PrivateScope, Public, HideBySig
    GetX2Min(): PrivateScope, Public, HideBySig
    GetXMax(): PrivateScope, Public, HideBySig
    GetYMax(): PrivateScope, Public, HideBySig
    GetZMax(): PrivateScope, Public, HideBySig
    GetZ2Max(): PrivateScope, Public, HideBySig
    GetX2Max(): PrivateScope, Public, HideBySig
    Open(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Close(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    IsInfinite(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Shell(): PrivateScope, Public, HideBySig
    HasFace(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Face(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Plane(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    HasWire(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Wire(XBRepPrim_Direction): PrivateScope, Public, HideBySig
    HasEdge(XBRepPrim_Direction, XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Edge(XBRepPrim_Direction, XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Line(XBRepPrim_Direction, XBRepPrim_Direction): PrivateScope, Public, HideBySig
    HasVertex(XBRepPrim_Direction, XBRepPrim_Direction, XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Vertex(XBRepPrim_Direction, XBRepPrim_Direction, XBRepPrim_Direction): PrivateScope, Public, HideBySig
    Point(XBRepPrim_Direction, XBRepPrim_Direction, XBRepPrim_Direction): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepPrim_GWedge*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKPrim.XBRepPrim_Wedge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrim_GWedge
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_Wedge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_GWedge* IHandle 'get set' : 
  Methods:
    SetBRepPrimWedgeHandle(BRepPrim_Wedge*): PrivateScope, Public, HideBySig
    GetBRepPrimWedge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGWedge(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepPrim_GWedge*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeBox*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeBoxHandle(BRepPrimAPI_MakeBox*): PrivateScope, Public, HideBySig
    GetMakeOneAxis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Wedge(): PrivateScope, Public, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig
    Shell(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Solid(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    BottomFace(): PrivateScope, Public, HideBySig
    BackFace(): PrivateScope, Public, HideBySig
    FrontFace(): PrivateScope, Public, HideBySig
    LeftFace(): PrivateScope, Public, HideBySig
    RightFace(): PrivateScope, Public, HideBySig
    TopFace(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct XBRepPrim_Direction: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XBRepPrim_Direction BRepPrim_XMin = 0 : Public, Static, Literal, HasDefault
    XBRepPrim_Direction BRepPrim_XMax = 1 : Public, Static, Literal, HasDefault
    XBRepPrim_Direction BRepPrim_YMin = 2 : Public, Static, Literal, HasDefault
    XBRepPrim_Direction BRepPrim_YMax = 3 : Public, Static, Literal, HasDefault
    XBRepPrim_Direction BRepPrim_ZMin = 4 : Public, Static, Literal, HasDefault
    XBRepPrim_Direction BRepPrim_ZMax = 5 : Public, Static, Literal, HasDefault
Class TKPrim.XBRepPrimAPI_MakeOneAxis: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(BRepPrimAPI_MakeOneAxis*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeOneAxisHandle(BRepPrimAPI_MakeOneAxis*): PrivateScope, Public, HideBySig
    GetMakeOneAxis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    OneAxis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Build(): PrivateScope, Public, Virtual, HideBySig
    Face(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Shell(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Solid(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrim_OneAxis: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(BRepPrim_OneAxis*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    BRepPrim_OneAxis* IHandle 'get set' : 
  Methods:
    SetOneAxisHandle(BRepPrim_OneAxis*): PrivateScope, Public, HideBySig
    GetOneAxis(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMeridianOffset(Double): PrivateScope, Public, HideBySig
    Axes(xgp_Ax2): PrivateScope, Public, HideBySig
    Axes(): PrivateScope, Public, HideBySig
    Angle(Double): PrivateScope, Public, HideBySig
    Angle(): PrivateScope, Public, HideBySig
    VMin(Double): PrivateScope, Public, HideBySig
    VMin(): PrivateScope, Public, HideBySig
    VMax(Double): PrivateScope, Public, HideBySig
    VMax(): PrivateScope, Public, HideBySig
    MakeEmptyLateralFace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeEmptyMeridianEdge(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMeridianPCurve(XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MeridianValue(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MeridianOnAxis(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MeridianClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VMaxInfinite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VMinInfinite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasBottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasSides(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Shell(): PrivateScope, Public, HideBySig
    LateralFace(): PrivateScope, Public, HideBySig
    TopFace(): PrivateScope, Public, HideBySig
    BottomFace(): PrivateScope, Public, HideBySig
    StartFace(): PrivateScope, Public, HideBySig
    EndFace(): PrivateScope, Public, HideBySig
    LateralWire(): PrivateScope, Public, HideBySig
    LateralStartWire(): PrivateScope, Public, HideBySig
    LateralEndWire(): PrivateScope, Public, HideBySig
    TopWire(): PrivateScope, Public, HideBySig
    BottomWire(): PrivateScope, Public, HideBySig
    StartWire(): PrivateScope, Public, HideBySig
    AxisStartWire(): PrivateScope, Public, HideBySig
    EndWire(): PrivateScope, Public, HideBySig
    AxisEndWire(): PrivateScope, Public, HideBySig
    AxisEdge(): PrivateScope, Public, HideBySig
    StartEdge(): PrivateScope, Public, HideBySig
    EndEdge(): PrivateScope, Public, HideBySig
    StartTopEdge(): PrivateScope, Public, HideBySig
    StartBottomEdge(): PrivateScope, Public, HideBySig
    EndTopEdge(): PrivateScope, Public, HideBySig
    EndBottomEdge(): PrivateScope, Public, HideBySig
    TopEdge(): PrivateScope, Public, HideBySig
    BottomEdge(): PrivateScope, Public, HideBySig
    AxisTopVertex(): PrivateScope, Public, HideBySig
    AxisBottomVertex(): PrivateScope, Public, HideBySig
    TopStartVertex(): PrivateScope, Public, HideBySig
    TopEndVertex(): PrivateScope, Public, HideBySig
    BottomStartVertex(): PrivateScope, Public, HideBySig
    BottomEndVertex(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepPrim_OneAxis*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKPrim.XBRepPrim_Revolution: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrim_OneAxis
    Void .ctor(TKMath.xgp_Ax2, Double, Double, TKG3d.XGeom_Curve, TKG2d.XGeom2d_Curve): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_Revolution*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_OneAxis* IHandle 'get set' : 
  Methods:
    SetRevolutionHandle(BRepPrim_Revolution*): PrivateScope, Public, HideBySig
    GetRevolution(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOneAxis(): PrivateScope, Public, Virtual, HideBySig
    MakeEmptyLateralFace(): PrivateScope, Public, Virtual, HideBySig
    MakeEmptyMeridianEdge(Double): PrivateScope, Public, Virtual, HideBySig
    MeridianValue(Double): PrivateScope, Public, Virtual, HideBySig
    SetMeridianPCurve(XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepPrim_OneAxis*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrim_Cone: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrim_Revolution
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, TKMath.xgp_Ax2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_Cone*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_OneAxis* IHandle 'get set' : 
  Methods:
    SetPrimConeHandle(BRepPrim_Cone*): PrivateScope, Public, HideBySig
    GetPrimCone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRevolution(): PrivateScope, Public, Virtual, HideBySig
    GetOneAxis(): PrivateScope, Public, Virtual, HideBySig
    MakeEmptyLateralFace(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepPrim_OneAxis*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeCone: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrimAPI_MakeOneAxis
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeCone*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeConeHandle(BRepPrimAPI_MakeCone*): PrivateScope, Public, HideBySig
    GetMakeCone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeOneAxis(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    OneAxis(): PrivateScope, Public, Virtual, HideBySig
    Cone(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrim_Cylinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrim_Revolution
    Void .ctor(TKMath.xgp_Pnt, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_Cylinder*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_OneAxis* IHandle 'get set' : 
  Methods:
    SetCylinderHandle(BRepPrim_Cylinder*): PrivateScope, Public, HideBySig
    GetCylinder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRevolution(): PrivateScope, Public, Virtual, HideBySig
    GetOneAxis(): PrivateScope, Public, Virtual, HideBySig
    MakeEmptyLateralFace(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepPrim_OneAxis*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeCylinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrimAPI_MakeOneAxis
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeCylinder*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeCylinderHandle(BRepPrimAPI_MakeCylinder*): PrivateScope, Public, HideBySig
    GetMakeCylinder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeOneAxis(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    OneAxis(): PrivateScope, Public, Virtual, HideBySig
    Cylinder(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeHalfSpace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKBRep.XTopoDS_Shell, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Face, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeHalfSpace*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeHalfSpaceHandle(BRepPrimAPI_MakeHalfSpace*): PrivateScope, Public, HideBySig
    GetMakeHalfSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Solid(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeSweep: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(BRepPrimAPI_MakeSweep*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeSweepHandle(BRepPrimAPI_MakeSweep*): PrivateScope, Public, HideBySig
    GetMakeSweep(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    FirstShape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    LastShape(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakePrism: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrimAPI_MakeSweep
    Void .ctor(TKBRep.XTopoDS_Shape, TKMath.xgp_Dir, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKMath.xgp_Vec, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakePrismHandle(BRepPrimAPI_MakePrism*): PrivateScope, Public, HideBySig
    GetMakePrism(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeSweep(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    Prism(BRepSweep_Prism*): PrivateScope, Public, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig
    FirstShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    FirstShape(): PrivateScope, Public, Virtual, HideBySig
    LastShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    LastShape(): PrivateScope, Public, Virtual, HideBySig
    Generated(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    IsDeleted(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepSweep_Revol: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XTopoDS_Shape, TKMath.xgp_Ax1, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKMath.xgp_Ax1, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepSweep_Revol*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepSweep_Revol* IHandle 'get set' : 
  Methods:
    SetSweepRevolHandle(BRepSweep_Revol*): PrivateScope, Public, HideBySig
    GetSweepRevol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Shape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    Shape(): PrivateScope, Public, HideBySig
    FirstShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    FirstShape(): PrivateScope, Public, HideBySig
    LastShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    LastShape(): PrivateScope, Public, HideBySig
    Axe(): PrivateScope, Public, HideBySig
    Angle(): PrivateScope, Public, HideBySig
    IsUsed(XTopoDS_Shape): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepSweep_Revol*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKPrim.XBRepPrimAPI_MakeRevol: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrimAPI_MakeSweep
    Void .ctor(TKBRep.XTopoDS_Shape, TKMath.xgp_Ax1, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape, TKMath.xgp_Ax1, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeRevol*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeRevolHandle(BRepPrimAPI_MakeRevol*): PrivateScope, Public, HideBySig
    GetMakeRevol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeSweep(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    Revol(): PrivateScope, Public, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig
    FirstShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    FirstShape(): PrivateScope, Public, Virtual, HideBySig
    LastShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    LastShape(): PrivateScope, Public, Virtual, HideBySig
    Generated(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    IsDeleted(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    HasDegenerated(): PrivateScope, Public, HideBySig
    Degenerated(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeRevolution: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrimAPI_MakeOneAxis
    Void .ctor(TKMath.xgp_Ax2, TKG3d.XGeom_Curve, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, TKG3d.XGeom_Curve, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, TKG3d.XGeom_Curve, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, TKG3d.XGeom_Curve): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeRevolution*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeRevolutionHandle(BRepPrimAPI_MakeRevolution*): PrivateScope, Public, HideBySig
    GetMakeRevolution(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeOneAxis(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    OneAxis(): PrivateScope, Public, Virtual, HideBySig
    Revolution(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrim_Sphere: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrim_Revolution
    Void .ctor(TKMath.xgp_Ax2, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_Sphere*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_OneAxis* IHandle 'get set' : 
  Methods:
    SetPrimSphereHandle(BRepPrim_Sphere*): PrivateScope, Public, HideBySig
    GetPrimSphere(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRevolution(): PrivateScope, Public, Virtual, HideBySig
    GetOneAxis(): PrivateScope, Public, Virtual, HideBySig
    MakeEmptyLateralFace(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepPrim_OneAxis*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeSphere: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrimAPI_MakeOneAxis
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeSphere*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeSphereHandle(BRepPrimAPI_MakeSphere*): PrivateScope, Public, HideBySig
    GetMakeSphere(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeOneAxis(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    OneAxis(): PrivateScope, Public, Virtual, HideBySig
    Sphere(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrim_Torus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrim_Revolution
    Void .ctor(TKMath.xgp_Pnt, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_Torus*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_OneAxis* IHandle 'get set' : 
  Methods:
    SetPrimTorusHandle(BRepPrim_Torus*): PrivateScope, Public, HideBySig
    GetPrimTorus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRevolution(): PrivateScope, Public, Virtual, HideBySig
    GetOneAxis(): PrivateScope, Public, Virtual, HideBySig
    MakeEmptyLateralFace(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepPrim_OneAxis*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeTorus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKPrim.XBRepPrimAPI_MakeOneAxis
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeTorus*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeTorusHandle(BRepPrimAPI_MakeTorus*): PrivateScope, Public, HideBySig
    GetMakeTorus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeOneAxis(): PrivateScope, Public, Virtual, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    OneAxis(): PrivateScope, Public, Virtual, HideBySig
    Torus(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrimAPI_MakeWedge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrimAPI_MakeWedge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeWedgeHandle(BRepPrimAPI_MakeWedge*): PrivateScope, Public, HideBySig
    GetMakeWedge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Wedge(): PrivateScope, Public, HideBySig
    Build(): PrivateScope, Public, Virtual, HideBySig
    Shell(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Solid(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKPrim.XBRepPrim_FaceBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XBRep_Builder, TKG3d.XGeom_Surface, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XBRep_Builder, TKG3d.XGeom_Surface): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepPrim_FaceBuilder*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepPrim_FaceBuilder* IHandle 'get set' : 
  Methods:
    SetPrimFaceBuilder(BRepPrim_FaceBuilder*): PrivateScope, Public, HideBySig
    GetPrimFaceBuilder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Init(XBRep_Builder, XGeom_Surface, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Init(XBRep_Builder, XGeom_Surface): PrivateScope, Public, HideBySig
    Face(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Edge(Int32): PrivateScope, Public, HideBySig
    Vertex(Int32): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(BRepPrim_FaceBuilder*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKTopAlgo.XBRepBuilderAPI_MakeEdge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKG2d.XGeom2d_Curve, TKG3d.XGeom_Surface, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG2d.XGeom2d_Curve, TKG3d.XGeom_Surface, TKMath.xgp_Pnt, TKMath.xgp_Pnt, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG2d.XGeom2d_Curve, TKG3d.XGeom_Surface, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG2d.XGeom2d_Curve, TKG3d.XGeom_Surface, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG2d.XGeom2d_Curve, TKG3d.XGeom_Surface, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG2d.XGeom2d_Curve, TKG3d.XGeom_Surface): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, TKMath.xgp_Pnt, TKMath.xgp_Pnt, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Curve): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Parab, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Parab, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Parab, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Parab): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Hypr, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Hypr, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Hypr, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Hypr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Lin, TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Lin, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Lin, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Lin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Vertex, TKBRep.XTopoDS_Vertex): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepBuilderAPI_MakeEdge*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    Initialize(BRepBuilderAPI_MakeEdge*): PrivateScope, Public, HideBySig
    SetMakeEdgeHandle(BRepBuilderAPI_MakeEdge*): PrivateScope, Public, HideBySig
    GetMakeEdge(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Init(XGeom2d_Curve, XGeom_Surface, XTopoDS_Vertex, XTopoDS_Vertex, Double, Double): PrivateScope, Public, HideBySig
    Init(XGeom2d_Curve, XGeom_Surface, xgp_Pnt, xgp_Pnt, Double, Double): PrivateScope, Public, HideBySig
    Init(XGeom2d_Curve, XGeom_Surface, XTopoDS_Vertex, XTopoDS_Vertex): PrivateScope, Public, HideBySig
    Init(XGeom2d_Curve, XGeom_Surface, xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Init(XGeom2d_Curve, XGeom_Surface, Double, Double): PrivateScope, Public, HideBySig
    Init(XGeom2d_Curve, XGeom_Surface): PrivateScope, Public, HideBySig
    Init(XGeom_Curve, XTopoDS_Vertex, XTopoDS_Vertex, Double, Double): PrivateScope, Public, HideBySig
    Init(XGeom_Curve, xgp_Pnt, xgp_Pnt, Double, Double): PrivateScope, Public, HideBySig
    Init(XGeom_Curve, XTopoDS_Vertex, XTopoDS_Vertex): PrivateScope, Public, HideBySig
    Init(XGeom_Curve, xgp_Pnt, xgp_Pnt): PrivateScope, Public, HideBySig
    Init(XGeom_Curve, Double, Double): PrivateScope, Public, HideBySig
    Init(XGeom_Curve): PrivateScope, Public, HideBySig
    IsDone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Error(): PrivateScope, Public, HideBySig
    Edge(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Shape(): PrivateScope, Public, Virtual, HideBySig
    Vertex1(): PrivateScope, Public, HideBySig
    Vertex2(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct XBRepBuilderAPI_EdgeError: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XBRepBuilderAPI_EdgeError BRepBuilderAPI_EdgeDone = 0 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_EdgeError BRepBuilderAPI_PointProjectionFailed = 1 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_EdgeError BRepBuilderAPI_ParameterOutOfRange = 2 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_EdgeError BRepBuilderAPI_DifferentPointsOnClosedCurve = 3 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_EdgeError BRepBuilderAPI_PointWithInfiniteParameter = 4 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_EdgeError BRepBuilderAPI_DifferentsPointAndParameter = 5 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_EdgeError BRepBuilderAPI_LineThroughIdenticPoints = 6 : Public, Static, Literal, HasDefault
Class TKTopAlgo.XBRepBuilderAPI_MakeFace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKBRep.XTopoDS_Face, TKBRep.XTopoDS_Wire): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Surface, TKBRep.XTopoDS_Wire, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Torus, TKBRep.XTopoDS_Wire, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Sphere, TKBRep.XTopoDS_Wire, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Cone, TKBRep.XTopoDS_Wire, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Cylinder, TKBRep.XTopoDS_Wire, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pln, TKBRep.XTopoDS_Wire, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Wire, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Surface, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Torus, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Sphere, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Cone, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Cylinder, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pln, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Surface, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Torus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Sphere): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Cone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Cylinder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pln): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Face): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    Initialize(BRepBuilderAPI_MakeFace*): PrivateScope, Public, HideBySig
    Init(XGeom_Surface, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Init(XGeom_Surface, Boolean(HasFieldMarshal), Double): PrivateScope, Public, HideBySig
    Init(XTopoDS_Face): PrivateScope, Public, HideBySig
    Add(XTopoDS_Wire): PrivateScope, Public, HideBySig
    IsDone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Error(): PrivateScope, Public, HideBySig
    Face(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    SetMakeFaceHandle(BRepBuilderAPI_MakeFace*): PrivateScope, Public, HideBySig
    GetMakeFace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct XBRepBuilderAPI_FaceError: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XBRepBuilderAPI_FaceError BRepBuilderAPI_FaceDone = 0 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_FaceError BRepBuilderAPI_NoFace = 1 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_FaceError BRepBuilderAPI_NotPlanar = 2 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_FaceError BRepBuilderAPI_CurveProjectionFailed = 3 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_FaceError BRepBuilderAPI_ParametersOutOfRange = 4 : Public, Static, Literal, HasDefault
Class TKTopAlgo.XBRepBuilderAPI_MakeShell: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKG3d.XGeom_Surface, Double, Double, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKG3d.XGeom_Surface, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    Init(XGeom_Surface, Double, Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsDone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Error(): PrivateScope, Public, HideBySig
    Shell(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct XBRepBuilderAPI_ShellError: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XBRepBuilderAPI_ShellError BRepBuilderAPI_ShellDone = 0 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_ShellError BRepBuilderAPI_EmptyShell = 1 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_ShellError BRepBuilderAPI_DisconnectedShell = 2 : Public, Static, Literal, HasDefault
    XBRepBuilderAPI_ShellError BRepBuilderAPI_ShellParametersOutOfRange = 3 : Public, Static, Literal, HasDefault
Class TKTopAlgo.XBRepBuilderAPI_MakeSolid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKBRep.XTopoDS_Solid, TKBRep.XTopoDS_Shell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Solid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shell, TKBRep.XTopoDS_Shell, TKBRep.XTopoDS_Shell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shell, TKBRep.XTopoDS_Shell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shell): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_CompSolid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepBuilderAPI_MakeSolid*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    SetMakeSolidHandle(BRepBuilderAPI_MakeSolid*): PrivateScope, Public, HideBySig
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    Add(XTopoDS_Shell): PrivateScope, Public, HideBySig
    IsDone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Solid(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    IsDeleted(XTopoDS_Shape): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKTopAlgo.XBRepBuilderAPI_MakeVertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    Vertex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_Implicit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKTopAlgo.XBRepBuilderAPI_MakeWire: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKTopAlgo.XBRepBuilderAPI_MakeShape
    Void .ctor(TKBRep.XTopoDS_Wire, TKBRep.XTopoDS_Edge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Wire): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Edge, TKBRep.XTopoDS_Edge, TKBRep.XTopoDS_Edge, TKBRep.XTopoDS_Edge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Edge, TKBRep.XTopoDS_Edge, TKBRep.XTopoDS_Edge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Edge, TKBRep.XTopoDS_Edge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Edge): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(BRepBuilderAPI_MakeWire*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    BRepBuilderAPI_MakeShape* IHandle 'get set' : 
  Methods:
    Add(XTopTools_ListOfShape): PrivateScope, Public, HideBySig
    Add(XTopoDS_Wire): PrivateScope, Public, HideBySig
    Add(XTopoDS_Edge): PrivateScope, Public, HideBySig
    IsDone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Error(): PrivateScope, Public, HideBySig
    Wire(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Edge(): PrivateScope, Public, HideBySig
    Shape(): PrivateScope, Public, Virtual, HideBySig
    Vertex(): PrivateScope, Public, HideBySig
    GetMakeWire(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMakeShape(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(BRepBuilderAPI_MakeShape*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKBRep.XBRepTools: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    UVBounds(XTopoDS_Face, XTopoDS_Edge, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    UVBounds(XTopoDS_Face, XTopoDS_Wire, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    UVBounds(XTopoDS_Face, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    AddUVBounds(XTopoDS_Face, XTopoDS_Edge, Bnd_Box2d* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    AddUVBounds(XTopoDS_Face, XTopoDS_Wire, Bnd_Box2d* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    AddUVBounds(XTopoDS_Face, Bnd_Box2d* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Compound): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_CompSolid): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Solid): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Shell): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Wire): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Update(XTopoDS_Vertex): PrivateScope, Public, Static, HideBySig
    UpdateFaceUVPoints(XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    Clean(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    CleanGeometry(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    RemoveUnusedPCurves(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Triangulation(XTopoDS_Shape, Double): PrivateScope, Public, Static, HideBySig
    Compare(XTopoDS_Edge, XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Compare(XTopoDS_Vertex, XTopoDS_Vertex): PrivateScope, Public, Static, HideBySig
    OuterWire(XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    Map3DEdges(XTopoDS_Shape, NCollection_IndexedMap<TopoDS_Shape\,TopTools_ShapeMapHasher>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    IsReallyClosed(XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    DetectClosedness(XTopoDS_Face, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Dump(XTopoDS_Shape, basic_ostream<char\,std::char_traits<char> >*): PrivateScope, Public, Static, HideBySig
    Write(XTopoDS_Shape, SByte*, handle<Message_ProgressIndicator>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Write(XTopoDS_Shape, basic_ostream<char\,std::char_traits<char> >*, handle<Message_ProgressIndicator>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Read(XTopoDS_Shape, SByte*, XBRep_Builder, handle<Message_ProgressIndicator>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    Read(XTopoDS_Shape, basic_istream<char\,std::char_traits<char> >*, XBRep_Builder, handle<Message_ProgressIndicator>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    EvalAndUpdateTol(XTopoDS_Edge, XGeom_Curve, XGeom2d_Curve, XGeom_Surface, Double, Double): PrivateScope, Public, Static, HideBySig
Class TKBRep.XBRep_Tool: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsClosed(XTopoDS_Edge, handle<Poly_Triangulation>* IsImplicitlyDereferenced, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    IsClosed(XTopoDS_Edge, XGeom_Surface, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    IsClosed(XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    IsClosed(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Surface(XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    Surface(XTopoDS_Face, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    Triangulation(handle<Poly_Triangulation>*, XTopoDS_Face, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    Tolerance(XTopoDS_Vertex): PrivateScope, Public, Static, HideBySig
    Tolerance(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Tolerance(XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    NaturalRestriction(XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    IsGeometric(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Curve(XTopoDS_Edge, Double, Double): PrivateScope, Public, Static, HideBySig
    Curve(XTopoDS_Edge, XTopLoc_Location, Double, Double): PrivateScope, Public, Static, HideBySig
    Polygon3D(handle<Poly_Polygon3D>*, XTopoDS_Edge, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    CurveOnSurface(XTopoDS_Edge, XGeom2d_Curve, XGeom_Surface, XTopLoc_Location, Double, Double, Int32): PrivateScope, Public, Static, HideBySig
    CurveOnSurface(XTopoDS_Edge, XGeom2d_Curve, XGeom_Surface, XTopLoc_Location, Double, Double): PrivateScope, Public, Static, HideBySig
    CurveOnSurface(XTopoDS_Edge, XGeom_Surface, XTopLoc_Location, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CurveOnSurface(XTopoDS_Edge, XTopoDS_Face, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CurveOnPlane(XTopoDS_Edge, XGeom_Surface, XTopLoc_Location, Double, Double): PrivateScope, Public, Static, HideBySig
    PolygonOnSurface(XTopoDS_Edge, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, XGeom_Surface, XTopLoc_Location, Int32): PrivateScope, Public, Static, HideBySig
    PolygonOnSurface(XTopoDS_Edge, handle<Poly_Polygon2D>* IsImplicitlyDereferenced, XGeom_Surface, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    PolygonOnSurface(handle<Poly_Polygon2D>*, XTopoDS_Edge, XGeom_Surface, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    PolygonOnSurface(handle<Poly_Polygon2D>*, XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    PolygonOnTriangulation(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced, XTopLoc_Location, Int32): PrivateScope, Public, Static, HideBySig
    PolygonOnTriangulation(XTopoDS_Edge, handle<Poly_PolygonOnTriangulation>* IsImplicitlyDereferenced, handle<Poly_Triangulation>* IsImplicitlyDereferenced, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    PolygonOnTriangulation(handle<Poly_PolygonOnTriangulation>*, XTopoDS_Edge, handle<Poly_Triangulation>* IsImplicitlyDereferenced, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    SameParameter(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    SameRange(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Degenerated(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Range(XTopoDS_Edge, XTopoDS_Face, Double, Double): PrivateScope, Public, Static, HideBySig
    Range(XTopoDS_Edge, XGeom_Surface, XTopLoc_Location, Double, Double): PrivateScope, Public, Static, HideBySig
    Range(XTopoDS_Edge, Double, Double): PrivateScope, Public, Static, HideBySig
    UVPoints(XTopoDS_Edge, XTopoDS_Face, xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, Static, HideBySig
    UVPoints(XTopoDS_Edge, XGeom_Surface, XTopLoc_Location, xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, Static, HideBySig
    SetUVPoints(XTopoDS_Edge, XTopoDS_Face, xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, Static, HideBySig
    SetUVPoints(XTopoDS_Edge, XGeom_Surface, XTopLoc_Location, xgp_Pnt2d, xgp_Pnt2d): PrivateScope, Public, Static, HideBySig
    HasContinuity(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    HasContinuity(XTopoDS_Edge, XGeom_Surface, XGeom_Surface, XTopLoc_Location, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    HasContinuity(XTopoDS_Edge, XTopoDS_Face, XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    Continuity(XTopoDS_Edge, XGeom_Surface, XGeom_Surface, XTopLoc_Location, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    Continuity(XTopoDS_Edge, XTopoDS_Face, XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    MaxContinuity(XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Pnt(XTopoDS_Vertex): PrivateScope, Public, Static, HideBySig
    Parameter(XTopoDS_Vertex, XTopoDS_Edge, XGeom_Surface, XTopLoc_Location): PrivateScope, Public, Static, HideBySig
    Parameter(XTopoDS_Vertex, XTopoDS_Edge, XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    Parameter(XTopoDS_Vertex, XTopoDS_Edge): PrivateScope, Public, Static, HideBySig
    Parameters(XTopoDS_Vertex, XTopoDS_Face): PrivateScope, Public, Static, HideBySig
    MaxTolerance(XTopoDS_Shape, XTopAbs_ShapeEnum): PrivateScope, Public, Static, HideBySig
Class TKBRep.XTopExp_Explorer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XTopoDS_Shape, XTopAbs_ShapeEnum, XTopAbs_ShapeEnum): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TopExp_Explorer*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    TopExp_Explorer* IHandle 'get set' : 
  Methods:
    SetExplorerHandle(TopExp_Explorer*): PrivateScope, Public, HideBySig
    GetExplorer(): PrivateScope, Public, HideBySig
    Init(XTopoDS_Shape, XTopAbs_ShapeEnum, XTopAbs_ShapeEnum): PrivateScope, Public, HideBySig
    More(): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    Current(): PrivateScope, Public, HideBySig
    ReInit(): PrivateScope, Public, HideBySig
    Depth(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Destroy(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(TopExp_Explorer*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopExp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    MapShapes(XTopoDS_Shape, NCollection_Map<TopoDS_Shape\,TopTools_ShapeMapHasher>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    MapShapes(XTopoDS_Shape, NCollection_IndexedMap<TopoDS_Shape\,TopTools_ShapeMapHasher>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    MapShapes(XTopoDS_Shape, XTopAbs_ShapeEnum, NCollection_IndexedMap<TopoDS_Shape\,TopTools_ShapeMapHasher>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    MapShapesAndAncestors(XTopoDS_Shape, XTopAbs_ShapeEnum, XTopAbs_ShapeEnum, NCollection_IndexedDataMap<TopoDS_Shape\,NCollection_List<TopoDS_Shape>\,TopTools_ShapeMapHasher>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    MapShapesAndUniqueAncestors(XTopoDS_Shape, XTopAbs_ShapeEnum, XTopAbs_ShapeEnum, NCollection_IndexedDataMap<TopoDS_Shape\,NCollection_List<TopoDS_Shape>\,TopTools_ShapeMapHasher>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    FirstVertex(XTopoDS_Edge, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    LastVertex(XTopoDS_Edge, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Vertices(XTopoDS_Wire, XTopoDS_Vertex, XTopoDS_Vertex): PrivateScope, Public, Static, HideBySig
    Vertices(XTopoDS_Edge, XTopoDS_Vertex, XTopoDS_Vertex, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CommonVertex(XTopoDS_Edge, XTopoDS_Edge, XTopoDS_Vertex): PrivateScope, Public, Static, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_HShape> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_HShape: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(TKBRep.XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<TopoDS_HShape> IHandle 'get set' : 
  Methods:
    Shape(): PrivateScope, Public, HideBySig
    Shape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    GetHShape(TopoDS_HShape*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ChangeShape(): PrivateScope, Public, HideBySig
    get_IHandle(handle<TopoDS_HShape>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<TopoDS_HShape>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XTopoDS_HShape(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TVertex> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TVertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TVertex>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTVertexHandle(handle<TopoDS_TVertex>*): PrivateScope, Public, HideBySig
    GetTVertex(handle<TopoDS_TVertex>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TVertex(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TEdge> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TEdge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TEdge>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTEdgeHandle(handle<TopoDS_TEdge>*): PrivateScope, Public, HideBySig
    GetTEdge(handle<TopoDS_TEdge>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TEdge(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TWire> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TWire: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TWire>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTWireHandle(handle<TopoDS_TWire>*): PrivateScope, Public, HideBySig
    GetTWire(handle<TopoDS_TWire>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    EmptyCopy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TWire(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TFace> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TFace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TFace>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTFaceHandle(handle<TopoDS_TFace>*): PrivateScope, Public, HideBySig
    GetTFace(handle<TopoDS_TFace>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    EmptyCopy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TFace(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TShell> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TShell: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TShell>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTShellHandle(handle<TopoDS_TShell>*): PrivateScope, Public, HideBySig
    GetTShell(handle<TopoDS_TShell>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    EmptyCopy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TShell(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TSolid> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TSolid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TSolid>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTSolidHandle(handle<TopoDS_TSolid>*): PrivateScope, Public, HideBySig
    GetTSolid(handle<TopoDS_TSolid>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    EmptyCopy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TSolid(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TCompSolid> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TCompSolid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TCompSolid>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTCompSolidHandle(handle<TopoDS_TCompSolid>*): PrivateScope, Public, HideBySig
    GetTCompSolid(handle<TopoDS_TCompSolid>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    EmptyCopy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TCompSolid(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<TopoDS_TCompound> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKBRep.XTopoDS_TCompound: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKBRep.XTopoDS_TShape
    Void .ctor(opencascade.handle<TopoDS_TCompound>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<TopoDS_TShape> IHandle 'get set' : 
  Methods:
    SetTCompoundHandle(handle<TopoDS_TCompound>*): PrivateScope, Public, HideBySig
    GetTCompound(handle<TopoDS_TCompound>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTShape(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig
    ShapeType(): PrivateScope, Public, Virtual, HideBySig
    EmptyCopy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<TopoDS_TShape>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XTopoDS_TCompound(): PrivateScope, Public, HideBySig
Class TKBRep.XTopoDS: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Vertex(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Edge(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Wire(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Face(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Shell(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Solid(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    CompSolid(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
    Compound(XTopoDS_Shape): PrivateScope, Public, Static, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_BoundedCurve> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_BoundedCurve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Curve
    Void .ctor(opencascade.handle<Geom_BoundedCurve>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetBoundedCurveHandle(handle<Geom_BoundedCurve>*): PrivateScope, Public, HideBySig
    GetBoundedCurve(handle<Geom_BoundedCurve>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCurve(handle<Geom_Curve>*): PrivateScope, Public, Virtual, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    EndPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NCollection_Haft<opencascade::handle<Geom_Conic> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Conic: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Curve
    Void .ctor(opencascade.handle<Geom_Conic>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetConic(handle<Geom_Conic>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCurve(handle<Geom_Curve>*): PrivateScope, Public, Virtual, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    SetConicHandle(handle<Geom_Conic>*): PrivateScope, Public, HideBySig
    SetAxis(xgp_Ax1): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax2): PrivateScope, Public, HideBySig
    Axis(): PrivateScope, Public, HideBySig
    Eccentricity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Location(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    XAxis(): PrivateScope, Public, HideBySig
    YAxis(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, Virtual, HideBySig
    ReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig
    Continuity(): PrivateScope, Public, Virtual, HideBySig
    IsCN(Int32): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom_Conic(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Circle> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Circle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Conic
    Void .ctor(TKMath.xgp_Ax2, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetCircle(handle<Geom_Circle>*): PrivateScope, Public, HideBySig
    GetConic(handle<Geom_Conic>*): PrivateScope, Public, Virtual, HideBySig
    GetCurve(handle<Geom_Curve>*): PrivateScope, Public, Virtual, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    SetCircleHandle(handle<Geom_Circle>*): PrivateScope, Public, HideBySig
    SetCirc(xgp_Circ): PrivateScope, Public, HideBySig
    SetRadius(Double): PrivateScope, Public, HideBySig
    Circ(): PrivateScope, Public, HideBySig
    Radius(): PrivateScope, Public, HideBySig
    ReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig
    Eccentricity(): PrivateScope, Public, Virtual, HideBySig
    FirstParameter(): PrivateScope, Public, Virtual, HideBySig
    LastParameter(): PrivateScope, Public, Virtual, HideBySig
    IsClosed(): PrivateScope, Public, Virtual, HideBySig
    IsPeriodic(): PrivateScope, Public, Virtual, HideBySig
    D0(Double, xgp_Pnt): PrivateScope, Public, Virtual, HideBySig
    D1(Double, xgp_Pnt, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D2(Double, xgp_Pnt, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D3(Double, xgp_Pnt, xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    DN(Double, Int32): PrivateScope, Public, Virtual, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom_Circle(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Vector> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Vector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Geometry
    Void .ctor(opencascade.handle<Geom_Vector>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetVectorHandle(handle<Geom_Vector>*): PrivateScope, Public, HideBySig
    GetVector(handle<Geom_Vector>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    Reversed(): PrivateScope, Public, HideBySig
    Angle(XGeom_Vector): PrivateScope, Public, HideBySig
    AngleWithRef(XGeom_Vector, XGeom_Vector): PrivateScope, Public, HideBySig
    Coord(Double, Double, Double): PrivateScope, Public, HideBySig
    Magnitude(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SquareMagnitude(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    X(): PrivateScope, Public, HideBySig
    Y(): PrivateScope, Public, HideBySig
    Z(): PrivateScope, Public, HideBySig
    Cross(XGeom_Vector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Crossed(XGeom_Vector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CrossCross(XGeom_Vector, XGeom_Vector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CrossCrossed(XGeom_Vector, XGeom_Vector): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dot(XGeom_Vector): PrivateScope, Public, HideBySig
    DotCross(XGeom_Vector, XGeom_Vector): PrivateScope, Public, HideBySig
    Vec(): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom_Vector(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Direction> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Direction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Vector
    Void .ctor(TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetVector(handle<Geom_Vector>*): PrivateScope, Public, Virtual, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    SetCoord(Double, Double, Double): PrivateScope, Public, HideBySig
    SetDir(xgp_Dir): PrivateScope, Public, HideBySig
    SetX(Double): PrivateScope, Public, HideBySig
    SetY(Double): PrivateScope, Public, HideBySig
    SetZ(Double): PrivateScope, Public, HideBySig
    Dir(): PrivateScope, Public, HideBySig
    Magnitude(): PrivateScope, Public, Virtual, HideBySig
    SquareMagnitude(): PrivateScope, Public, Virtual, HideBySig
    Cross(XGeom_Vector): PrivateScope, Public, Virtual, HideBySig
    CrossCross(XGeom_Vector, XGeom_Vector): PrivateScope, Public, Virtual, HideBySig
    Crossed(XGeom_Vector): PrivateScope, Public, Virtual, HideBySig
    CrossCrossed(XGeom_Vector, XGeom_Vector): PrivateScope, Public, Virtual, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom_Direction(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Ellipse> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Ellipse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Conic
    Void .ctor(opencascade.handle<Geom_Ellipse>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetEllipseHandle(handle<Geom_Ellipse>*): PrivateScope, Public, HideBySig
    GetConic(handle<Geom_Conic>*): PrivateScope, Public, Virtual, HideBySig
    GetCurve(handle<Geom_Curve>*): PrivateScope, Public, Virtual, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    SetElips(xgp_Elips): PrivateScope, Public, HideBySig
    SetMajorRadius(Double): PrivateScope, Public, HideBySig
    SetMinorRadius(Double): PrivateScope, Public, HideBySig
    Elips(): PrivateScope, Public, HideBySig
    ReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig
    Directrix1(): PrivateScope, Public, HideBySig
    Directrix2(): PrivateScope, Public, HideBySig
    Eccentricity(): PrivateScope, Public, Virtual, HideBySig
    Focal(): PrivateScope, Public, HideBySig
    Focus1(): PrivateScope, Public, HideBySig
    Focus2(): PrivateScope, Public, HideBySig
    MajorRadius(): PrivateScope, Public, HideBySig
    MinorRadius(): PrivateScope, Public, HideBySig
    Parameter(): PrivateScope, Public, HideBySig
    FirstParameter(): PrivateScope, Public, Virtual, HideBySig
    LastParameter(): PrivateScope, Public, Virtual, HideBySig
    IsClosed(): PrivateScope, Public, Virtual, HideBySig
    IsPeriodic(): PrivateScope, Public, Virtual, HideBySig
    D0(Double, xgp_Pnt): PrivateScope, Public, Virtual, HideBySig
    D1(Double, xgp_Pnt, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D2(Double, xgp_Pnt, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D3(Double, xgp_Pnt, xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    DN(Double, Int32): PrivateScope, Public, Virtual, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom_Ellipse(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Line> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Line: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Curve
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Dir): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<Geom_Line>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Lin): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax1): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetLineHandle(handle<Geom_Line>*): PrivateScope, Public, HideBySig
    GetHLine(handle<Geom_Line>*): PrivateScope, Public, HideBySig
    GetCurve(handle<Geom_Curve>*): PrivateScope, Public, Virtual, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    SetLin(xgp_Lin): PrivateScope, Public, HideBySig
    SetDirection(xgp_Dir): PrivateScope, Public, HideBySig
    SetLocation(xgp_Pnt): PrivateScope, Public, HideBySig
    SetPosition(xgp_Ax1): PrivateScope, Public, HideBySig
    Lin(): PrivateScope, Public, HideBySig
    Position(): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, Virtual, HideBySig
    ReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig
    FirstParameter(): PrivateScope, Public, Virtual, HideBySig
    LastParameter(): PrivateScope, Public, Virtual, HideBySig
    IsClosed(): PrivateScope, Public, Virtual, HideBySig
    IsPeriodic(): PrivateScope, Public, Virtual, HideBySig
    Continuity(): PrivateScope, Public, Virtual, HideBySig
    IsCN(Int32): PrivateScope, Public, Virtual, HideBySig
    D0(Double, xgp_Pnt): PrivateScope, Public, Virtual, HideBySig
    D1(Double, xgp_Pnt, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D2(Double, xgp_Pnt, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D3(Double, xgp_Pnt, xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    DN(Double, Int32): PrivateScope, Public, Virtual, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    TransformedParameter(Double, xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    ParametricTransformation(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom_Line(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_Point> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_Point: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_Geometry
    Void .ctor(opencascade.handle<Geom_Point>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetNativeHandle(handle<Geom_Point>*): PrivateScope, Public, HideBySig
    GetPoint(handle<Geom_Point>*): PrivateScope, Public, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    Coord(Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Pnt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    X(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Y(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Z(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Distance(XGeom_Point): PrivateScope, Public, HideBySig
    SquareDistance(XGeom_Point): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XGeom_Point(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<Geom_TrimmedCurve> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKG3d.XGeom_TrimmedCurve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKG3d.XGeom_BoundedCurve
    Void .ctor(TKG3d.XGeom_Curve, Double, Double, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<Geom_TrimmedCurve>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetTrimmedCurveHandle(handle<Geom_TrimmedCurve>*): PrivateScope, Public, HideBySig
    GetTrimmedCurve(handle<Geom_TrimmedCurve>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBoundedCurve(handle<Geom_BoundedCurve>*): PrivateScope, Public, Virtual, HideBySig
    GetCurve(handle<Geom_Curve>*): PrivateScope, Public, Virtual, HideBySig
    GetGeometry(handle<Geom_Geometry>*): PrivateScope, Public, Virtual, HideBySig
    Reverse(): PrivateScope, Public, Virtual, HideBySig
    ReversedParameter(Double): PrivateScope, Public, Virtual, HideBySig
    SetTrim(Double, Double, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    BasisCurve(): PrivateScope, Public, HideBySig
    Continuity(): PrivateScope, Public, Virtual, HideBySig
    IsCN(Int32): PrivateScope, Public, Virtual, HideBySig
    EndPoint(): PrivateScope, Public, Virtual, HideBySig
    FirstParameter(): PrivateScope, Public, Virtual, HideBySig
    IsClosed(): PrivateScope, Public, Virtual, HideBySig
    IsPeriodic(): PrivateScope, Public, Virtual, HideBySig
    Period(): PrivateScope, Public, Virtual, HideBySig
    LastParameter(): PrivateScope, Public, Virtual, HideBySig
    StartPoint(): PrivateScope, Public, Virtual, HideBySig
    D0(Double, xgp_Pnt): PrivateScope, Public, Virtual, HideBySig
    D1(Double, xgp_Pnt, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D2(Double, xgp_Pnt, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    D3(Double, xgp_Pnt, xgp_Vec, xgp_Vec, xgp_Vec): PrivateScope, Public, Virtual, HideBySig
    DN(Double, Int32): PrivateScope, Public, Virtual, HideBySig
    Transform(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    TransformedParameter(Double, xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    ParametricTransformation(xgp_Trsf): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class TKGeomBase.xgce_Root: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(gce_Root*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    gce_Root* IHandle 'get set' : 
  Methods:
    SetRoot(gce_Root*): PrivateScope, Public, HideBySig
    GetRoot(): PrivateScope, Public, HideBySig
    IsDone(): PrivateScope, Public, HideBySig
    Status(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(gce_Root*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct xgce_ErrorType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    xgce_ErrorType gce_Done = 0 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_ConfusedPoints = 1 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_NegativeRadius = 2 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_ColinearPoints = 3 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_IntersectionError = 4 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_NullAxis = 5 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_NullAngle = 6 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_NullRadius = 7 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_InvertAxis = 8 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_BadAngle = 9 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_InvertRadius = 10 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_NullFocusLength = 11 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_NullVector = 12 : Public, Static, Literal, HasDefault
    xgce_ErrorType gce_BadEquation = 13 : Public, Static, Literal, HasDefault
Class TKGeomBase.XGC_Root: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(GC_Root*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    GC_Root* IHandle 'get set' : 
  Methods:
    SetRoot(GC_Root*): PrivateScope, Public, HideBySig
    GetRoot(): PrivateScope, Public, HideBySig
    IsDone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Status(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_IHandle(GC_Root*): PrivateScope, Public, HideBySig, SpecialName
Class TKGeomBase.XGC_MakeArcOfCircle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKGeomBase.XGC_Root
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Vec, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ, TKMath.xgp_Pnt, TKMath.xgp_Pnt, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ, TKMath.xgp_Pnt, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Circ, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(GC_MakeArcOfCircle*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    GC_MakeArcOfCircle* IHandle 'get set' : 
  Methods:
    SetMakeArcOfCircleHandle(GC_MakeArcOfCircle*): PrivateScope, Public, HideBySig
    GetMakeArcOfCircle(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    IsDone(): PrivateScope, Public, Virtual, HideBySig
    Status(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(GC_MakeArcOfCircle*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKGeomBase.XGC_MakeArcOfEllipse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKGeomBase.XGC_Root
    Void .ctor(TKMath.xgp_Elips, TKMath.xgp_Pnt, TKMath.xgp_Pnt, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips, TKMath.xgp_Pnt, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(GC_MakeArcOfEllipse*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    GC_MakeArcOfEllipse* IHandle 'get set' : 
  Methods:
    SetMakeArcOfEllipseHandle(GC_MakeArcOfEllipse*): PrivateScope, Public, HideBySig
    GetMakeArcOfEllipse(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    IsDone(): PrivateScope, Public, Virtual, HideBySig
    Status(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(GC_MakeArcOfEllipse*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKGeomBase.XGC_MakeArcOfHyperbola: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKGeomBase.XGC_Root
    Void .ctor(TKMath.xgp_Hypr, TKMath.xgp_Pnt, TKMath.xgp_Pnt, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Hypr, TKMath.xgp_Pnt, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Hypr, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(GC_MakeArcOfHyperbola*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    GC_MakeArcOfHyperbola* IHandle 'get set' : 
  Methods:
    SetMakeArcOfHyperbolaHandle(GC_MakeArcOfHyperbola*): PrivateScope, Public, HideBySig
    GetMakeArcOfHyperbola(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    IsDone(): PrivateScope, Public, Virtual, HideBySig
    Status(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(GC_MakeArcOfHyperbola*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKGeomBase.XGC_MakeEllipse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKGeomBase.XGC_Root
    Void .ctor(TKMath.xgp_Pnt, TKMath.xgp_Pnt, TKMath.xgp_Pnt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Ax2, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKMath.xgp_Elips): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(GC_MakeEllipse*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    GC_MakeEllipse* IHandle 'get set' : 
  Methods:
    SetMakeEllipseHandle(GC_MakeEllipse*): PrivateScope, Public, HideBySig
    GetMakeEllipse(): PrivateScope, Public, HideBySig
    Value(): PrivateScope, Public, HideBySig
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    IsDone(): PrivateScope, Public, Virtual, HideBySig
    Status(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(GC_MakeEllipse*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class TKGeomBase.XGeomTools: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Dump(XGeom2d_Curve&, basic_ostream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Dump(XGeom_Curve&, basic_ostream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Dump(XGeom_Surface&, basic_ostream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Write(XGeom2d_Curve&, basic_ostream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Write(XGeom_Curve&, basic_ostream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Write(XGeom_Surface&, basic_ostream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Read(XGeom2d_Curve&, basic_istream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Read(XGeom_Curve&, basic_istream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    Read(XGeom_Surface&, basic_istream<char\,std::char_traits<char> >&): PrivateScope, Public, Static, HideBySig
    SetUndefinedTypeHandler(handle<GeomTools_UndefinedTypeHandler>* IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig
    GetUndefinedTypeHandler(handle<GeomTools_UndefinedTypeHandler>*): PrivateScope, Public, Static, HideBySig
    GetReal(basic_istream<char\,std::char_traits<char> >&, Double&): PrivateScope, Public, Static, HideBySig
Class NCollection_Haft<opencascade::handle<V3d_Viewer> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XV3d_Viewer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<V3d_Viewer>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<Graphic3d_GraphicDriver>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<V3d_Viewer> IHandle 'get set' : 
  Methods:
    IsActive(): PrivateScope, Public, HideBySig
    Grid(handle<Aspect_Grid>*): PrivateScope, Public, HideBySig
    GridType(): PrivateScope, Public, HideBySig
    GridDrawMode(): PrivateScope, Public, HideBySig
    RectangularGridValues(Double&, Double&, Double&, Double&, Double&): PrivateScope, Public, HideBySig
    SetRectangularGridValues(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    CircularGridValues(Double&, Double&, Double&, Int32&, Double&): PrivateScope, Public, HideBySig
    SetCircularGridValues(Double, Double, Double, Int32, Double): PrivateScope, Public, HideBySig
    CircularGridGraphicValues(Double&, Double&): PrivateScope, Public, HideBySig
    SetCircularGridGraphicValues(Double, Double): PrivateScope, Public, HideBySig
    RectangularGridGraphicValues(Double&, Double&, Double&): PrivateScope, Public, HideBySig
    SetRectangularGridGraphicValues(Double, Double, Double): PrivateScope, Public, HideBySig
    ShowGridEcho(XV3d_View, Graphic3d_Vertex* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    HideGridEcho(XV3d_View): PrivateScope, Public, HideBySig
    get_IHandle(handle<V3d_Viewer>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<V3d_Viewer>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ~XV3d_Viewer(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
    SetViewerHandle(handle<V3d_Viewer>*): PrivateScope, Public, HideBySig
    GetViewer(handle<V3d_Viewer>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IfMoreViews(): PrivateScope, Public, HideBySig
    CreateView(): PrivateScope, Public, HideBySig
    SetViewOn(XV3d_View): PrivateScope, Public, HideBySig
    SetViewOn(): PrivateScope, Public, HideBySig
    SetViewOff(XV3d_View): PrivateScope, Public, HideBySig
    SetViewOff(): PrivateScope, Public, HideBySig
    Update(): PrivateScope, Public, HideBySig
    Redraw(): PrivateScope, Public, HideBySig
    RedrawImmediate(): PrivateScope, Public, HideBySig
    Invalidate(): PrivateScope, Public, HideBySig
    Remove(): PrivateScope, Public, HideBySig
    Driver(handle<Graphic3d_GraphicDriver>*): PrivateScope, Public, HideBySig
    StructureManager(handle<Graphic3d_StructureManager>*): PrivateScope, Public, HideBySig
    DefaultRenderingParams(Graphic3d_RenderingParams*): PrivateScope, Public, HideBySig
    SetDefaultRenderingParams(Graphic3d_RenderingParams* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetDefaultBackgroundColor(XQuantity_Color): PrivateScope, Public, HideBySig
    GetGradientBackground(Aspect_GradientBackground*): PrivateScope, Public, HideBySig
    SetDefaultBgGradientColors(XQuantity_Color, XQuantity_Color, XAspect_GradientFillMethod): PrivateScope, Public, HideBySig
    DefaultViewSize(): PrivateScope, Public, HideBySig
    SetDefaultViewSize(Double): PrivateScope, Public, HideBySig
    DefaultViewProj(): PrivateScope, Public, HideBySig
    SetDefaultViewProj(XV3d_TypeOfOrientation): PrivateScope, Public, HideBySig
    DefaultVisualization(): PrivateScope, Public, HideBySig
    SetDefaultVisualization(XV3d_TypeOfVisualization): PrivateScope, Public, HideBySig
    DefaultShadingModel(): PrivateScope, Public, HideBySig
    SetDefaultShadingModel(XGraphic3d_TypeOfShadingModel): PrivateScope, Public, HideBySig
    DefaultTypeOfView(): PrivateScope, Public, HideBySig
    SetDefaultTypeOfView(XV3d_TypeOfView): PrivateScope, Public, HideBySig
    DefaultBackgroundColor(): PrivateScope, Public, HideBySig
    DefaultBgGradientColors(XQuantity_Color, XQuantity_Color): PrivateScope, Public, HideBySig
    GetAllZLayers(NCollection_Sequence<int>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    AddZLayer(Int32* IsImplicitlyDereferenced, Graphic3d_ZLayerSettings* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    InsertLayerBefore(Int32* IsImplicitlyDereferenced, Graphic3d_ZLayerSettings* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    InsertLayerAfter(Int32* IsImplicitlyDereferenced, Graphic3d_ZLayerSettings* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    RemoveZLayer(Int32): PrivateScope, Public, HideBySig
    ZLayerSettings(Graphic3d_ZLayerSettings*, Int32): PrivateScope, Public, HideBySig
    SetZLayerSettings(Int32, Graphic3d_ZLayerSettings* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ActiveViewIterator(NCollection_TListIterator<opencascade::handle<V3d_View> >*): PrivateScope, Public, HideBySig
    InitActiveViews(): PrivateScope, Public, HideBySig
    MoreActiveViews(): PrivateScope, Public, HideBySig
    NextActiveViews(): PrivateScope, Public, HideBySig
    ActiveView(): PrivateScope, Public, HideBySig
    LastActiveView(): PrivateScope, Public, HideBySig
    DefinedViewIterator(NCollection_TListIterator<opencascade::handle<V3d_View> >*): PrivateScope, Public, HideBySig
    InitDefinedViews(): PrivateScope, Public, HideBySig
    MoreDefinedViews(): PrivateScope, Public, HideBySig
    NextDefinedViews(): PrivateScope, Public, HideBySig
    DefinedView(): PrivateScope, Public, HideBySig
    SetDefaultLights(): PrivateScope, Public, HideBySig
    SetLightOn(): PrivateScope, Public, HideBySig
    SetLightOn(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetLightOff(): PrivateScope, Public, HideBySig
    SetLightOff(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    AddLight(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    DelLight(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    UpdateLights(): PrivateScope, Public, HideBySig
    IsGlobalLight(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ActiveLightIterator(NCollection_TListIterator<opencascade::handle<Graphic3d_CLight> >*): PrivateScope, Public, HideBySig
    InitActiveLights(): PrivateScope, Public, HideBySig
    MoreActiveLights(): PrivateScope, Public, HideBySig
    NextActiveLights(): PrivateScope, Public, HideBySig
    ActiveLight(handle<Graphic3d_CLight>*): PrivateScope, Public, HideBySig
    DefinedLightIterator(NCollection_TListIterator<opencascade::handle<Graphic3d_CLight> >*): PrivateScope, Public, HideBySig
    InitDefinedLights(): PrivateScope, Public, HideBySig
    MoreDefinedLights(): PrivateScope, Public, HideBySig
    NextDefinedLights(): PrivateScope, Public, HideBySig
    DefinedLight(handle<Graphic3d_CLight>*): PrivateScope, Public, HideBySig
    Erase(): PrivateScope, Public, HideBySig
    UnHighlight(): PrivateScope, Public, HideBySig
    ComputedMode(): PrivateScope, Public, HideBySig
    SetComputedMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DefaultComputedMode(): PrivateScope, Public, HideBySig
    SetDefaultComputedMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    PrivilegedPlane(): PrivateScope, Public, HideBySig
    SetPrivilegedPlane(xgp_Ax3): PrivateScope, Public, HideBySig
    DisplayPrivilegedPlane(Boolean(HasFieldMarshal), Double): PrivateScope, Public, HideBySig
    ActivateGrid(XAspect_GridType, XAspect_GridDrawMode): PrivateScope, Public, HideBySig
    DeactivateGrid(): PrivateScope, Public, HideBySig
    SetGridEcho(handle<Graphic3d_AspectMarker3d>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetGridEcho(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GridEcho(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<V3d_View> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XV3d_View: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<V3d_View>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKV3d.XV3d_Viewer, TKV3d.XV3d_View): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKV3d.XV3d_Viewer, XV3d_TypeOfView): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetViewMappingDefault(): PrivateScope, Public, HideBySig
    ResetViewMapping(): PrivateScope, Public, HideBySig
    Reset(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Convert(Double, Double, Double, Int32, Int32): PrivateScope, Public, HideBySig
    Convert(Int32, Int32, Double, Double, Double): PrivateScope, Public, HideBySig
    Convert(Double, Double, Int32, Int32): PrivateScope, Public, HideBySig
    Convert(Double): PrivateScope, Public, HideBySig
    Convert(Int32, Int32, Double, Double): PrivateScope, Public, HideBySig
    Convert(Int32): PrivateScope, Public, HideBySig
    ConvertWithProj(Int32, Int32, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    ConvertToGrid(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    ConvertToGrid(Int32, Int32, Double, Double, Double): PrivateScope, Public, HideBySig
    Project(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Project(Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    BackgroundColor(): PrivateScope, Public, HideBySig
    BackgroundColor(XQuantity_TypeOfColor, Double, Double, Double): PrivateScope, Public, HideBySig
    GradientBackgroundColors(XQuantity_Color, XQuantity_Color): PrivateScope, Public, HideBySig
    GradientBackground(Aspect_GradientBackground*): PrivateScope, Public, HideBySig
    Scale(): PrivateScope, Public, HideBySig
    AxialScale(Int32, Int32, XV3d_TypeOfAxe): PrivateScope, Public, HideBySig
    AxialScale(Double, Double, Double): PrivateScope, Public, HideBySig
    Size(Double, Double): PrivateScope, Public, HideBySig
    ZSize(): PrivateScope, Public, HideBySig
    Eye(Double, Double, Double): PrivateScope, Public, HideBySig
    FocalReferencePoint(Double, Double, Double): PrivateScope, Public, HideBySig
    ProjReferenceAxe(Int32, Int32, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Depth(): PrivateScope, Public, HideBySig
    Proj(Double, Double, Double): PrivateScope, Public, HideBySig
    At(Double, Double, Double): PrivateScope, Public, HideBySig
    Up(Double, Double, Double): PrivateScope, Public, HideBySig
    Twist(): PrivateScope, Public, HideBySig
    ShadingModel(): PrivateScope, Public, HideBySig
    TextureEnv(handle<Graphic3d_TextureEnv>*): PrivateScope, Public, HideBySig
    Visualization(): PrivateScope, Public, HideBySig
    IfMoreLights(): PrivateScope, Public, HideBySig
    ActiveLightIterator(NCollection_TListIterator<opencascade::handle<Graphic3d_CLight> >*): PrivateScope, Public, HideBySig
    InitActiveLights(): PrivateScope, Public, HideBySig
    MoreActiveLights(): PrivateScope, Public, HideBySig
    NextActiveLights(): PrivateScope, Public, HideBySig
    ActiveLight(handle<Graphic3d_CLight>*): PrivateScope, Public, HideBySig
    LightLimit(): PrivateScope, Public, HideBySig
    Viewer(): PrivateScope, Public, HideBySig
    IfWindow(): PrivateScope, Public, HideBySig
    Window(handle<Aspect_Window>*): PrivateScope, Public, HideBySig
    Type(): PrivateScope, Public, HideBySig
    Pan(Int32, Int32, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Zoom(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    StartZoomAtPoint(Int32, Int32): PrivateScope, Public, HideBySig
    ZoomAtPoint(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    StartRotation(Int32, Int32, Double): PrivateScope, Public, HideBySig
    Rotation(Int32, Int32): PrivateScope, Public, HideBySig
    SetFocale(Double): PrivateScope, Public, HideBySig
    Focale(): PrivateScope, Public, HideBySig
    View(handle<Graphic3d_CView>*): PrivateScope, Public, HideBySig
    SetComputedMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ComputedMode(): PrivateScope, Public, HideBySig
    WindowFitAll(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    FitMinMax(handle<Graphic3d_Camera>* IsImplicitlyDereferenced, XBnd_Box, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetGrid(xgp_Ax3, handle<Aspect_Grid>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetGridActivity(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Dump(SByte*, Graphic3d_BufferType* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ToPixMap(Image_PixMap* IsImplicitlyDereferenced, Int32, Int32, Graphic3d_BufferType* IsImplicitlyDereferenced, Boolean(HasFieldMarshal), XV3d_StereoDumpOptions): PrivateScope, Public, HideBySig
    ToPixMap(Image_PixMap* IsImplicitlyDereferenced, V3d_ImageDumpOptions* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetBackFacingModel(XV3d_TypeOfBackfacingModel): PrivateScope, Public, HideBySig
    BackFacingModel(): PrivateScope, Public, HideBySig
    AddClipPlane(handle<Graphic3d_ClipPlane>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveClipPlane(handle<Graphic3d_ClipPlane>* IsImplicitlyDereferenced): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClipPlanes(handle<Graphic3d_SequenceOfHClipPlane>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ClipPlanes(handle<Graphic3d_SequenceOfHClipPlane>*): PrivateScope, Public, HideBySig
    PlaneLimit(): PrivateScope, Public, HideBySig
    SetCamera(handle<Graphic3d_Camera>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Camera(handle<Graphic3d_Camera>*): PrivateScope, Public, HideBySig
    DefaultCamera(handle<Graphic3d_Camera>*): PrivateScope, Public, HideBySig
    RenderingParams(Graphic3d_RenderingParams*): PrivateScope, Public, HideBySig
    ChangeRenderingParams(Graphic3d_RenderingParams*): PrivateScope, Public, HideBySig
    IsCullingEnabled(): PrivateScope, Public, HideBySig
    SetFrustumCulling(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DiagnosticInformation(NCollection_IndexedDataMap<TCollection_AsciiString\,TCollection_AsciiString\,TCollection_AsciiString>* IsImplicitlyDereferenced, XGraphic3d_DiagnosticInfo): PrivateScope, Public, HideBySig
    StatisticInformation(NCollection_IndexedDataMap<TCollection_AsciiString\,TCollection_AsciiString\,TCollection_AsciiString>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    StatisticInformation(): PrivateScope, Public, HideBySig
    GravityPoint(): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
    SetViewHandle(handle<V3d_View>*): PrivateScope, Public, HideBySig
    GetView(handle<V3d_View>*): PrivateScope, Public, HideBySig
    SetWindow(handle<Aspect_Window>* IsImplicitlyDereferenced, Void*): PrivateScope, Public, HideBySig
    SetMagnify(handle<Aspect_Window>* IsImplicitlyDereferenced, XV3d_View, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Remove(): PrivateScope, Public, HideBySig
    Update(): PrivateScope, Public, HideBySig
    Redraw(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RedrawImmediate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Invalidate(): PrivateScope, Public, HideBySig
    IsInvalidated(): PrivateScope, Public, HideBySig
    IsInvalidatedImmediate(): PrivateScope, Public, HideBySig
    InvalidateImmediate(): PrivateScope, Public, HideBySig
    MustBeResized(): PrivateScope, Public, HideBySig
    DoMapping(): PrivateScope, Public, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    UpdateLights(): PrivateScope, Public, HideBySig
    SetAutoZFitMode(Boolean(HasFieldMarshal), Double): PrivateScope, Public, HideBySig
    AutoZFitMode(): PrivateScope, Public, HideBySig
    AutoZFitScaleFactor(): PrivateScope, Public, HideBySig
    AutoZFit(): PrivateScope, Public, HideBySig
    ZFitAll(Double): PrivateScope, Public, HideBySig
    SetBackgroundColor(XQuantity_Color): PrivateScope, Public, HideBySig
    SetBackgroundColor(XQuantity_TypeOfColor, Double, Double, Double): PrivateScope, Public, HideBySig
    SetBgGradientColors(XQuantity_Color, XQuantity_Color, XAspect_GradientFillMethod, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetBgGradientStyle(XAspect_GradientFillMethod, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetBackgroundImage(SByte*, XAspect_FillMethod, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetBgImageStyle(XAspect_FillMethod, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetBackgroundCubeMap(handle<Graphic3d_CubeMap>* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetAxis(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    SetShadingModel(XGraphic3d_TypeOfShadingModel): PrivateScope, Public, HideBySig
    SetTextureEnv(handle<Graphic3d_TextureEnv>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetVisualization(XV3d_TypeOfVisualization): PrivateScope, Public, HideBySig
    SetLightOn(): PrivateScope, Public, HideBySig
    SetLightOn(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetLightOff(): PrivateScope, Public, HideBySig
    SetLightOff(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    IsActiveLight(handle<Graphic3d_CLight>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    SetImmediateUpdate(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ZBufferTriedronSetup(XQuantity_Color, XQuantity_Color, XQuantity_Color, Double, Double, Int32): PrivateScope, Public, HideBySig
    TriedronDisplay(XAspect_TypeOfTriedronPosition, XQuantity_Color, Double, XV3d_TypeOfVisualization): PrivateScope, Public, HideBySig
    TriedronErase(): PrivateScope, Public, HideBySig
    GetGraduatedTrihedron(Graphic3d_GraduatedTrihedron*): PrivateScope, Public, HideBySig
    GraduatedTrihedronDisplay(Graphic3d_GraduatedTrihedron* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GraduatedTrihedronErase(): PrivateScope, Public, HideBySig
    SetFront(): PrivateScope, Public, HideBySig
    Rotate(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Rotate(XV3d_TypeOfAxe, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Rotate(XV3d_TypeOfAxe, Double, Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Rotate(Double, Double, Double, Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Rotate(Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Move(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Move(XV3d_TypeOfAxe, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Move(Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Translate(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Translate(XV3d_TypeOfAxe, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Translate(Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Place(Int32, Int32, Double): PrivateScope, Public, HideBySig
    Turn(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Turn(V3d_TypeOfAxe, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Turn(Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetTwist(Double): PrivateScope, Public, HideBySig
    SetEye(Double, Double, Double): PrivateScope, Public, HideBySig
    SetDepth(Double): PrivateScope, Public, HideBySig
    SetProj(XV3d_TypeOfOrientation, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetProj(Double, Double, Double): PrivateScope, Public, HideBySig
    SetAt(Double, Double, Double): PrivateScope, Public, HideBySig
    SetUp(XV3d_TypeOfOrientation): PrivateScope, Public, HideBySig
    SetUp(Double, Double, Double): PrivateScope, Public, HideBySig
    SetViewOrientationDefault(): PrivateScope, Public, HideBySig
    ResetViewOrientation(): PrivateScope, Public, HideBySig
    Panning(Double, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetCenter(Int32, Int32): PrivateScope, Public, HideBySig
    SetSize(Double): PrivateScope, Public, HideBySig
    SetZSize(Double): PrivateScope, Public, HideBySig
    SetZoom(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetScale(Double): PrivateScope, Public, HideBySig
    SetAxialScale(Double, Double, Double): PrivateScope, Public, HideBySig
    FitAll(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    FitAll(XBnd_Box, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FitAll(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DepthFitAll(Double, Double): PrivateScope, Public, HideBySig
    WindowFit(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<OpenGl_GraphicDriver> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class OCCTProxy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    InitViewer(IntPtr): PrivateScope, Public, HideBySig
    Dump(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    RedrawView(): PrivateScope, Public, HideBySig
    UpdateView(): PrivateScope, Public, HideBySig
    SetDegenerateModeOn(): PrivateScope, Public, HideBySig
    SetDegenerateModeOff(): PrivateScope, Public, HideBySig
    WindowFitAll(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Place(Int32, Int32, Single): PrivateScope, Public, HideBySig
    Zoom(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Pan(Int32, Int32): PrivateScope, Public, HideBySig
    Rotation(Int32, Int32): PrivateScope, Public, HideBySig
    StartRotation(Int32, Int32): PrivateScope, Public, HideBySig
    Select(): PrivateScope, Public, HideBySig
    Select(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    MoveTo(Int32, Int32): PrivateScope, Public, HideBySig
    ShiftSelect(): PrivateScope, Public, HideBySig
    ShiftSelect(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    BackgroundColor(Int32* IsImplicitlyDereferenced, Int32* IsImplicitlyDereferenced, Int32* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetBGColR(): PrivateScope, Public, HideBySig
    GetBGColG(): PrivateScope, Public, HideBySig
    GetBGColB(): PrivateScope, Public, HideBySig
    UpdateCurrentViewer(): PrivateScope, Public, HideBySig
    FrontView(): PrivateScope, Public, HideBySig
    TopView(): PrivateScope, Public, HideBySig
    LeftView(): PrivateScope, Public, HideBySig
    BackView(): PrivateScope, Public, HideBySig
    RightView(): PrivateScope, Public, HideBySig
    BottomView(): PrivateScope, Public, HideBySig
    AxoView(): PrivateScope, Public, HideBySig
    Scale(): PrivateScope, Public, HideBySig
    ZoomAllView(): PrivateScope, Public, HideBySig
    SetLight(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetGridActivity(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    SetDisplayMode(Int32): PrivateScope, Public, HideBySig
    SetColor(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetObjColR(): PrivateScope, Public, HideBySig
    GetObjColG(): PrivateScope, Public, HideBySig
    ObjectColor(Int32* IsImplicitlyDereferenced, Int32* IsImplicitlyDereferenced, Int32* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    GetObjColB(): PrivateScope, Public, HideBySig
    SetBackgroundColor(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    EraseObjects(): PrivateScope, Public, HideBySig
    GetOCCVersion(): PrivateScope, Public, HideBySig
    SetMaterial(Int32): PrivateScope, Public, HideBySig
    SetTransparency(Int32): PrivateScope, Public, HideBySig
    IsObjectSelected(): PrivateScope, Public, HideBySig
    DisplayMode(): PrivateScope, Public, HideBySig
    CreateNewView(IntPtr): PrivateScope, Public, HideBySig
    SetMustBeResized(): PrivateScope, Public, HideBySig
    SetAISContext(OCCTProxy): PrivateScope, Public, HideBySig
    GetContext(handle<AIS_InteractiveContext>*): PrivateScope, Public, HideBySig
    GetInteractiveContext(): PrivateScope, Public, HideBySig
    GetV3dView(): PrivateScope, Public, HideBySig
    ImportBrep(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ImportBrep(String): PrivateScope, Public, HideBySig
    ImportStep(TCollection_AsciiString* IsImplicitlyDereferenced, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ImportStep(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ImportStepB(TCollection_AsciiString* IsImplicitlyDereferenced, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    visit(TDF_Label* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    visitB(TDF_Label* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Display(TDF_Label* IsImplicitlyDereferenced, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ImportIges(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ExportBRep(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ExportStep(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ExportIges(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ExportVrml(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ExportStl(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    TranslateModel(String, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    InitOCCTProxy(): PrivateScope, Public, HideBySig
    ~OCCTProxy(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct XV3d_TypeOfView: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XV3d_TypeOfView V3d_ORTHOGRAPHIC = 0 : Public, Static, Literal, HasDefault
    XV3d_TypeOfView V3d_PERSPECTIVE = 1 : Public, Static, Literal, HasDefault
Struct XV3d_TypeOfAxe: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XV3d_TypeOfAxe V3d_X = 0 : Public, Static, Literal, HasDefault
    XV3d_TypeOfAxe V3d_Y = 1 : Public, Static, Literal, HasDefault
    XV3d_TypeOfAxe V3d_Z = 2 : Public, Static, Literal, HasDefault
Struct XV3d_TypeOfVisualization: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XV3d_TypeOfVisualization V3d_WIREFRAME = 0 : Public, Static, Literal, HasDefault
    XV3d_TypeOfVisualization V3d_ZBUFFER = 1 : Public, Static, Literal, HasDefault
Struct XV3d_TypeOfOrientation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XV3d_TypeOfOrientation V3d_Xpos = 0 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_Ypos = 1 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_Zpos = 2 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_Xneg = 3 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_Yneg = 4 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_Zneg = 5 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposYpos = 6 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposZpos = 7 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_YposZpos = 8 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegYneg = 9 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegYpos = 10 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegZneg = 11 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegZpos = 12 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_YnegZneg = 13 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_YnegZpos = 14 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposYneg = 15 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposZneg = 16 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_YposZneg = 17 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposYposZpos = 18 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposYnegZpos = 19 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposYposZneg = 20 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegYposZpos = 21 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XposYnegZneg = 22 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegYposZneg = 23 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegYnegZpos = 24 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_XnegYnegZneg = 25 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_AxoLeft = 24 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_AxoRight = 19 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_Front = 4 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_Back = 1 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_Top = 2 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_Bottom = 5 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_Left = 3 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Zup_Right = 0 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_AxoLeft = 21 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_AxoRight = 18 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_Front = 2 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_Back = 5 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_Top = 1 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_Bottom = 4 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_Left = 0 : Public, Static, Literal, HasDefault
    XV3d_TypeOfOrientation V3d_TypeOfOrientation_Yup_Right = 3 : Public, Static, Literal, HasDefault
Struct XV3d_StereoDumpOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XV3d_StereoDumpOptions V3d_SDO_MONO = 0 : Public, Static, Literal, HasDefault
    XV3d_StereoDumpOptions V3d_SDO_LEFT_EYE = 1 : Public, Static, Literal, HasDefault
    XV3d_StereoDumpOptions V3d_SDO_RIGHT_EYE = 2 : Public, Static, Literal, HasDefault
    XV3d_StereoDumpOptions V3d_SDO_BLENDED = 3 : Public, Static, Literal, HasDefault
Struct XV3d_TypeOfBackfacingModel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XV3d_TypeOfBackfacingModel V3d_TOBM_AUTOMATIC = 0 : Public, Static, Literal, HasDefault
    XV3d_TypeOfBackfacingModel V3d_TOBM_ALWAYS_DISPLAYED = 1 : Public, Static, Literal, HasDefault
    XV3d_TypeOfBackfacingModel V3d_TOBM_NEVER_DISPLAYED = 2 : Public, Static, Literal, HasDefault
Struct XAspect_GradientFillMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_GradientFillMethod Aspect_GFM_NONE = 0 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_HOR = 1 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_VER = 2 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_DIAG1 = 3 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_DIAG2 = 4 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_CORNER1 = 5 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_CORNER2 = 6 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_CORNER3 = 7 : Public, Static, Literal, HasDefault
    XAspect_GradientFillMethod Aspect_GFM_CORNER4 = 8 : Public, Static, Literal, HasDefault
Struct XAspect_TypeOfTriedronPosition: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_TypeOfTriedronPosition Aspect_TOTP_CENTER = 0 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_TOP = 1 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_BOTTOM = 2 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_LEFT = 4 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_RIGHT = 8 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_LEFT_LOWER = 6 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_LEFT_UPPER = 5 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_RIGHT_LOWER = 10 : Public, Static, Literal, HasDefault
    XAspect_TypeOfTriedronPosition Aspect_TOTP_RIGHT_UPPER = 9 : Public, Static, Literal, HasDefault
Struct XAspect_FillMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_FillMethod Aspect_FM_NONE = 0 : Public, Static, Literal, HasDefault
    XAspect_FillMethod Aspect_FM_CENTERED = 1 : Public, Static, Literal, HasDefault
    XAspect_FillMethod Aspect_FM_TILED = 2 : Public, Static, Literal, HasDefault
    XAspect_FillMethod Aspect_FM_STRETCH = 3 : Public, Static, Literal, HasDefault
Struct XGraphic3d_DiagnosticInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_Device = 1 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_FrameBuffer = 2 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_Limits = 4 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_Memory = 8 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_NativePlatform = 16 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_Extensions = 32 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_Short = 7 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_Basic = 31 : Public, Static, Literal, HasDefault
    XGraphic3d_DiagnosticInfo Graphic3d_DiagnosticInfo_Complete = 63 : Public, Static, Literal, HasDefault
Struct XAspect_GridType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_GridType Aspect_GT_Rectangular = 0 : Public, Static, Literal, HasDefault
    XAspect_GridType Aspect_GT_Circular = 1 : Public, Static, Literal, HasDefault
Struct XAspect_GridDrawMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAspect_GridDrawMode Aspect_GDM_Lines = 0 : Public, Static, Literal, HasDefault
    XAspect_GridDrawMode Aspect_GDM_Points = 1 : Public, Static, Literal, HasDefault
    XAspect_GridDrawMode Aspect_GDM_None = 2 : Public, Static, Literal, HasDefault
Class TKV3d.XAIS_AnimationProgress: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double Pts : Public
    Double LocalPts : Public
    Double LocalNormalized : Public
Class NCollection_Haft<opencascade::handle<AIS_Animation> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XAIS_Animation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(opencascade.handle<AIS_Animation>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKernel.XTCollection_AsciiString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetAnimationHandle(handle<AIS_Animation>*): PrivateScope, Public, HideBySig
    GetAnimation(handle<AIS_Animation>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Name(): PrivateScope, Public, HideBySig
    StartPts(): PrivateScope, Public, HideBySig
    SetStartPts(Double): PrivateScope, Public, HideBySig
    Duration(): PrivateScope, Public, HideBySig
    UpdateTotalDuration(): PrivateScope, Public, HideBySig
    HasOwnDuration(): PrivateScope, Public, HideBySig
    OwnDuration(): PrivateScope, Public, HideBySig
    SetOwnDuration(Double): PrivateScope, Public, HideBySig
    Add(XAIS_Animation): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Find(XTCollection_AsciiString): PrivateScope, Public, HideBySig
    Remove(XAIS_Animation): PrivateScope, Public, HideBySig
    Replace(XAIS_Animation, XAIS_Animation): PrivateScope, Public, HideBySig
    CopyFrom(XAIS_Animation): PrivateScope, Public, HideBySig
    Children(): PrivateScope, Public, HideBySig
    StartTimer(Double, Double, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateTimer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ElapsedTime(): PrivateScope, Public, HideBySig
    Start(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Pause(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsStopped(): PrivateScope, Public, HideBySig
    Update(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct TKV3d.XAnimationState: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TKV3d.XAnimationState AnimationState_Started = 0 : Public, Static, Literal, HasDefault
    TKV3d.XAnimationState AnimationState_Stopped = 1 : Public, Static, Literal, HasDefault
    TKV3d.XAnimationState AnimationState_Paused = 2 : Public, Static, Literal, HasDefault
Class NCollection_Haft<opencascade::handle<AIS_AnimationCamera> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XAIS_AnimationCamera: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKV3d.XAIS_Animation
    Void .ctor(TKernel.XTCollection_AsciiString, TKV3d.XV3d_View): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    View(): PrivateScope, Public, HideBySig
    SetView(XV3d_View): PrivateScope, Public, HideBySig
    CameraStart(handle<Graphic3d_Camera>*): PrivateScope, Public, HideBySig
    SetCameraStart(handle<Graphic3d_Camera>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    CameraEnd(handle<Graphic3d_Camera>*): PrivateScope, Public, HideBySig
    SetCameraEnd(handle<Graphic3d_Camera>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XAIS_AnimationCamera(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<AIS_AnimationObject> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XAIS_AnimationObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKV3d.XAIS_Animation
    Void .ctor(TKernel.XTCollection_AsciiString, TKV3d.XAIS_InteractiveContext, TKV3d.XAIS_InteractiveObject, TKMath.xgp_Trsf, TKMath.xgp_Trsf): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    SetAnimationObjectHandle(handle<AIS_AnimationObject>*): PrivateScope, Public, HideBySig
    GetAnimationObject(handle<AIS_AnimationObject>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAnimation(handle<AIS_Animation>*): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XAIS_AnimationObject(): PrivateScope, Public, HideBySig
Class NCollection_Haft<opencascade::handle<AIS_Axis> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XAIS_Axis: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKV3d.XAIS_InteractiveObject
    Void .ctor(opencascade.handle<Geom_Axis1Placement>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<Geom_Axis2Placement>*, XAIS_TypeOfAxis): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(opencascade.handle<Geom_Line>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    Component(handle<Geom_Line>*): PrivateScope, Public, HideBySig
    GetAxis(handle<AIS_Axis>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInteractiveObject(handle<AIS_InteractiveObject>*): PrivateScope, Public, Virtual, HideBySig
    GetSelectableObject(handle<SelectMgr_SelectableObject>*): PrivateScope, Public, Virtual, HideBySig
    GetPresentableObject(handle<PrsMgr_PresentableObject>*): PrivateScope, Public, Virtual, HideBySig
    SetComponent(handle<Geom_Line>*): PrivateScope, Public, HideBySig
    Axis2Placement(handle<Geom_Axis2Placement>*): PrivateScope, Public, HideBySig
    SetAxis2Placement(handle<Geom_Axis2Placement>*, XAIS_TypeOfAxis): PrivateScope, Public, HideBySig
    SetAxis1Placement(handle<Geom_Axis1Placement>*): PrivateScope, Public, HideBySig
    TypeOfAxis(): PrivateScope, Public, HideBySig
    SetTypeOfAxis(XAIS_TypeOfAxis): PrivateScope, Public, HideBySig
    IsXYZAxis(): PrivateScope, Public, HideBySig
    AcceptDisplayMode(Int32): PrivateScope, Public, Virtual, HideBySig
    Compute(handle<Prs3d_Projector>*, handle<Geom_Transformation>*, handle<Graphic3d_Structure>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Signature(): PrivateScope, Public, Virtual, HideBySig
    Type(): PrivateScope, Public, Virtual, HideBySig
    SetColor(XQuantity_Color): PrivateScope, Public, Virtual, HideBySig
    SetWidth(Double IsConst): PrivateScope, Public, Virtual, HideBySig
    UnsetColor(): PrivateScope, Public, Virtual, HideBySig
    UnsetWidth(): PrivateScope, Public, Virtual, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XAIS_Axis(): PrivateScope, Public, HideBySig
Struct XAIS_TypeOfAxis: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    XAIS_TypeOfAxis AIS_TOAX_Unknown = 0 : Public, Static, Literal, HasDefault
    XAIS_TypeOfAxis AIS_TOAX_XAxis = 1 : Public, Static, Literal, HasDefault
    XAIS_TypeOfAxis AIS_TOAX_YAxis = 2 : Public, Static, Literal, HasDefault
    XAIS_TypeOfAxis AIS_TOAX_ZAxis = 3 : Public, Static, Literal, HasDefault
Class NCollection_Haft<opencascade::handle<AIS_Shape> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    op_FunctionCall(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class TKV3d.XAIS_Shape: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :TKV3d.XAIS_InteractiveObject
    Void .ctor(opencascade.handle<AIS_Shape>*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TKBRep.XTopoDS_Shape): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TopoDS_Shape*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    opencascade.handle<Standard_Transient> IHandle 'get set' : 
  Methods:
    GetShape(handle<AIS_Shape>*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetInteractiveObject(handle<AIS_InteractiveObject>*): PrivateScope, Public, Virtual, HideBySig
    GetSelectableObject(handle<SelectMgr_SelectableObject>*): PrivateScope, Public, Virtual, HideBySig
    GetPresentableObject(handle<PrsMgr_PresentableObject>*): PrivateScope, Public, Virtual, HideBySig
    Signature(): PrivateScope, Public, Virtual, HideBySig
    Type(): PrivateScope, Public, Virtual, HideBySig
    AcceptShapeDecomposition(): PrivateScope, Public, Virtual, HideBySig
    AcceptDisplayMode(Int32 IsConst): PrivateScope, Public, Virtual, HideBySig
    Shape(): PrivateScope, Public, HideBySig
    SetShape(XTopoDS_Shape): PrivateScope, Public, HideBySig
    Set(XTopoDS_Shape): PrivateScope, Public, HideBySig
    SetOwnDeviationCoefficient(Double IsConst): PrivateScope, Public, HideBySig
    SetOwnDeviationCoefficient(): PrivateScope, Public, HideBySig
    SetOwnHLRDeviationCoefficient(Double IsConst): PrivateScope, Public, HideBySig
    SetOwnHLRDeviationCoefficient(): PrivateScope, Public, HideBySig
    SetOwnDeviationAngle(Double IsConst): PrivateScope, Public, HideBySig
    SetOwnDeviationAngle(): PrivateScope, Public, HideBySig
    SetOwnHLRDeviationAngle(Double IsConst): PrivateScope, Public, HideBySig
    SetOwnHLRDeviationAngle(): PrivateScope, Public, HideBySig
    SetAngleAndDeviation(Double IsConst): PrivateScope, Public, HideBySig
    UserAngle(): PrivateScope, Public, HideBySig
    SetHLRAngleAndDeviation(Double IsConst): PrivateScope, Public, HideBySig
    OwnDeviationCoefficient(Double, Double): PrivateScope, Public, HideBySig
    OwnHLRDeviationCoefficient(Double, Double): PrivateScope, Public, HideBySig
    OwnDeviationAngle(Double, Double): PrivateScope, Public, HideBySig
    OwnHLRDeviationAngle(Double, Double): PrivateScope, Public, HideBySig
    SetTypeOfHLR(XPrs3d_TypeOfHLR): PrivateScope, Public, HideBySig
    TypeOfHLR(): PrivateScope, Public, HideBySig
    SetColor(XQuantity_Color): PrivateScope, Public, Virtual, HideBySig
    UnsetColor(): PrivateScope, Public, Virtual, HideBySig
    SetWidth(Double IsConst): PrivateScope, Public, Virtual, HideBySig
    UnsetWidth(): PrivateScope, Public, Virtual, HideBySig
    SetMaterial(XGraphic3d_MaterialAspect): PrivateScope, Public, Virtual, HideBySig
    UnsetMaterial(): PrivateScope, Public, Virtual, HideBySig
    SetTransparency(Double IsConst): PrivateScope, Public, Virtual, HideBySig
    UnsetTransparency(): PrivateScope, Public, Virtual, HideBySig
    BoundingBox(Bnd_Box*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Color(XQuantity_Color): PrivateScope, Public, Virtual, HideBySig
    Material(): PrivateScope, Public, Virtual, HideBySig
    Transparency(): PrivateScope, Public, Virtual, HideBySig
    SelectionType(Int32 IsConst): PrivateScope, Public, Static, HideBySig
    SelectionMode(XTopAbs_ShapeEnum): PrivateScope, Public, Static, HideBySig
    TextureRepeatUV(): PrivateScope, Public, HideBySig
    SetTextureRepeatUV(xgp_Pnt2d): PrivateScope, Public, HideBySig
    TextureOriginUV(): PrivateScope, Public, HideBySig
    SetTextureOriginUV(xgp_Pnt2d): PrivateScope, Public, HideBySig
    TextureScaleUV(): PrivateScope, Public, HideBySig
    SetTextureScaleUV(xgp_Pnt2d): PrivateScope, Public, HideBySig
    computeHlrPresentation(handle<Prs3d_Projector>* IsImplicitlyDereferenced, handle<Graphic3d_Structure>* IsImplicitlyDereferenced, XTopoDS_Shape, XPrs3d_Drawer): PrivateScope, Public, Static, HideBySig
    get_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IHandle(handle<Standard_Transient>*): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ~XAIS_Shape(): PrivateScope, Public, HideBySig
Class TKV3d.XGraphic3d_ZLayerSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Graphic3d_ZLayerSettings* IHandle 'get set' : 
  Methods:
    Name(TCollection_AsciiString*): PrivateScope, Public, HideBySig
    SetName(TCollection_AsciiString* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Lights(handle<Graphic3d_LightSet>*): PrivateScope, Public, HideBySig
    SetLights(handle<Graphic3d_LightSet>* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Origin(): PrivateScope, Public, HideBySig
    OriginTransformation(handle<Geom_Transformation>*): PrivateScope, Public, HideBySig
    SetOrigin(xgp_XYZ): PrivateScope, Public, HideBySig
    HasCullingDistance(): PrivateScope, Public, HideBySig
    CullingDistance(): PrivateScope, Public, HideBySig
    SetCullingDistance(Double): PrivateScope, Public, HideBySig
    HasCullingSize(): PrivateScope, Public, HideBySig
    CullingSize(): PrivateScope, Public, HideBySig
    SetCullingSize(Double): PrivateScope, Public, HideBySig
    IsImmediate(): PrivateScope, Public, HideBySig
    SetImmediate(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsRaytracable(): PrivateScope, Public, HideBySig
    SetRaytracable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UseEnvironmentTexture(): PrivateScope, Public, HideBySig
    SetEnvironmentTexture(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToEnableDepthTest(): PrivateScope, Public, HideBySig
    SetEnableDepthTest(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToEnableDepthWrite(): PrivateScope, Public, HideBySig
    SetEnableDepthWrite(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToClearDepth(): PrivateScope, Public, HideBySig
    SetClearDepth(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToRenderInDepthPrepass(): PrivateScope, Public, HideBySig
    SetRenderInDepthPrepass(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    PolygonOffset(Graphic3d_PolygonOffset*): PrivateScope, Public, HideBySig
    SetPolygonOffset(Graphic3d_PolygonOffset* IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    ChangePolygonOffset(Graphic3d_PolygonOffset*): PrivateScope, Public, HideBySig
    SetDepthOffsetPositive(): PrivateScope, Public, HideBySig
    SetDepthOffsetNegative(): PrivateScope, Public, HideBySig
    get_IHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IHandle(Graphic3d_ZLayerSettings*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct TKV3d.XGraphic3d_ZLayerSetting: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TKV3d.XGraphic3d_ZLayerSetting Graphic3d_ZLayerDepthTest = 1 : Public, Static, Literal, HasDefault
    TKV3d.XGraphic3d_ZLayerSetting Graphic3d_ZLayerDepthWrite = 2 : Public, Static, Literal, HasDefault
    TKV3d.XGraphic3d_ZLayerSetting Graphic3d_ZLayerDepthClear = 4 : Public, Static, Literal, HasDefault
    TKV3d.XGraphic3d_ZLayerSetting Graphic3d_ZLayerDepthOffset = 8 : Public, Static, Literal, HasDefault
